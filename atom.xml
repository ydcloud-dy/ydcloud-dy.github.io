<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>J.のblog</title>
  
  
  <link href="http://dycloud.fun/atom.xml" rel="self"/>
  
  <link href="http://dycloud.fun/"/>
  <updated>2025-04-02T08:20:22.490Z</updated>
  <id>http://dycloud.fun/</id>
  
  <author>
    <name>J.</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>10、实现统一的错误返回</title>
    <link href="http://dycloud.fun/2025/02/12/10%E3%80%81%E5%AE%9E%E7%8E%B0%E7%BB%9F%E4%B8%80%E7%9A%84%E9%94%99%E8%AF%AF%E8%BF%94%E5%9B%9E/"/>
    <id>http://dycloud.fun/2025/02/12/10%E3%80%81%E5%AE%9E%E7%8E%B0%E7%BB%9F%E4%B8%80%E7%9A%84%E9%94%99%E8%AF%AF%E8%BF%94%E5%9B%9E/</id>
    <published>2025-02-12T07:32:00.000Z</published>
    <updated>2025-04-02T08:20:22.490Z</updated>
    
    <content type="html"><![CDATA[<h1 id="10、实现统一的错误返回"><a href="#10、实现统一的错误返回" class="headerlink" title="10、实现统一的错误返回"></a>10、实现统一的错误返回</h1><p>在 Go 项目开发中，为了方便客户端处理返回，排查错误，还需要实现统一的错误返回。统一的错误返回包括以下 2 个方面:</p><ul><li>错误格式统一：返回统一的错误格式，方便客户端解析，并获取错误;</li><li>自定义业务错误码：HTTP 的错误码有限，并且不适合业务错误码。所以，在实际开发中，还需要自定义业务错误码。</li></ul><p>为了实现统一的错误返回，接下来还需要实现错误包和自定义错误码。</p><h3 id="错误返回方法"><a href="#错误返回方法" class="headerlink" title="错误返回方法"></a>错误返回方法</h3><p>先来看下错误返回的方式。在 Go 项目开发中，错误的返回方式通常有以下两种</p><ol><li>始终返回 HTTP 200 状态码，并在 HTTP 返回体中返回错误信息;</li><li>返回 HTTP 400 状态码 (Bad Request)，并在 HTTP 返回体中返回错误信息。</li></ol><h5 id="方式一-成功返回，返回体中返回错误信息"><a href="#方式一-成功返回，返回体中返回错误信息" class="headerlink" title="方式一: 成功返回，返回体中返回错误信息"></a>方式一: 成功返回，返回体中返回错误信息</h5><p>例如 Facebook API 的错误返回设计，始终返回 200 HTTP 状态码:</p><p><img src="/images/rXsIDb0OFShO1HLUDaIuJMuCFI05hhv5RZLrWRSnWIg.png" alt="image"></p><p>在上述错误返回的实现方式中，HTTP 状态码始终固定返回 200，仅需关注业务错误码，整体实现较为简单。然而，此方式存在一个明显的缺点：<strong>对于每一次 HTTP 请求，既需要检查 HTTP 状态码以判断请求是否成功，还需要解析响应体以获取业务错误码，从而判断业务逻辑是否成功</strong>。理想情况下，我们期望客户端对成功的 HTTP 请求能够直接将响应体解析为需要的 Go 结构体，并进行后续的业务逻辑处理，而不用再判断请求是否成功。</p><h5 id="方式二-失败返回，返回体中返回错误信息"><a href="#方式二-失败返回，返回体中返回错误信息" class="headerlink" title="方式二: 失败返回，返回体中返回错误信息"></a>方式二: 失败返回，返回体中返回错误信息</h5><p>Twitter API 的错误返回设计会根据错误类型返回对应的 HTTP 状态码，并在返回体中返回错误信息和自定义业务错误码。成功的业务请求则返回 200 HTTP 状态码。例如:</p><p><img src="/images/Nd4eHslgQ-f_nr0vdP10398Ln5bA6SOZgTNDKbE4sWg.png" alt="image"></p><p>方式二相比方式一，对于成功的请求不需要再次判错。然而，方式二还可以进一步优化：整数格式的业务错误码<code>215 </code>可读性较差，用户无法从<code>215</code> 直接获取任何有意义的信息。建议将其替换为语义化的字符串，例如:<code> NotFound.PostNotFound</code></p><p>Twitter API 返回的错误是一个数组，在实际开发获取错误时，需要先判断数组是否为空，如不为空，再从数组中获取错误，开发复杂度较高。建议采用更简单的错误返回格式：</p><p><img src="/images/4IIaSyAw8vxVhcMmk6Q3N9lI1VFigYNsaRsjIuleiXY.png" alt="image"></p><p>需要特别注意的是，message 字段会直接展示给外部用户，因此必须确保其内容不包含敏感信息，例如数据库的id 字段、内部组件的IP 地址、用户名等信息。返回的错误信息中，还可以根据需要返回更多字段，例如: 错误指引文档 URL 等。</p><h3 id="fastgo-错误返回设计和实现"><a href="#fastgo-错误返回设计和实现" class="headerlink" title="fastgo 错误返回设计和实现"></a>fastgo 错误返回设计和实现</h3><p>fastgo 项目错误返回格式采用了方式二，在接口失败时返回对应的 HTTP&#x2F;gRPC 状态码，并在返回体中返回具体的错误信息，例如:</p><p><img src="/images/Nc3FVmRYIaKFIasc3uemUwbsEo0YmKzqt6G2PlniwZI.png" alt="image"></p><h5 id="指定错误码规范"><a href="#指定错误码规范" class="headerlink" title="指定错误码规范"></a>指定错误码规范</h5><p>错误码是直接暴露给用户的，因此需要设计一个易读、易懂且规范化的错误码。在设计错误码时可以根据实际需求自行设计，也可以参考其他优秀的设计方案。</p><p>一般来说，当调研某项技术实现时，建议优先参考各大公有云厂商的实现方式，例如腾讯云、阿里云、华为云等。这些公有云厂商直接面向企业和个人，专注于技术本身，拥有强大的技术团队，因此它们的设计与实现具有很高的参考价值。</p><p>经过调研，此处采用了腾讯云 AP1 3.0 的错误码设计规范。腾讯云采用了两级错误码设计。以下是两级错误码设计相较于简单错误码 (如 215、InvalidParameter) 的优势:</p><ul><li><strong>语义化</strong>:：语义化的错误码可以通过名字直接反映错误的类型，便于快速理解错误;。</li><li><strong>更加灵活：</strong> 二级错误码的格式为&lt;平台级.资源级&gt;。其中，平台级错误码是固定值，用于指代某一类错误，客户端可以利用该错误码进行通用错误处理。资源级错误码则用于更精确的错误定位。此外，服务端既可根据需求自定义错误码，也可使用默认错误码</li></ul><h5 id="fastgo-错误码定义"><a href="#fastgo-错误码定义" class="headerlink" title="fastgo 错误码定义"></a>fastgo 错误码定义</h5><p>在实现了 errorsx 错误包之后，便可以根据需要预定义项目需要的错误。这些错误，可以在代码中便捷的引用。通过直接引用预定义错误，不仅可以提高开发效率，还可以保持整个项目的错误返回是一致的。</p><p>fastgo 项目预定义了一些错误码，这些错误码位于以下 3 个文件中:</p><ul><li>internal&#x2F;pkg&#x2F;errorsx&#x2F;code.go：定义了一些通用的错误码;</li></ul><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> errorsx<span class="token keyword">import</span> <span class="token string">"net/http"</span><span class="token comment">// errorsx 预定义标准的错误.</span><span class="token keyword">var</span> <span class="token punctuation">(</span><span class="token comment">// OK 代表请求成功.</span>OK <span class="token operator">=</span> <span class="token operator">&amp;</span>ErrorX<span class="token punctuation">&#123;</span>Code<span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> Message<span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">&#125;</span><span class="token comment">// ErrInternal 表示所有未知的服务器端错误.</span>ErrInternal <span class="token operator">=</span> <span class="token operator">&amp;</span>ErrorX<span class="token punctuation">&#123;</span>Code<span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusInternalServerError<span class="token punctuation">,</span> Reason<span class="token punctuation">:</span> <span class="token string">"InternalError"</span><span class="token punctuation">,</span> Message<span class="token punctuation">:</span> <span class="token string">"Internal server error."</span><span class="token punctuation">&#125;</span><span class="token comment">// ErrNotFound 表示资源未找到.</span>ErrNotFound <span class="token operator">=</span> <span class="token operator">&amp;</span>ErrorX<span class="token punctuation">&#123;</span>Code<span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusNotFound<span class="token punctuation">,</span> Reason<span class="token punctuation">:</span> <span class="token string">"NotFound"</span><span class="token punctuation">,</span> Message<span class="token punctuation">:</span> <span class="token string">"Resource not found."</span><span class="token punctuation">&#125;</span><span class="token comment">// ErrDBRead 表示数据库读取失败.</span>ErrDBRead <span class="token operator">=</span> <span class="token operator">&amp;</span>ErrorX<span class="token punctuation">&#123;</span>Code<span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusInternalServerError<span class="token punctuation">,</span> Reason<span class="token punctuation">:</span> <span class="token string">"InternalError.DBRead"</span><span class="token punctuation">,</span> Message<span class="token punctuation">:</span> <span class="token string">"Database read failure."</span><span class="token punctuation">&#125;</span><span class="token comment">// ErrDBWrite 表示数据库写入失败.</span>ErrDBWrite <span class="token operator">=</span> <span class="token operator">&amp;</span>ErrorX<span class="token punctuation">&#123;</span>Code<span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusInternalServerError<span class="token punctuation">,</span> Reason<span class="token punctuation">:</span> <span class="token string">"InternalError.DBWrite"</span><span class="token punctuation">,</span> Message<span class="token punctuation">:</span> <span class="token string">"Database write failure."</span><span class="token punctuation">&#125;</span><span class="token comment">// ErrBind 表示请求体绑定错误.</span>ErrBind <span class="token operator">=</span> <span class="token operator">&amp;</span>ErrorX<span class="token punctuation">&#123;</span>Code<span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusBadRequest<span class="token punctuation">,</span> Reason<span class="token punctuation">:</span> <span class="token string">"BindError"</span><span class="token punctuation">,</span> Message<span class="token punctuation">:</span> <span class="token string">"Error occurred while binding the request body to the struct."</span><span class="token punctuation">&#125;</span><span class="token comment">// ErrInvalidArgument 表示参数验证失败.</span>ErrInvalidArgument <span class="token operator">=</span> <span class="token operator">&amp;</span>ErrorX<span class="token punctuation">&#123;</span>Code<span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusBadRequest<span class="token punctuation">,</span> Reason<span class="token punctuation">:</span> <span class="token string">"InvalidArgument"</span><span class="token punctuation">,</span> Message<span class="token punctuation">:</span> <span class="token string">"Argument verification failed."</span><span class="token punctuation">&#125;</span><span class="token comment">// ErrSignToken 表示签发 JWT Token 时出错.</span>ErrSignToken <span class="token operator">=</span> <span class="token operator">&amp;</span>ErrorX<span class="token punctuation">&#123;</span>Code<span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusUnauthorized<span class="token punctuation">,</span> Reason<span class="token punctuation">:</span> <span class="token string">"Unauthenticated.SignToken"</span><span class="token punctuation">,</span> Message<span class="token punctuation">:</span> <span class="token string">"Error occurred while signing the JSON web token."</span><span class="token punctuation">&#125;</span><span class="token comment">// ErrTokenInvalid 表示 JWT Token 格式无效.</span>ErrTokenInvalid <span class="token operator">=</span> <span class="token operator">&amp;</span>ErrorX<span class="token punctuation">&#123;</span>Code<span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusUnauthorized<span class="token punctuation">,</span> Reason<span class="token punctuation">:</span> <span class="token string">"Unauthenticated.TokenInvalid"</span><span class="token punctuation">,</span> Message<span class="token punctuation">:</span> <span class="token string">"Token was invalid."</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>internal&#x2F;pkg&#x2F;errorsx&#x2F;user.go：定义了用户相关的错误码;</li></ul><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> errorsx<span class="token keyword">import</span> <span class="token string">"net/http"</span><span class="token keyword">var</span> <span class="token punctuation">(</span><span class="token comment">// ErrUsernameInvalid 表示用户名不合法.</span>ErrUsernameInvalid <span class="token operator">=</span> <span class="token operator">&amp;</span>ErrorX<span class="token punctuation">&#123;</span>Code<span class="token punctuation">:</span>    http<span class="token punctuation">.</span>StatusBadRequest<span class="token punctuation">,</span>Reason<span class="token punctuation">:</span>  <span class="token string">"InvalidArgument.UsernameInvalid"</span><span class="token punctuation">,</span>Message<span class="token punctuation">:</span> <span class="token string">"Invalid username: Username must consist of letters, digits, and underscores only, and its length must be between 3 and 20 characters."</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token comment">// ErrPasswordInvalid 表示密码不合法.</span>ErrPasswordInvalid <span class="token operator">=</span> <span class="token operator">&amp;</span>ErrorX<span class="token punctuation">&#123;</span>Code<span class="token punctuation">:</span>    http<span class="token punctuation">.</span>StatusBadRequest<span class="token punctuation">,</span>Reason<span class="token punctuation">:</span>  <span class="token string">"InvalidArgument.PasswordInvalid"</span><span class="token punctuation">,</span>Message<span class="token punctuation">:</span> <span class="token string">"Password is incorrect."</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token comment">// ErrUserAlreadyExists 表示用户已存在.</span>ErrUserAlreadyExists <span class="token operator">=</span> <span class="token operator">&amp;</span>ErrorX<span class="token punctuation">&#123;</span>Code<span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusBadRequest<span class="token punctuation">,</span> Reason<span class="token punctuation">:</span> <span class="token string">"AlreadyExist.UserAlreadyExists"</span><span class="token punctuation">,</span> Message<span class="token punctuation">:</span> <span class="token string">"User already exists."</span><span class="token punctuation">&#125;</span><span class="token comment">// ErrUserNotFound 表示未找到指定用户.</span>ErrUserNotFound <span class="token operator">=</span> <span class="token operator">&amp;</span>ErrorX<span class="token punctuation">&#123;</span>Code<span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusNotFound<span class="token punctuation">,</span> Reason<span class="token punctuation">:</span> <span class="token string">"NotFound.UserNotFound"</span><span class="token punctuation">,</span> Message<span class="token punctuation">:</span> <span class="token string">"User not found."</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>internal&#x2F;pkg&#x2F;errorsx&#x2F;post.go：定义了博客相关的错误码。</li></ul><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> errorsx<span class="token keyword">import</span> <span class="token string">"net/http"</span><span class="token comment">// ErrPostNotFound 表示未找到指定的博客.</span><span class="token keyword">var</span> ErrPostNotFound <span class="token operator">=</span> <span class="token operator">&amp;</span>ErrorX<span class="token punctuation">&#123;</span>Code<span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusNotFound<span class="token punctuation">,</span> Reason<span class="token punctuation">:</span> <span class="token string">"NotFound.PostNotFound"</span><span class="token punctuation">,</span> Message<span class="token punctuation">:</span> <span class="token string">"Post not found."</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="fastgo-错误包设计"><a href="#fastgo-错误包设计" class="headerlink" title="fastgo 错误包设计"></a>fastgo 错误包设计</h5><p>为了避免与标准库的 errors 包命名冲突，fastgo 项目的错误包命名为 errorsx，寓意为“扩展的错误处理包”。</p><p>由于 fastgo 项目的错误包命名为 errorsx，为保持命名一致性，定义了一名为ErrorX 的结构体，用于描述错误信息，具体定义如下:</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// ErrorX 定义了 OneX 项目体系中使用的错误类型，用于描述错误的详细信息.</span><span class="token keyword">type</span> ErrorX <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// Code 表示错误的 HTTP 状态码，用于与客户端进行交互时标识错误的类型.</span>    Code <span class="token builtin">int</span> <span class="token string">`json:"code,omitempty"`</span>    <span class="token comment">// Reason 表示错误发生的原因，通常为业务错误码，用于精准定位问题.</span>    Reason <span class="token builtin">string</span> <span class="token string">`json:"reason,omitempty"`</span>    <span class="token comment">// Message 表示简短的错误信息，通常可直接暴露给用户查看.</span>    Message <span class="token builtin">string</span> <span class="token string">`json:"message,omitempty"`</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ErrorX是一个错误类型，所以需要实现Error方法</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// Error 实现 error 接口中的 `Error` 方法.</span><span class="token keyword">func</span> <span class="token punctuation">(</span>err <span class="token operator">*</span>ErrorX<span class="token punctuation">)</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"error: code = %d reason = %s message = %s"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span>Code<span class="token punctuation">,</span> err<span class="token punctuation">.</span>Reason<span class="token punctuation">,</span> err<span class="token punctuation">.</span>Message<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>Error() 返回的错误信息中，包含了 HTTP 状态码、错误发生的原因、错误信息。通过这些详尽的错误信息返回，帮助开发者快速定位错误。</p><p>在 Go 项目开发中，发生错误的原因有很多，大多数情况下，开发者希望将真实的错误信息返回给用户。因此，还需要提供一个方法用来设置 <code>ErrorX</code> 结构体中的 <code>Message</code> 字段。为了满足上述诉求，给 <code>ErrorX</code> 增加<code>WithMessage</code> 方法。实现方式如下是代码所示(位于文件 internal&#x2F;pkg&#x2F;errorsx&#x2F;errorsx.go 中):</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> errorsx<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"errors"</span><span class="token string">"fmt"</span><span class="token punctuation">)</span><span class="token comment">// ErrorX</span><span class="token comment">// @Description: 定义项目中使用的错误类型，用于描述错误的详细信息</span><span class="token keyword">type</span> ErrorX <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span><span class="token comment">// code表示错误的HTTP状态码，用于与客户端进行交互时标识错误的类型</span>Code <span class="token builtin">int</span> <span class="token string">`json:"code,omitempty"`</span><span class="token comment">// Reason表示错误发生的原因，通常为业务错误码，用于精准定位问题</span>Reason <span class="token builtin">string</span> <span class="token string">`json:"reason,omitempty"`</span><span class="token comment">// Message表示简短的错误信息，通常可直接暴露给用户查看</span>Message <span class="token builtin">string</span> <span class="token string">`json:"message,omitempty"`</span><span class="token punctuation">&#125;</span><span class="token comment">// 创建一个新的错误</span><span class="token keyword">func</span> <span class="token function">New</span><span class="token punctuation">(</span>code <span class="token builtin">int</span><span class="token punctuation">,</span> reason <span class="token builtin">string</span><span class="token punctuation">,</span> format <span class="token builtin">string</span><span class="token punctuation">,</span> args <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>ErrorX <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token operator">&amp;</span>ErrorX<span class="token punctuation">&#123;</span>Code<span class="token punctuation">:</span>    code<span class="token punctuation">,</span>Reason<span class="token punctuation">:</span>  reason<span class="token punctuation">,</span>Message<span class="token punctuation">:</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span>format<span class="token punctuation">,</span> args<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 实现error接口的Error方法</span><span class="token keyword">func</span> <span class="token punctuation">(</span>e <span class="token operator">*</span>ErrorX<span class="token punctuation">)</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"error: code = %d reason = %s message = %s"</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>Code<span class="token punctuation">,</span> e<span class="token punctuation">.</span>Reason<span class="token punctuation">,</span> e<span class="token punctuation">.</span>Message<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// WithMessage 设置错误的Message字段</span><span class="token keyword">func</span> <span class="token punctuation">(</span>e <span class="token operator">*</span>ErrorX<span class="token punctuation">)</span> <span class="token function">WithMessage</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> args <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>ErrorX <span class="token punctuation">&#123;</span>e<span class="token punctuation">.</span>Message <span class="token operator">=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span>format<span class="token punctuation">,</span> args<span class="token operator">...</span><span class="token punctuation">)</span><span class="token keyword">return</span> e<span class="token punctuation">&#125;</span><span class="token comment">// 尝试将一个通用的error转换为自定义的 *ErrorX类型</span><span class="token keyword">func</span> <span class="token function">FromError</span><span class="token punctuation">(</span>err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token operator">*</span>ErrorX <span class="token punctuation">&#123;</span><span class="token keyword">if</span> err <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> errx <span class="token operator">:=</span> <span class="token function">new</span><span class="token punctuation">(</span>ErrorX<span class="token punctuation">)</span><span class="token punctuation">;</span> errors<span class="token punctuation">.</span><span class="token function">As</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> <span class="token operator">&amp;</span>errx<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> errx<span class="token punctuation">&#125;</span><span class="token comment">// 默认返回未知错误错误. 该错误代表服务端出错</span><span class="token keyword">return</span> <span class="token function">New</span><span class="token punctuation">(</span>ErrInternal<span class="token punctuation">.</span>Code<span class="token punctuation">,</span> ErrInternal<span class="token punctuation">.</span>Reason<span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在 Go 项目开发中，通常需要将一个 error 类型的错误 err ，解析为<code>*ErrorX </code>类型，并获取<code>*ErrorX</code>中的 <code>Code</code> 字段和 <code>Reason</code> 字段的值。 Code 字段可用来设置 HTTP 状态码，<code>Reason</code> 字段可用来判断错误类型。为此，<code>errorsx</code> 包实现了 <code>FromError</code> 方法，具体实现如下所示。</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// 尝试将一个通用的error转换为自定义的 *ErrorX类型</span><span class="token keyword">func</span> <span class="token function">FromError</span><span class="token punctuation">(</span>err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token operator">*</span>ErrorX <span class="token punctuation">&#123;</span><span class="token comment">// 如果传入的错误是 nil，则直接返回 nil，表示没有错误需要处理.</span><span class="token keyword">if</span> err <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token comment">// 检查传入的 error 是否已经是 ErrorX 类型的实例.</span><span class="token comment">// 如果错误可以通过 errors.As 转换为 *ErrorX 类型，则直接返回该实例.</span><span class="token keyword">if</span> errx <span class="token operator">:=</span> <span class="token function">new</span><span class="token punctuation">(</span>ErrorX<span class="token punctuation">)</span><span class="token punctuation">;</span> errors<span class="token punctuation">.</span><span class="token function">As</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> <span class="token operator">&amp;</span>errx<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> errx<span class="token punctuation">&#125;</span><span class="token comment">// 默认返回未知错误错误. 该错误代表服务端出错</span><span class="token keyword">return</span> <span class="token function">New</span><span class="token punctuation">(</span>ErrInternal<span class="token punctuation">.</span>Code<span class="token punctuation">,</span> ErrInternal<span class="token punctuation">.</span>Reason<span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>fastgo 错误返回规范</p><p>为了标准化接口错误返回，fastgo 项目提供了通用的接口返回函数，该函数可以解析错误，并返回固定的错误返回格式。实现代码位于 internal&#x2F;pkg&#x2F;core&#x2F;core.go 文件中，代码内容如下:</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> core<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"github.com/gin-gonic/gin"</span><span class="token string">"gitlab.com/onexstack/fastgo/internal/pkg/errorsx"</span><span class="token string">"net/http"</span><span class="token punctuation">)</span><span class="token comment">// ErrorResponse 定义了错误响应的结构，</span><span class="token comment">// 用于 API 请求中发生错误时返回统一的格式化错误信息.</span><span class="token keyword">type</span> ErrorResponse <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span><span class="token comment">// 错误原因，标识错误类型</span>Reason <span class="token builtin">string</span> <span class="token string">`json:"reason,omitempty"`</span><span class="token comment">// 错误详情的描述信息</span>Message <span class="token builtin">string</span> <span class="token string">`json:"message,omitempty"`</span><span class="token punctuation">&#125;</span><span class="token comment">// WriteResponse 是通用的响应函数.</span><span class="token comment">// 它会根据是否发生错误，生成成功响应或标准化的错误响应.</span><span class="token keyword">func</span> <span class="token function">WriteResponse</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> data any<span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token comment">// 如果发生错误，生成错误响应</span>errx <span class="token operator">:=</span> errorsx<span class="token punctuation">.</span><span class="token function">FromError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token comment">// 提取错误详细信息</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>errx<span class="token punctuation">.</span>Code<span class="token punctuation">,</span> ErrorResponse<span class="token punctuation">&#123;</span>Reason<span class="token punctuation">:</span>  errx<span class="token punctuation">.</span>Reason<span class="token punctuation">,</span>Message<span class="token punctuation">:</span> errx<span class="token punctuation">.</span>Message<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">&#125;</span><span class="token comment">// 如果没有错误，返回成功响应</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上述代码，定义了一个通用的错误返回结构体:<code>ErrorResponse</code>。ErrorResponse 中包含了错误返回的原因和消息。</p><p>在 API 接口返回时，会调用 <code>WriteResponse</code> 函数。<code>WriteResponse</code> 函数会判断是否发生了错误，如果发生了错误，会解析错误为 errorsx,Errorx 类型的错误，并从中获取 Code 和 Reason 字段，并设置给 <code>ErrorResponse</code> 类型的变量。如果没有发生错误，直接返回自定义数据。</p><h5 id="返回统一的错误格式"><a href="#返回统一的错误格式" class="headerlink" title="返回统一的错误格式"></a>返回统一的错误格式</h5><p>上面，我们开发了错误包、自定义了错误返回码，并提供了接口返回函数 <code>WriteResponse</code> 。接下来，就可以使用 <code>WriteResponse</code> 来返回接口数据。</p><p>更新internal&#x2F;apiserver&#x2F;server.go 文件中的 <code>NoRoute</code> 返回实现和<code>/healthz</code>接口的返回实现。代码变更如下</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token punctuation">(</span>cfg <span class="token operator">*</span>Config<span class="token punctuation">)</span> <span class="token function">NewServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>Server<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 创建Gin引擎</span>engine <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// gin.Recovery() 中间件，用来捕获任何panic并恢复</span>mws <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>gin<span class="token punctuation">.</span>HandlerFunc<span class="token punctuation">&#123;</span>gin<span class="token punctuation">.</span><span class="token function">Recovery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> middleware<span class="token punctuation">.</span>NoCache<span class="token punctuation">,</span> middleware<span class="token punctuation">.</span>Cors<span class="token punctuation">,</span> middleware<span class="token punctuation">.</span><span class="token function">RequestID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>engine<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span>mws<span class="token operator">...</span><span class="token punctuation">)</span><span class="token comment">// 注册404 handler</span>engine<span class="token punctuation">.</span><span class="token function">NoRoute</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>core<span class="token punctuation">.</span><span class="token function">WriteResponse</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> errorsx<span class="token punctuation">.</span>ErrNotFound<span class="token punctuation">.</span><span class="token function">WithMessage</span><span class="token punctuation">(</span><span class="token string">"Page not found"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 注册/healthz handler</span>engine<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/healthz"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>core<span class="token punctuation">.</span><span class="token function">WriteResponse</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">&#123;</span><span class="token string">"status"</span><span class="token punctuation">:</span> <span class="token string">"ok"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 创建HTTP Server实例</span>httpsrv <span class="token operator">:=</span> <span class="token operator">&amp;</span>http<span class="token punctuation">.</span>Server<span class="token punctuation">&#123;</span>Addr<span class="token punctuation">:</span> cfg<span class="token punctuation">.</span>Addr<span class="token punctuation">,</span> Handler<span class="token punctuation">:</span> engine<span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token operator">&amp;</span>Server<span class="token punctuation">&#123;</span>cfg<span class="token punctuation">:</span> cfg<span class="token punctuation">,</span> srv<span class="token punctuation">:</span> httpsrv<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面的代码通过调用<code>WriteResponse</code> 返回了标准的错误返回。并且在<code>NoRoute</code>路由函数中，还指定了要返回的自定义错误码<code>ErrNotFound</code>设置了自定义返回消息</p><h3 id="编译并测试"><a href="#编译并测试" class="headerlink" title="编译并测试"></a>编译并测试</h3><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook<span class="token operator">-</span>Pro fastgo <span class="token operator">%</span> sh build<span class="token punctuation">.</span>sh                                        gitlab<span class="token punctuation">.</span>com<span class="token operator">/</span>onexstack<span class="token operator">/</span>fastgo<span class="token operator">/</span>internal<span class="token operator">/</span>apiservergitlab<span class="token punctuation">.</span>com<span class="token operator">/</span>onexstack<span class="token operator">/</span>fastgo<span class="token operator">/</span>cmd<span class="token operator">/</span>fg<span class="token operator">-</span>apiserver<span class="token operator">/</span>app<span class="token operator">/</span>optionscommand<span class="token operator">-</span>line<span class="token operator">-</span>arguments<span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook<span class="token operator">-</span>Pro fastgo <span class="token operator">%</span> <span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook<span class="token operator">-</span>Pro fastgo <span class="token operator">%</span> <span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook<span class="token operator">-</span>Pro fastgo <span class="token operator">%</span> <span class="token punctuation">.</span><span class="token operator">/</span>_output<span class="token operator">/</span>fg<span class="token operator">-</span>apiserver <span class="token operator">-</span>c configs<span class="token operator">/</span>fg<span class="token operator">-</span>apiserver<span class="token punctuation">.</span>yaml<span class="token operator">/</span>Users<span class="token operator">/</span>dujie<span class="token operator">/</span><span class="token punctuation">.</span>fastgo<span class="token operator">/</span>fg<span class="token operator">-</span>apiserver<span class="token punctuation">.</span>yaml<span class="token punctuation">[</span>GIN<span class="token operator">-</span>debug<span class="token punctuation">]</span> <span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span> Running in <span class="token string">"debug"</span> mode<span class="token punctuation">.</span> Switch to <span class="token string">"release"</span> mode in production<span class="token punctuation">.</span> <span class="token operator">-</span> using env<span class="token punctuation">:</span>   export GIN_MODE<span class="token operator">=</span>release <span class="token operator">-</span> using code<span class="token punctuation">:</span>  gin<span class="token punctuation">.</span><span class="token function">SetMode</span><span class="token punctuation">(</span>gin<span class="token punctuation">.</span>ReleaseMode<span class="token punctuation">)</span><span class="token punctuation">[</span>GIN<span class="token operator">-</span>debug<span class="token punctuation">]</span> GET    <span class="token operator">/</span>healthz                  <span class="token operator">--</span><span class="token operator">></span> gitlab<span class="token punctuation">.</span>com<span class="token operator">/</span>onexstack<span class="token operator">/</span>fastgo<span class="token operator">/</span>internal<span class="token operator">/</span>apiserver<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span>Config<span class="token punctuation">)</span><span class="token punctuation">.</span>NewServer<span class="token punctuation">.</span>func2 <span class="token punctuation">(</span><span class="token number">5</span> handlers<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token string">"time"</span><span class="token punctuation">:</span><span class="token string">"2025-04-02T15:40:49.328599+08:00"</span><span class="token punctuation">,</span><span class="token string">"level"</span><span class="token punctuation">:</span><span class="token string">"INFO"</span><span class="token punctuation">,</span><span class="token string">"msg"</span><span class="token punctuation">:</span><span class="token string">"Read MYSQL host from config 127.0.0.1:3306"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token string">"time"</span><span class="token punctuation">:</span><span class="token string">"2025-04-02T15:40:49.328736+08:00"</span><span class="token punctuation">,</span><span class="token string">"level"</span><span class="token punctuation">:</span><span class="token string">"INFO"</span><span class="token punctuation">,</span><span class="token string">"msg"</span><span class="token punctuation">:</span><span class="token string">"Start to listening the incoming requests on http address"</span><span class="token punctuation">,</span><span class="token string">"addr"</span><span class="token punctuation">:</span><span class="token string">"0.0.0.0:6666"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook<span class="token operator">-</span>Pro fastgo <span class="token operator">%</span> curl http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token punctuation">:</span><span class="token number">6666</span><span class="token operator">/</span>nonexist<span class="token punctuation">&#123;</span><span class="token string">"reason"</span><span class="token punctuation">:</span><span class="token string">"NotFound"</span><span class="token punctuation">,</span><span class="token string">"message"</span><span class="token punctuation">:</span><span class="token string">"Page not found"</span><span class="token punctuation">&#125;</span><span class="token operator">%</span>      <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;10、实现统一的错误返回&quot;&gt;&lt;a href=&quot;#10、实现统一的错误返回&quot; class=&quot;headerlink&quot; title=&quot;10、实现统一的错误返回&quot;&gt;&lt;/a&gt;10、实现统一的错误返回&lt;/h1&gt;&lt;p&gt;在 Go 项目开发中，为了方便客户端处理返回，排查错误，还需</summary>
      
    
    
    
    <category term="Fastgo项目学习" scheme="http://dycloud.fun/categories/Fastgo%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="云原生" scheme="http://dycloud.fun/tags/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
    <category term="golang" scheme="http://dycloud.fun/tags/golang/"/>
    
    <category term="Fastgo项目学习" scheme="http://dycloud.fun/tags/Fastgo%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>9、给应用添加优雅关停功能</title>
    <link href="http://dycloud.fun/2025/02/12/9%E3%80%81%E7%BB%99%E5%BA%94%E7%94%A8%E6%B7%BB%E5%8A%A0%E4%BC%98%E9%9B%85%E5%85%B3%E5%81%9C%E5%8A%9F%E8%83%BD/"/>
    <id>http://dycloud.fun/2025/02/12/9%E3%80%81%E7%BB%99%E5%BA%94%E7%94%A8%E6%B7%BB%E5%8A%A0%E4%BC%98%E9%9B%85%E5%85%B3%E5%81%9C%E5%8A%9F%E8%83%BD/</id>
    <published>2025-02-12T06:32:00.000Z</published>
    <updated>2025-04-02T08:20:17.172Z</updated>
    
    <content type="html"><![CDATA[<h1 id="9、给应用添加优雅关停功能"><a href="#9、给应用添加优雅关停功能" class="headerlink" title="9、给应用添加优雅关停功能"></a>9、给应用添加优雅关停功能</h1><p>在成功实现一个简单的 Web 服务器之后，接下来需要进一步完善其核心功能，使其更贴合实际需求并满足企业级应用场景的要求。例如，需要实现功能丰富的中间件、处理跨域访问、以及支持优雅关停等功能。本节课将深入个绍这些关键功能的实现，帮助打造一个更加健壮、高效、且易于维护的 Web 服务器。</p><h3 id="添加优雅关停功能"><a href="#添加优雅关停功能" class="headerlink" title="添加优雅关停功能"></a>添加优雅关停功能</h3><p>Web 服务器通常都需要实现优雅关停功能。优雅关停服务器可以带来很多好处，例如提高 API 接口的成功率，减少系统脏数据的出现概率等。本节会详细介绍如何实现优雅关停功能。</p><h3 id="优雅关停的必要性"><a href="#优雅关停的必要性" class="headerlink" title="优雅关停的必要性"></a>优雅关停的必要性</h3><p>在应用程序的生命周期中，新功能发布、缺陷修复、配置变更等操作都需要重启服务。在服务进程停止时，可能需要执行一些必要的处理工作，例如：</p><ul><li>正在执行的 HTTP 请求需要等待其完成并返回结果，否则可能会导致请求报错或产生脏数据</li><li>异步处理任务需要将缓存中的数据处理完成，否则可能会导致数据丢失或不一致:</li><li>关闭数据库连接，否则数据库连接池可能会保留无效连接，浪费宝贵的连接资源,</li></ul><p>为了解决上述问题，建议的做法是给应用添加优雅关停功能，以提高系统的健壮性。</p><h3 id="优雅关停的实现思路"><a href="#优雅关停的实现思路" class="headerlink" title="优雅关停的实现思路"></a>优雅关停的实现思路</h3><p>实现优雅关停的最佳实践是在服务进程停止前，等待所有任务处理完成后再退出进程。在 Go 应用开发中，可以通过向应用程序发送标准的系统信号来终止服务进程。以下是最常见的三种终止方式：</p><ul><li><code>CTRL+C</code> : 发送 SIGINT 信号;</li><li><code>kill &lt;pid&gt;</code> : 向指定进程发送SIGTERM 信号;</li><li><code>kill -9 &lt;pid&gt;</code> : 向指定进程发送 SIGKILL 信号，强制终止信号。需要注意的是，SIGKILL 信号既不能被应用程序捕获，也不能被阻塞或忽略</li></ul><blockquote><p>提示：日常关闭服务时，应该尽量避免使用kill -9 ，因为此命令会导致应用进程无法执行优雅关停逻辑。</p></blockquote><h3 id="fastgo实现优雅关停功能"><a href="#fastgo实现优雅关停功能" class="headerlink" title="fastgo实现优雅关停功能"></a>fastgo实现优雅关停功能</h3><p>如果能够捕获SIGINT和SIGTERM信号，并在捕获后执行一些关停逻辑，就可以实现优雅关停功能。实际上，当前go应用的优雅关停大多都是这么实现的。</p><p>Go提供了os&#x2F;signal包，用于监听并处理接受到的信号。</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// 启动一些非阻塞任务，例如：HTTP / gRPC 服务，异步任务处理等逻辑</span><span class="token comment">// 创建一个 os.Signal 类型的 channel，用于接收系统信号</span>quit <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> os<span class="token punctuation">.</span>Signal<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">// 当执行 kill 命令时（不带参数），默认会发送 syscall.SIGTERM 信号</span><span class="token comment">// 使用 kill -2 命令会发送 syscall.SIGINT 信号（例如按 CTRL+C 触发）</span><span class="token comment">// 使用 kill -9 命令会发送 syscall.SIGKILL 信号，但 SIGKILL 信号无法被捕获，因此无需监听和处理</span>signal<span class="token punctuation">.</span><span class="token function">Notify</span><span class="token punctuation">(</span>quit<span class="token punctuation">,</span> syscall<span class="token punctuation">.</span>SIGINT<span class="token punctuation">,</span> syscall<span class="token punctuation">.</span>SIGTERM<span class="token punctuation">)</span><span class="token comment">// 阻塞程序，等待从 quit channel 中接收到信号</span><span class="token operator">&lt;-</span>quit<span class="token comment">// 执行一些清理工作</span><span class="token comment">// 程序自然退出</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上述代码执行优雅关停的流程如下：</p><ol><li>启动 HTTP&#x2F;GRPC 服务或其他异步任务，以非阻塞方式运行。如果服务本身是阻塞方式，可以通过 Go 协程启动;</li><li>创建一个 <code>os.Signal </code>类型的 <code>channel</code>，用于捕获应用程序的关停信号;</li><li>调用 <code>signal.Notify</code>函数，设置需要捕获的信号类型，例如 <code>syscall.SIGINT </code>和<code>syscall.SIGTERM</code> </li><li>使用 <code>&lt;-quit </code>阻塞主程序，等待信号到来;</li><li>当系统接收到 <code>SIGINT</code> 或<code>SIGTERM</code> 信号时，会向 <code>quit</code> 通道写入一条 <code>os.Signal </code>类型的数据;</li><li><code>quit</code> 读取到信号后，解除阻塞状态，执行后续清理工作。清理完成后，进程正常退出。清理工作可根据业务逻辑执行不同的操作，例如通过 <code>net/http</code> 包的 <code>Shutdown</code> 方法优雅关闭 HTTP 服务。</li></ol><p>在 Go 项目开发中，还可以通过一些 Go 包，例如: <code>fvbock/endless </code>来实现优雅关停，但更推荐上面的方式，简单，并目不需要引入新包。很多优秀的开源项目，例如 Kubernetes 优雅关停实现思路跟上述思路保持一致。</p><p>fastgo 根据以上优雅关停功能实现思路，实现了优雅关停逻辑，代码如下(位于 intemal&#x2F;apiserver&#x2F;server.go 文件中):</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// Run</span><span class="token comment">//</span><span class="token comment">//@Description: Run运行应用</span><span class="token comment">//@receiver s</span><span class="token comment">//@return error</span><span class="token keyword">func</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>Server<span class="token punctuation">)</span> <span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span>slog<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span>fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"Read MYSQL host from config %s"</span><span class="token punctuation">,</span> s<span class="token punctuation">.</span>cfg<span class="token punctuation">.</span>MYSQLOptions<span class="token punctuation">.</span>Addr<span class="token punctuation">)</span><span class="token punctuation">)</span>slog<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">"Start to listening the incoming requests on http address"</span><span class="token punctuation">,</span> <span class="token string">"addr"</span><span class="token punctuation">,</span> s<span class="token punctuation">.</span>cfg<span class="token punctuation">.</span>Addr<span class="token punctuation">)</span><span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> err <span class="token operator">:=</span> s<span class="token punctuation">.</span>srv<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>errors<span class="token punctuation">.</span><span class="token function">Is</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> http<span class="token punctuation">.</span>ErrServerClosed<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>slog<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>os<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 创建一个os.Signal 类型的channel，用于接受系统信号</span>quit <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> os<span class="token punctuation">.</span>Signal<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">// 当执行kill命令时（不带参数），默认会发送syscall.SIGTERM信号</span><span class="token comment">// 使用kill -2 命令会发送syscall.SIGINT信号（例如按ctrl+c触发）</span><span class="token comment">// 使用kill -9 命令会发送syscall.SIGKILL信号，但SIGKILL信号无法被捕捉，因此无需监听和处理</span>signal<span class="token punctuation">.</span><span class="token function">Notify</span><span class="token punctuation">(</span>quit<span class="token punctuation">,</span> syscall<span class="token punctuation">.</span>SIGINT<span class="token punctuation">,</span> syscall<span class="token punctuation">.</span>SIGTERM<span class="token punctuation">)</span><span class="token comment">// 阻塞程序，等待从quit channel中接受到信号</span><span class="token operator">&lt;-</span>quitslog<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">"Shutting down server ...."</span><span class="token punctuation">)</span><span class="token comment">// 优雅关闭服务</span>ctx<span class="token punctuation">,</span> cancel <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">WithTimeout</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token operator">*</span>time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span><span class="token keyword">defer</span> <span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 先关闭依赖的服务，再关闭被依赖的服务</span><span class="token comment">// 10秒内优雅关闭服务（将未处理完的请求处理完再关闭服务），超过10秒就超时退出</span><span class="token keyword">if</span> err <span class="token operator">:=</span> s<span class="token punctuation">.</span>srv<span class="token punctuation">.</span><span class="token function">Shutdown</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>slog<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">"Insecure Server forced to shutdown"</span><span class="token punctuation">,</span> <span class="token string">"err"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span>slog<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">"Server exited"</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在上述代码中，<code>quit</code> 收到 <code>SIGINT</code> 和 <code>SIGTERM</code> 信号后，程序会解除阻塞状态，并调用<code>*http.Server</code>类型实例的 <code>Shutdown</code> 方法优雅关停服务器。</p><p>通过<code>context.WithTimeout</code> 创建上下文对象ctx，其主要作用是为优雅关闭服务提供超时控制，确保服务在一定时间内完成清理工作。如果超过指定时间(这里是 10 秒)，服务将被强制终止。 ctx 被传递给 <code>s.srv.Shutdown(ctx)</code>方法，用于通知服务相关的协程或其他子任务，当前服务正在关闭，并提供一个超时时间。服务中的任务可以通过监听<code> ctx.Done()</code> 来检测是否需要终止，从而及时结束任务，避免资源泄漏。</p><p><code>*http.Server</code> 类型的<code>Shutdown</code> 方法的工作流程如下: 首先关闭所有已开启的监听器，然后关闭所有空闲连接，最后等待所有活跃连接进入空闲状态后终止服务。如果传入的ctx 在服务完成终止之前超时，则 Shutdown 方法会返回与 context 相关的错误。否则会返回由关闭服务监听器引发的其他错误。</p><p>当Shutdown方法被调用时，<code>Serve</code>、<code>ListenAndServe</code> 以及 <code>ListenAndServeTLS</code> 方法会立即返回 <code>ErrServerClosed</code> 错误。<code>ErrServerClosed</code> 错误被视为服务关闭时的正常行为。因此，如果 <code>ListenAndServe</code> 返回该错误，程序不会打印错误信息。</p><h3 id="编译并测试优雅关停功能"><a href="#编译并测试优雅关停功能" class="headerlink" title="编译并测试优雅关停功能"></a>编译并测试优雅关停功能</h3><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook<span class="token operator">-</span>Pro fastgo <span class="token operator">%</span> sh build<span class="token punctuation">.</span>sh                                        gitlab<span class="token punctuation">.</span>com<span class="token operator">/</span>onexstack<span class="token operator">/</span>fastgo<span class="token operator">/</span>internal<span class="token operator">/</span>apiservergitlab<span class="token punctuation">.</span>com<span class="token operator">/</span>onexstack<span class="token operator">/</span>fastgo<span class="token operator">/</span>cmd<span class="token operator">/</span>fg<span class="token operator">-</span>apiserver<span class="token operator">/</span>app<span class="token operator">/</span>optionscommand<span class="token operator">-</span>line<span class="token operator">-</span>arguments<span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook<span class="token operator">-</span>Pro fastgo <span class="token operator">%</span> <span class="token punctuation">.</span><span class="token operator">/</span>_output<span class="token operator">/</span>fg<span class="token operator">-</span>apiserver <span class="token operator">-</span>c configs<span class="token operator">/</span>fg<span class="token operator">-</span>apiserver<span class="token punctuation">.</span>yaml<span class="token operator">/</span>Users<span class="token operator">/</span>dujie<span class="token operator">/</span><span class="token punctuation">.</span>fastgo<span class="token operator">/</span>fg<span class="token operator">-</span>apiserver<span class="token punctuation">.</span>yaml<span class="token punctuation">[</span>GIN<span class="token operator">-</span>debug<span class="token punctuation">]</span> <span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span> Running in <span class="token string">"debug"</span> mode<span class="token punctuation">.</span> Switch to <span class="token string">"release"</span> mode in production<span class="token punctuation">.</span> <span class="token operator">-</span> using env<span class="token punctuation">:</span>   export GIN_MODE<span class="token operator">=</span>release <span class="token operator">-</span> using code<span class="token punctuation">:</span>  gin<span class="token punctuation">.</span><span class="token function">SetMode</span><span class="token punctuation">(</span>gin<span class="token punctuation">.</span>ReleaseMode<span class="token punctuation">)</span><span class="token punctuation">[</span>GIN<span class="token operator">-</span>debug<span class="token punctuation">]</span> GET    <span class="token operator">/</span>healthz                  <span class="token operator">--</span><span class="token operator">></span> gitlab<span class="token punctuation">.</span>com<span class="token operator">/</span>onexstack<span class="token operator">/</span>fastgo<span class="token operator">/</span>internal<span class="token operator">/</span>apiserver<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span>Config<span class="token punctuation">)</span><span class="token punctuation">.</span>NewServer<span class="token punctuation">.</span>func2 <span class="token punctuation">(</span><span class="token number">5</span> handlers<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token string">"time"</span><span class="token punctuation">:</span><span class="token string">"2025-04-02T15:08:37.222349+08:00"</span><span class="token punctuation">,</span><span class="token string">"level"</span><span class="token punctuation">:</span><span class="token string">"INFO"</span><span class="token punctuation">,</span><span class="token string">"msg"</span><span class="token punctuation">:</span><span class="token string">"Read MYSQL host from config 127.0.0.1:3306"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token string">"time"</span><span class="token punctuation">:</span><span class="token string">"2025-04-02T15:08:37.222451+08:00"</span><span class="token punctuation">,</span><span class="token string">"level"</span><span class="token punctuation">:</span><span class="token string">"INFO"</span><span class="token punctuation">,</span><span class="token string">"msg"</span><span class="token punctuation">:</span><span class="token string">"Start to listening the incoming requests on http address"</span><span class="token punctuation">,</span><span class="token string">"addr"</span><span class="token punctuation">:</span><span class="token string">"0.0.0.0:6666"</span><span class="token punctuation">&#125;</span><span class="token operator">^</span>C<span class="token punctuation">&#123;</span><span class="token string">"time"</span><span class="token punctuation">:</span><span class="token string">"2025-04-02T15:08:45.011961+08:00"</span><span class="token punctuation">,</span><span class="token string">"level"</span><span class="token punctuation">:</span><span class="token string">"INFO"</span><span class="token punctuation">,</span><span class="token string">"msg"</span><span class="token punctuation">:</span><span class="token string">"Shutting down server ...."</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token string">"time"</span><span class="token punctuation">:</span><span class="token string">"2025-04-02T15:08:45.012307+08:00"</span><span class="token punctuation">,</span><span class="token string">"level"</span><span class="token punctuation">:</span><span class="token string">"INFO"</span><span class="token punctuation">,</span><span class="token string">"msg"</span><span class="token punctuation">:</span><span class="token string">"Server exited"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;9、给应用添加优雅关停功能&quot;&gt;&lt;a href=&quot;#9、给应用添加优雅关停功能&quot; class=&quot;headerlink&quot; title=&quot;9、给应用添加优雅关停功能&quot;&gt;&lt;/a&gt;9、给应用添加优雅关停功能&lt;/h1&gt;&lt;p&gt;在成功实现一个简单的 Web 服务器之后，接下来需要</summary>
      
    
    
    
    <category term="Fastgo项目学习" scheme="http://dycloud.fun/categories/Fastgo%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="云原生" scheme="http://dycloud.fun/tags/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
    <category term="golang" scheme="http://dycloud.fun/tags/golang/"/>
    
    <category term="Fastgo项目学习" scheme="http://dycloud.fun/tags/Fastgo%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>8、给Gin服务器添加中间件</title>
    <link href="http://dycloud.fun/2025/02/12/8%E3%80%81%E7%BB%99Gin%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%B7%BB%E5%8A%A0%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    <id>http://dycloud.fun/2025/02/12/8%E3%80%81%E7%BB%99Gin%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%B7%BB%E5%8A%A0%E4%B8%AD%E9%97%B4%E4%BB%B6/</id>
    <published>2025-02-12T05:32:00.000Z</published>
    <updated>2025-04-02T08:20:12.244Z</updated>
    
    <content type="html"><![CDATA[<h1 id="8、给Gin服务器添加中间件"><a href="#8、给Gin服务器添加中间件" class="headerlink" title="8、给Gin服务器添加中间件"></a>8、给Gin服务器添加中间件</h1><h3 id="Web中间件介绍"><a href="#Web中间件介绍" class="headerlink" title="Web中间件介绍"></a>Web中间件介绍</h3><p>中间件(Middleware) 是位于应用程序请求-响应处理循环中的一个特殊函数。它可以在请求到达业务逻辑处理之前修改&#x2F;处理请求，或是在响应返回给客户端之前修改&#x2F;处理响应。中间件根据使用方又可分为客户端中间件和服务端中间件，两者在实现原理和使用方式上是一致的。</p><p>中间件的核心作用是对请求或响应进行预处理、后处理或监控。它允许在请求和响应被发送或接收之前或之后插入自定义逻辑，从而实现多种功能，例如认证、授权、日志记录、性能监控、错误处理、请求验证、跨域支持、限流等。以下是核心使用场景的详细说明:</p><ul><li><strong>认证和授权：</strong>使用中间件可以实现认证和授权逻辑。在中间件中，可以验证请求者的身份、权限等信息，并根据情况决定是否允许请求继续进行;</li><li><strong>日志记录：</strong>中间件可以用于记录请求和响应的详细信息，从而实现日志记录和监控。可以记录请求的内容、调用的方法、响应的结果等，以便于调试和分析;</li><li><strong>错误处理：</strong>在中间件中可以捕获和处理 9RPC 调用过程中可能发生的错误，以提供更友好的错误信息或进行恢复操作;</li><li><strong>性能监视：</strong>使用中间件可以监视 Web 调用的性能指标，如调用时间、响应时间等，从而实现性能监控和优化。</li></ul><p><img src="/images/dh5GrMw7ETD1nSWAjZ5mrtdsCJdN9lKYogQ8UjDkfH8.png" alt="image"></p><p>中间上图中，有两个中间件:中间件 A 和中间件 B。一个Web请求从开始到结束时的执行流程为:中间件 A-&gt;中间件B-&gt;处理器函数-&gt;中间件 B-&gt;中间件 A，其执行顺序类似于栈结构</p><p>Web 中间件的作用实际上是实现对请求的前置拦截和对响应的后置拦截功能：</p><ul><li><strong>请求前置拦截</strong>：在 Web 请求到达定义的处理器函数之前，对请求进行拦截并执行相应的处理</li><li><strong>请求后置拦截</strong>：在完成请求的处理并相应客户端后，拦截响应并进行相应的处理</li></ul><p>需要注意的是，中间件会附加到每个请求的链路上，因此如果中间件性能较差或不稳定，将会影响所有 API 接口。因此，在开发中间件时，应确保其稳定性和性能，同时建议仅添加必要的中间件。</p><h3 id="Gin中间件介绍"><a href="#Gin中间件介绍" class="headerlink" title="Gin中间件介绍"></a>Gin中间件介绍</h3><p>Gin 框架也支持 Web 中间件，在 Gin 框架中，Web 中间件就叫中间件。本节课就来详细介绍如何实现并添加Gin 中间件。</p><p>Gin 支持三种中间件使用方式：</p><ul><li><strong>全局中间件</strong>：全局中间件会作用于所有的路由。它们通常用于处理通用功能，比如请求日志记录、跨域设置、错误恢复，</li><li><strong>路由组中间件</strong>：路由组中间件仅对指定的路由组生效，适用于将某些逻辑限定在同一组相关的路由中。例如：所有&#x2F;api 路径下的路由可能都需要一套特定的身份验证中间件;</li><li><strong>单个路由中间件</strong>：单个路由中间件仅对一个路由起作用。有时某个路由需要执行独立的中间件逻辑，这种情况下，可以将中间件绑定到单个路由上。</li></ul><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"log"</span>    <span class="token string">"net/http"</span>    <span class="token string">"github.com/gin-gonic/gin"</span><span class="token punctuation">)</span><span class="token comment">// 定义一个通用中间件：打印请求路径</span><span class="token keyword">func</span> <span class="token function">LogMiddleware</span><span class="token punctuation">(</span><span class="token punctuation">)</span> gin<span class="token punctuation">.</span>HandlerFunc <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"Request path: %s\n"</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Path<span class="token punctuation">)</span>        <span class="token comment">// 继续处理后续的中间件或路由</span>        c<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// 使用全局中间件：所有路由都会经过该中间件</span>    <span class="token comment">// r.Use(gin.Logger(), gin.Recovery()) 同时设置多个 Gin 中间件</span>    r<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span><span class="token function">LogMiddleware</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// 定义普通路由</span>    r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"Home"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 定义一个路由组，并为组添加中间件</span>    apiGroup <span class="token operator">:=</span> r<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">"/api"</span><span class="token punctuation">,</span> <span class="token function">LogMiddleware</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        apiGroup<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/hello"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"Hello, API"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        apiGroup<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/world"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"World, API"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 为单个路由添加中间件</span>    r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/secure"</span><span class="token punctuation">,</span> <span class="token function">LogMiddleware</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"This is a secure route"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 启动HTTP服务</span>    r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8080"</span><span class="token punctuation">)</span> <span class="token comment">// 监听在8080端口</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>。上述代码中，通过<code>r.Use()</code>、<code>r.Group()</code>、<code>r.Get() </code>方法分别设置了多个 Gin 中间件。在设置 Gin 中间件时，可以根据需要同时设置一个或者多个，例如<code> r.Use(gin.Logger()，gin.Recovery())</code>，同时设置了两个 Gin 中间件。</p><p>在 <code>LogMiddleware</code> 中间件中，<code>c.Next()</code> 方法之前的代码将在请求到达处理器函数之前执行，而<code> c.Next()</code> 方法之后的代码将在请求经过处理器函数处理之后执行。另外，在开发 Gin 中间件时， <code>c.Abort() </code>方法也经常被开发者使用，该方法会直接终止请求的执行。</p><h3 id="Fastgo添加中间件"><a href="#Fastgo添加中间件" class="headerlink" title="Fastgo添加中间件"></a>Fastgo添加中间件</h3><p>给fastgo添加中间件分为2步：</p><p>1、开发gin中间件</p><p>2、加载Gin中间件</p><h5 id="开发-Gin-中间件"><a href="#开发-Gin-中间件" class="headerlink" title="开发 Gin 中间件"></a>开发 Gin 中间件</h5><p>这里，我们先开发 3 个常用的 Gin 中间件:</p><ul><li>NoCache: 通过设置一些 Header，禁止客户端缓存 HTTP 请求的返回结果;</li><li>Cors:用来设置 options 请求的返回头，然后退出中间件链，并结束请求(浏览器跨域设置);。</li><li>RequestlD:用来在每一个 HTTP 请求的 context,response 中注入<code>X-request-id</code>键值对。</li></ul><p>Gin中间件其实就是一个<code>fun(c *gin.Context)</code>类型的函数。在函数中可以从c中解析请求，执行通用的处理逻辑、设置返回参数等。</p><p>NoCache及Cors中间件代码如下internal&#x2F;pkg&#x2F;middleware&#x2F;header.go：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> middleware<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"github.com/gin-gonic/gin"</span><span class="token string">"net/http"</span><span class="token string">"time"</span><span class="token punctuation">)</span><span class="token comment">// NoCache 是一个 Gin 中间件，用来禁止客户端缓存 HTTP 请求的返回结果.</span><span class="token keyword">func</span> <span class="token function">NoCache</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token string">"Cache-Control"</span><span class="token punctuation">,</span> <span class="token string">"no-cache, no-store, max-age=0, must-revalidate, value"</span><span class="token punctuation">)</span>c<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token string">"Expires"</span><span class="token punctuation">,</span> <span class="token string">"Thu, 01 Jan 1970 00:00:00 GMT"</span><span class="token punctuation">)</span>c<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token string">"Last-Modified"</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">UTC</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>TimeFormat<span class="token punctuation">)</span><span class="token punctuation">)</span>c<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// Cors 是一个 Gin 中间件，用来设置 options 请求的返回头，然后退出中间件链，并结束请求(浏览器跨域设置).</span><span class="token keyword">func</span> <span class="token function">Cors</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Method <span class="token operator">!=</span> <span class="token string">"OPTIONS"</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token string">"Access-Control-Allow-Origin"</span><span class="token punctuation">,</span> <span class="token string">"*"</span><span class="token punctuation">)</span>c<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token string">"Access-Control-Allow-Methods"</span><span class="token punctuation">,</span> <span class="token string">"GET,POST,PUT,PATCH,DELETE,OPTIONS"</span><span class="token punctuation">)</span>c<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token string">"Access-Control-Allow-Headers"</span><span class="token punctuation">,</span> <span class="token string">"authorization, origin, content-type, accept"</span><span class="token punctuation">)</span>c<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token string">"Allow"</span><span class="token punctuation">,</span> <span class="token string">"HEAD,GET,POST,PUT,PATCH,DELETE,OPTIONS"</span><span class="token punctuation">)</span>c<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token string">"Content-Type"</span><span class="token punctuation">,</span> <span class="token string">"application/json"</span><span class="token punctuation">)</span>c<span class="token punctuation">.</span><span class="token function">AbortWithStatus</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>RequestId中间件位于internal&#x2F;pkg&#x2F;middleware&#x2F;requestid.go文件</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> middleware<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"github.com/gin-gonic/gin"</span><span class="token string">"github.com/google/uuid"</span><span class="token string">"gitlab.com/onexstack/fastgo/internal/pkg/contextx"</span><span class="token string">"gitlab.com/onexstack/fastgo/internal/pkg/known"</span><span class="token punctuation">)</span><span class="token comment">// RequestID 是一个 Gin 中间件，用来在每一个 HTTP 请求的 context, response 中注入 `x-request-id` 键值对.</span><span class="token keyword">func</span> <span class="token function">RequestID</span><span class="token punctuation">(</span><span class="token punctuation">)</span> gin<span class="token punctuation">.</span>HandlerFunc <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 从请求头中获取 `x-request-id`，如果不存在则生成新的 UUID</span>requestID <span class="token operator">:=</span> c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Header<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>known<span class="token punctuation">.</span>XRequestID<span class="token punctuation">)</span><span class="token keyword">if</span> requestID <span class="token operator">==</span> <span class="token string">""</span> <span class="token punctuation">&#123;</span>requestID <span class="token operator">=</span> uuid<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 将 RequestID 保存到 context.Context 中，以便后续程序使用</span>ctx <span class="token operator">:=</span> contextx<span class="token punctuation">.</span><span class="token function">WithRequestID</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> requestID<span class="token punctuation">)</span>c<span class="token punctuation">.</span>Request <span class="token operator">=</span> c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">WithContext</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token comment">// 将 RequestID 保存到 HTTP 返回头中，Header 的键为 `x-request-id`</span>c<span class="token punctuation">.</span>Writer<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span>known<span class="token punctuation">.</span>XRequestID<span class="token punctuation">,</span> requestID<span class="token punctuation">)</span><span class="token comment">// 继续处理请求</span>c<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>RequestID中间件尝试从c中获取<code>x-request-id</code>请求头，如果获取不到则生成一个新的请求ID并设置为请求头<code>x-request-id</code>的值。为了能在代码中方便获取请求ID，例如：可以打印到日志中，方便串联整个请求日志。还通过<code>contextx.WithRequestID</code>调用，将请求ID保存在了自定义上下文<code>contextx</code>中。</p><p>中间件最后通过<code>c.Writer.Header().Set(known.XRequestID, requestID)</code> 调用，将请求ID设置到了返回头中，这样可以将请求ID也传给客户端。方便出问题时提供请求ID进行排查。</p><p>因为<code>x-request-id</code> 会在多个地方被访问，为了更好管理这种通用的常量，将<code>x-request-id</code> 以常量的形式保存在known中，internal&#x2F;pkg&#x2F;known&#x2F;knwon.go中</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> known<span class="token keyword">const</span> <span class="token punctuation">(</span><span class="token comment">// XRequestID 用来定义上下文中的键，代表请求 ID.</span>XRequestID <span class="token operator">=</span> <span class="token string">"x-request-id"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>为了能方便的从<code>context.Context</code>中获取请求ID，fastgo项目引入了自定义上下文包contextx。contextx提供了便捷的函数，给<code>context.Contgext</code>添加键值对，并从<code>context.Context</code>中根据键获取对应的值。intetrnal&#x2F;pkg&#x2F;contextx&#x2F;contextx.go</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> contextx<span class="token keyword">import</span> <span class="token string">"context"</span><span class="token comment">// 定义用于上下文的键.</span><span class="token keyword">type</span> <span class="token punctuation">(</span><span class="token comment">// requestIDKey 定义请求 ID 的上下文键.</span>requestIDKey <span class="token keyword">struct</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// WithRequestID 将请求 ID 存放到上下文中.</span><span class="token keyword">func</span> <span class="token function">WithRequestID</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> requestID <span class="token builtin">string</span><span class="token punctuation">)</span> context<span class="token punctuation">.</span>Context <span class="token punctuation">&#123;</span><span class="token keyword">return</span> context<span class="token punctuation">.</span><span class="token function">WithValue</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> requestIDKey<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> requestID<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// RequestID 从上下文中提取请求 ID.</span><span class="token keyword">func</span> <span class="token function">RequestID</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span>requestID<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> ctx<span class="token punctuation">.</span><span class="token function">Value</span><span class="token punctuation">(</span>requestIDKey<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token keyword">return</span> requestID<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过定义一个新的类型requestIDKey struct{}，可以避免键名冲突，因为类型是唯一的</p><h5 id="加载中间件"><a href="#加载中间件" class="headerlink" title="加载中间件"></a>加载中间件</h5><p>修改internal&#x2F;apiserver&#x2F;server.go </p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> apiserver<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"errors"</span><span class="token string">"fmt"</span><span class="token string">"github.com/gin-gonic/gin"</span><span class="token string">"gitlab.com/onexstack/fastgo/internal/pkg/middleware"</span>genericoptions <span class="token string">"gitlab.com/onexstack/fastgo/pkg/options"</span><span class="token string">"log/slog"</span><span class="token string">"net/http"</span><span class="token punctuation">)</span><span class="token comment">// Server</span><span class="token comment">// @Description: 定义一个服务器结构体类型</span><span class="token keyword">type</span> Server <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>cfg <span class="token operator">*</span>Configsrv <span class="token operator">*</span>http<span class="token punctuation">.</span>Server<span class="token punctuation">&#125;</span><span class="token comment">//Config</span><span class="token comment">//@Description: Config结构体，用于存储应用相关的配置</span><span class="token comment">//</span><span class="token comment">// 不用viper.Get 是因为这种方式能更加清晰知道应用提供了哪些配置项</span><span class="token keyword">type</span> Config <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>MYSQLOptions <span class="token operator">*</span>genericoptions<span class="token punctuation">.</span>MySQLOptionAddr         <span class="token builtin">string</span><span class="token punctuation">&#125;</span><span class="token comment">// NewServer</span><span class="token comment">//</span><span class="token comment">//@Description: NewServer 根据配置创建服务器</span><span class="token comment">//@receiver cfg</span><span class="token comment">//@return *Server</span><span class="token comment">//@return error</span><span class="token keyword">func</span> <span class="token punctuation">(</span>cfg <span class="token operator">*</span>Config<span class="token punctuation">)</span> <span class="token function">NewServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>Server<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 创建Gin引擎</span>engine <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// gin.Recovery() 中间件，用来捕获任何panic并恢复</span>mws <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>gin<span class="token punctuation">.</span>HandlerFunc<span class="token punctuation">&#123;</span>gin<span class="token punctuation">.</span><span class="token function">Recovery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> middleware<span class="token punctuation">.</span>NoCache<span class="token punctuation">,</span> middleware<span class="token punctuation">.</span>Cors<span class="token punctuation">,</span> middleware<span class="token punctuation">.</span><span class="token function">RequestID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>engine<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span>mws<span class="token operator">...</span><span class="token punctuation">)</span><span class="token comment">// 注册404 handler</span>engine<span class="token punctuation">.</span><span class="token function">NoRoute</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusNotFound<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"code"</span><span class="token punctuation">:</span>    <span class="token number">404</span><span class="token punctuation">,</span><span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"Page not Found"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 注册/healthz handler</span>engine<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/healthz"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"status"</span><span class="token punctuation">:</span> <span class="token string">"ok"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 创建HTTP Server实例</span>httpsrv <span class="token operator">:=</span> <span class="token operator">&amp;</span>http<span class="token punctuation">.</span>Server<span class="token punctuation">&#123;</span>Addr<span class="token punctuation">:</span> cfg<span class="token punctuation">.</span>Addr<span class="token punctuation">,</span> Handler<span class="token punctuation">:</span> engine<span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token operator">&amp;</span>Server<span class="token punctuation">&#123;</span>cfg<span class="token punctuation">:</span> cfg<span class="token punctuation">,</span> srv<span class="token punctuation">:</span> httpsrv<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token comment">// Run</span><span class="token comment">//</span><span class="token comment">//@Description: Run运行应用</span><span class="token comment">//@receiver s</span><span class="token comment">//@return error</span><span class="token keyword">func</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>Server<span class="token punctuation">)</span> <span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span>slog<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span>fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"Read MYSQL host from config %s"</span><span class="token punctuation">,</span> s<span class="token punctuation">.</span>cfg<span class="token punctuation">.</span>MYSQLOptions<span class="token punctuation">.</span>Addr<span class="token punctuation">)</span><span class="token punctuation">)</span>slog<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">"Start to listening the incoming requests on http address"</span><span class="token punctuation">,</span> <span class="token string">"addr"</span><span class="token punctuation">,</span> s<span class="token punctuation">.</span>cfg<span class="token punctuation">.</span>Addr<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">:=</span> s<span class="token punctuation">.</span>srv<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>errors<span class="token punctuation">.</span><span class="token function">Is</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> http<span class="token punctuation">.</span>ErrServerClosed<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="编译并运行"><a href="#编译并运行" class="headerlink" title="编译并运行"></a>编译并运行</h3><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook<span class="token operator">-</span>Pro fastgo <span class="token operator">%</span> sh build<span class="token punctuation">.</span>sh                                        gitlab<span class="token punctuation">.</span>com<span class="token operator">/</span>onexstack<span class="token operator">/</span>fastgo<span class="token operator">/</span>internal<span class="token operator">/</span>apiservergitlab<span class="token punctuation">.</span>com<span class="token operator">/</span>onexstack<span class="token operator">/</span>fastgo<span class="token operator">/</span>cmd<span class="token operator">/</span>fg<span class="token operator">-</span>apiserver<span class="token operator">/</span>app<span class="token operator">/</span>optionsgitlab<span class="token punctuation">.</span>com<span class="token operator">/</span>onexstack<span class="token operator">/</span>fastgo<span class="token operator">/</span>cmd<span class="token operator">/</span>fg<span class="token operator">-</span>apiserver<span class="token operator">/</span>appcommand<span class="token operator">-</span>line<span class="token operator">-</span>arguments<span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook<span class="token operator">-</span>Pro fastgo <span class="token operator">%</span> <span class="token punctuation">.</span><span class="token operator">/</span>_output<span class="token operator">/</span>fg<span class="token operator">-</span>apiserver <span class="token operator">-</span>c configs<span class="token operator">/</span>fg<span class="token operator">-</span>apiserver<span class="token punctuation">.</span>yaml<span class="token operator">/</span>Users<span class="token operator">/</span>dujie<span class="token operator">/</span><span class="token punctuation">.</span>fastgo<span class="token operator">/</span>fg<span class="token operator">-</span>apiserver<span class="token punctuation">.</span>yaml<span class="token punctuation">[</span>GIN<span class="token operator">-</span>debug<span class="token punctuation">]</span> <span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span> Running in <span class="token string">"debug"</span> mode<span class="token punctuation">.</span> Switch to <span class="token string">"release"</span> mode in production<span class="token punctuation">.</span> <span class="token operator">-</span> using env<span class="token punctuation">:</span>   export GIN_MODE<span class="token operator">=</span>release <span class="token operator">-</span> using code<span class="token punctuation">:</span>  gin<span class="token punctuation">.</span><span class="token function">SetMode</span><span class="token punctuation">(</span>gin<span class="token punctuation">.</span>ReleaseMode<span class="token punctuation">)</span><span class="token punctuation">[</span>GIN<span class="token operator">-</span>debug<span class="token punctuation">]</span> GET    <span class="token operator">/</span>healthz                  <span class="token operator">--</span><span class="token operator">></span> gitlab<span class="token punctuation">.</span>com<span class="token operator">/</span>onexstack<span class="token operator">/</span>fastgo<span class="token operator">/</span>internal<span class="token operator">/</span>apiserver<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span>Config<span class="token punctuation">)</span><span class="token punctuation">.</span>NewServer<span class="token punctuation">.</span>func2 <span class="token punctuation">(</span><span class="token number">5</span> handlers<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook<span class="token operator">-</span>Pro fastgo <span class="token operator">%</span> curl <span class="token operator">-</span>v  http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token punctuation">:</span><span class="token number">6666</span><span class="token operator">/</span>healthz<span class="token operator">*</span>   Trying <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token punctuation">:</span><span class="token number">6666.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">*</span> Connected to <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span> <span class="token punctuation">(</span><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token punctuation">)</span> port <span class="token number">6666</span><span class="token operator">></span> GET <span class="token operator">/</span>healthz HTTP<span class="token operator">/</span><span class="token number">1.1</span><span class="token operator">></span> Host<span class="token punctuation">:</span> <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token punctuation">:</span><span class="token number">6666</span><span class="token operator">></span> User<span class="token operator">-</span>Agent<span class="token punctuation">:</span> curl<span class="token operator">/</span><span class="token number">8.9</span><span class="token number">.1</span><span class="token operator">></span> Accept<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token comment">/*> * Request completely sent off&lt; HTTP/1.1 200 OK&lt; Cache-Control: no-cache, no-store, max-age=0, must-revalidate, value&lt; Content-Type: application/json; charset=utf-8&lt; Expires: Thu, 01 Jan 1970 00:00:00 GMT&lt; Last-Modified: Wed, 02 Apr 2025 06:49:48 GMT&lt; X-Request-Id: c1fba2dc-d43a-4c72-ae2f-debcb3914353&lt; Date: Wed, 02 Apr 2025 06:49:48 GMT&lt; Content-Length: 15&lt; * Connection #0 to host 127.0.0.1 left intact&#123;"status":"ok"&#125;%        </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到，请求返回中，成功返回了请求ID：<code>X-Request-Id</code> ，及<code>NoCache</code>中间件设置的返回头</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;8、给Gin服务器添加中间件&quot;&gt;&lt;a href=&quot;#8、给Gin服务器添加中间件&quot; class=&quot;headerlink&quot; title=&quot;8、给Gin服务器添加中间件&quot;&gt;&lt;/a&gt;8、给Gin服务器添加中间件&lt;/h1&gt;&lt;h3 id=&quot;Web中间件介绍&quot;&gt;&lt;a href</summary>
      
    
    
    
    <category term="Fastgo项目学习" scheme="http://dycloud.fun/categories/Fastgo%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="云原生" scheme="http://dycloud.fun/tags/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
    <category term="golang" scheme="http://dycloud.fun/tags/golang/"/>
    
    <category term="Fastgo项目学习" scheme="http://dycloud.fun/tags/Fastgo%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>7、基于Gin实现HTTP服务器</title>
    <link href="http://dycloud.fun/2025/02/12/7%E3%80%81%E5%9F%BA%E4%BA%8EGin%E5%AE%9E%E7%8E%B0HTTP%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://dycloud.fun/2025/02/12/7%E3%80%81%E5%9F%BA%E4%BA%8EGin%E5%AE%9E%E7%8E%B0HTTP%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2025-02-12T04:32:00.000Z</published>
    <updated>2025-04-02T08:20:06.773Z</updated>
    
    <content type="html"><![CDATA[<h1 id="7、基于Gin实现HTTP服务器"><a href="#7、基于Gin实现HTTP服务器" class="headerlink" title="7、基于Gin实现HTTP服务器"></a>7、基于Gin实现HTTP服务器</h1><p>在go项目开发中，开发场景很多的是开发一个web服务器、web服务器种类有很多，例如：Http服务器、RPC服务器、webSocket服务器等。</p><p>其中Http服务器是最常需要开发的服务器类型。HTTP就是一个对外提供API接口的Web服务器。API接口其实是有规范的，当前用的最多的REST规范。</p><h3 id="REST-Web框架选择"><a href="#REST-Web框架选择" class="headerlink" title="REST Web框架选择"></a>REST Web框架选择</h3><p>要编写一个<code>RESTful</code>风格的API服务器，你可以自己调用 net&#x2F;http 包手动实现一个，但这样耗时且效果不好，所以通常会使用web框架来开发一个REST服务器</p><p>Web框架有很多，例如：<a href="https://github.com/gin-gonic/gin">Gin</a>、<a href="https://github.com/cloudwego/hertz">Hertz</a>、<a href="https://github.com/labstack/echo">Echo</a>、<a href="https://github.com/gofiber/fiber">Eiber</a>等。用的最多的是Gin，查看<a href="https://github.com/gin-gonic/gin/blob/master/BENCHMARKS.md">性能对比</a></p><h3 id="开发一个简单的REST服务器"><a href="#开发一个简单的REST服务器" class="headerlink" title="开发一个简单的REST服务器"></a>开发一个简单的REST服务器</h3><p>使用Gin框架开发一个REST服务器分为以下几步：</p><ol><li>配置REST服务器（配置监听端口）</li><li>创建Gin引擎</li><li>设置Gin路由</li><li>启动Gin服务器</li></ol><h5 id="步骤一：配置REST服务器"><a href="#步骤一：配置REST服务器" class="headerlink" title="步骤一：配置REST服务器"></a>步骤一：配置REST服务器</h5><p>修改cmd&#x2F;fg-apiserver&#x2F;app&#x2F;options&#x2F;options.go 文件，给<code>ServerOptions</code>结构体添加<code>Addr</code>配置项。</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> options<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"fmt"</span><span class="token string">"gitlab.com/onexstack/fastgo/internal/apiserver"</span>genericoptions <span class="token string">"gitlab.com/onexstack/fastgo/pkg/options"</span><span class="token string">"log/slog"</span><span class="token string">"net"</span><span class="token string">"strconv"</span><span class="token punctuation">)</span><span class="token keyword">type</span> ServerOptions <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>MySQLOptions <span class="token operator">*</span>genericoptions<span class="token punctuation">.</span>MySQLOption <span class="token string">`json:"mysql" mapstructure:"mysql"`</span>Addr         <span class="token builtin">string</span>                      <span class="token string">`json:"addr" mapstructure:"addr"`</span><span class="token punctuation">&#125;</span><span class="token comment">// NewServerOptions 创建带有默认值的 ServerOptions 实例.</span><span class="token keyword">func</span> <span class="token function">NewServerOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span>ServerOptions <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token operator">&amp;</span>ServerOptions<span class="token punctuation">&#123;</span>MySQLOptions<span class="token punctuation">:</span> genericoptions<span class="token punctuation">.</span><span class="token function">NewMYSQLOption</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>Addr<span class="token punctuation">:</span>         <span class="token string">"0.0.0.0:6666"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// Validate</span><span class="token comment">//</span><span class="token comment">//@Description: Validate校验ServierOptions参数是否合法</span><span class="token comment">//@receiver s</span><span class="token comment">//@return error</span><span class="token keyword">func</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>ServerOptions<span class="token punctuation">)</span> <span class="token function">Validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span><span class="token comment">// 验证服务器地址</span><span class="token keyword">if</span> s<span class="token punctuation">.</span>Addr <span class="token operator">==</span> <span class="token string">""</span> <span class="token punctuation">&#123;</span>slog<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"server address cannot be empty"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"server address cannot be empty"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 检查地址是否为host:port</span><span class="token boolean">_</span><span class="token punctuation">,</span> portStr<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">SplitHostPort</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>Addr<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>slog<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"invalid server address format '%s': %w"</span><span class="token punctuation">,</span> s<span class="token punctuation">.</span>Addr<span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"invalid server address format '%s': %w"</span><span class="token punctuation">,</span> s<span class="token punctuation">.</span>Addr<span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 验证端口是否为数字且在有效范围内</span>port<span class="token punctuation">,</span> err <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">Atoi</span><span class="token punctuation">(</span>portStr<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token operator">||</span> port <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token operator">||</span> port <span class="token operator">></span> <span class="token number">65535</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"invalid server port: %s"</span><span class="token punctuation">,</span> portStr<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 校验mysql格式</span>mysqlErr <span class="token operator">:=</span> s<span class="token punctuation">.</span>MySQLOptions<span class="token punctuation">.</span><span class="token function">Validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> mysqlErr <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>slog<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>mysqlErr<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> mysqlErr<span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token comment">// Config</span><span class="token comment">//</span><span class="token comment">//@Description: 基于ServerOptions构建apiserver.Config</span><span class="token comment">//@receiver s</span><span class="token comment">//@return *apiserver.Config</span><span class="token comment">//@return error</span><span class="token keyword">func</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>ServerOptions<span class="token punctuation">)</span> <span class="token function">Config</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>apiserver<span class="token punctuation">.</span>Config<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token operator">&amp;</span>apiserver<span class="token punctuation">.</span>Config<span class="token punctuation">&#123;</span>MYSQLOptions<span class="token punctuation">:</span> s<span class="token punctuation">.</span>MySQLOptions<span class="token punctuation">,</span>Addr<span class="token punctuation">:</span>         s<span class="token punctuation">.</span>Addr<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面的代码给<code>ServerOptions</code>结构体添加了<code>Addr</code>字段，用来保存web服务器的监听地址，默认地址设置为：<code>0.0.0.0:6666</code> </p><p>在Validate方法中，添加了对Addr字段的校验。</p><p>在Config方法中，需要将应用的<code>Addr</code>配置字段赋值给运行时陪住，所以还要在运行时配置中添加<code>Addr</code>字段。修改internal&#x2F;apiserver&#x2F;server.go中的Config结构体添加Addr字段</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> Config <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>MYSQLOptions <span class="token operator">*</span>genericoptions<span class="token punctuation">.</span>MySQLOptionAddr         <span class="token builtin">string</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h5 id="步骤二：创建Gin引擎"><a href="#步骤二：创建Gin引擎" class="headerlink" title="步骤二：创建Gin引擎"></a>步骤二：创建Gin引擎</h5><p>修改internal&#x2F;apiserver&#x2F;server.go，在Server结构体中增加<code>*http.Server</code> 类型的字段srv，并在<code>NewServer</code>方法中实例化<code>srv</code>，</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// Server</span><span class="token comment">// @Description: 定义一个服务器结构体类型</span><span class="token keyword">type</span> Server <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>cfg <span class="token operator">*</span>Configsrv <span class="token operator">*</span>http<span class="token punctuation">.</span>Server<span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>cfg <span class="token operator">*</span>Config<span class="token punctuation">)</span> <span class="token function">NewServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>Server<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 创建Gin引擎</span>engine <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 注册404 handler</span>engine<span class="token punctuation">.</span><span class="token function">NoRoute</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusNotFound<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"code"</span><span class="token punctuation">:</span>    <span class="token number">404</span><span class="token punctuation">,</span><span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"Page not Found"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 注册/healthz handler</span>engine<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/healthz"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"status"</span><span class="token punctuation">:</span> <span class="token string">"ok"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 创建HTTP Server实例</span>httpsrv <span class="token operator">:=</span> <span class="token operator">&amp;</span>http<span class="token punctuation">.</span>Server<span class="token punctuation">&#123;</span>Addr<span class="token punctuation">:</span> cfg<span class="token punctuation">.</span>Addr<span class="token punctuation">,</span> Handler<span class="token punctuation">:</span> engine<span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token operator">&amp;</span>Server<span class="token punctuation">&#123;</span>cfg<span class="token punctuation">:</span> cfg<span class="token punctuation">,</span> srv<span class="token punctuation">:</span> httpsrv<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在<code>NewServer</code>方法中，通过<code>gin.New()</code> 创建了一个Gin引擎实例<code>engine</code>。并通过<code>engine</code>中的方法给<code>engine</code>设置了REST路由和中间件</p><p>代码中的<code>engine.Noroute</code>方法调用，设置了当Gin找不到匹配的请求路径时返回的信息。</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token punctuation">&#123;</span><span class="token string">"code"</span><span class="token punctuation">:</span><span class="token number">404</span><span class="token punctuation">,</span><span class="token string">"message"</span><span class="token punctuation">:</span><span class="token string">"Page not Found"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>NewServer</code> 方法的最后部分，创建了标准库的<code>http.Server</code> 实例，并将配制好的Gin引擎设置为其Handler，随后将配置对象和HTTP服务器注入到新创建的Server结构体中并返回。</p><h5 id="步骤三：设置Gin路由"><a href="#步骤三：设置Gin路由" class="headerlink" title="步骤三：设置Gin路由"></a>步骤三：设置Gin路由</h5><p>有时候服务器进程起来不代表服务器可以正常对外提供API，因此在启动服务器时最好加一个健康检查接口。</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// 注册/healthz handler</span>engine<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/healthz"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"status"</span><span class="token punctuation">:</span> <span class="token string">"ok"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="步骤四：启动Gin服务器"><a href="#步骤四：启动Gin服务器" class="headerlink" title="步骤四：启动Gin服务器"></a>步骤四：启动Gin服务器</h5><p>在<code>NewServer</code>方法中创建了Server的实例，接下来就可以在Server实例的Run方法中启动HTTP服务器</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>Server<span class="token punctuation">)</span> <span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span>slog<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span>fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"Read MYSQL host from config %s"</span><span class="token punctuation">,</span> s<span class="token punctuation">.</span>cfg<span class="token punctuation">.</span>MYSQLOptions<span class="token punctuation">.</span>Addr<span class="token punctuation">)</span><span class="token punctuation">)</span>slog<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">"Start to listening the incoming requests on http address"</span><span class="token punctuation">,</span> <span class="token string">"addr"</span><span class="token punctuation">,</span> s<span class="token punctuation">.</span>cfg<span class="token punctuation">.</span>Addr<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">:=</span> s<span class="token punctuation">.</span>srv<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>errors<span class="token punctuation">.</span><span class="token function">Is</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> http<span class="token punctuation">.</span>ErrServerClosed<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>s.srv.ListenAndServe()</code> 方法用来启动HTTP服务器。当该方法返回错误时，报错并退出。这里要注意，上面代码处理了一个特殊的错误情况：<code>http.ErrServerClosed</code> 。当主动调用<code>http.Server</code>的<code>Shutdown()</code>或<code>Close()</code>方法时，<code>ListenAndServe()</code>会返回这个特定的错误<code>http.ErrServerClosed</code>，标表示服务器是被预期的、主动的关闭，而非意外崩溃。所以这种情况不应该被视作异常或错误，不需要额外处理或返回</p><h3 id="编译并运行"><a href="#编译并运行" class="headerlink" title="编译并运行"></a>编译并运行</h3><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook<span class="token operator">-</span>Pro fastgo <span class="token operator">%</span> sh build<span class="token punctuation">.</span>sh                                        gitlab<span class="token punctuation">.</span>com<span class="token operator">/</span>onexstack<span class="token operator">/</span>fastgo<span class="token operator">/</span>internal<span class="token operator">/</span>apiservergitlab<span class="token punctuation">.</span>com<span class="token operator">/</span>onexstack<span class="token operator">/</span>fastgo<span class="token operator">/</span>cmd<span class="token operator">/</span>fg<span class="token operator">-</span>apiserver<span class="token operator">/</span>app<span class="token operator">/</span>optionscommand<span class="token operator">-</span>line<span class="token operator">-</span>arguments<span class="token operator">^</span><span class="token punctuation">[</span><span class="token punctuation">[</span>A<span class="token operator">%</span>                                                                                                                                                                                                                                                                                                                   <span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook<span class="token operator">-</span>Pro fastgo <span class="token operator">%</span> <span class="token punctuation">.</span><span class="token operator">/</span>_output<span class="token operator">/</span>fg<span class="token operator">-</span>apiserver <span class="token operator">-</span>c configs<span class="token operator">/</span>fg<span class="token operator">-</span>apiserver<span class="token punctuation">.</span>yaml<span class="token operator">/</span>Users<span class="token operator">/</span>dujie<span class="token operator">/</span><span class="token punctuation">.</span>fastgo<span class="token operator">/</span>fg<span class="token operator">-</span>apiserver<span class="token punctuation">.</span>yaml<span class="token punctuation">[</span>GIN<span class="token operator">-</span>debug<span class="token punctuation">]</span> <span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span> Running in <span class="token string">"debug"</span> mode<span class="token punctuation">.</span> Switch to <span class="token string">"release"</span> mode in production<span class="token punctuation">.</span> <span class="token operator">-</span> using env<span class="token punctuation">:</span>   export GIN_MODE<span class="token operator">=</span>release <span class="token operator">-</span> using code<span class="token punctuation">:</span>  gin<span class="token punctuation">.</span><span class="token function">SetMode</span><span class="token punctuation">(</span>gin<span class="token punctuation">.</span>ReleaseMode<span class="token punctuation">)</span><span class="token punctuation">[</span>GIN<span class="token operator">-</span>debug<span class="token punctuation">]</span> GET    <span class="token operator">/</span>healthz                  <span class="token operator">--</span><span class="token operator">></span> gitlab<span class="token punctuation">.</span>com<span class="token operator">/</span>onexstack<span class="token operator">/</span>fastgo<span class="token operator">/</span>internal<span class="token operator">/</span>apiserver<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span>Config<span class="token punctuation">)</span><span class="token punctuation">.</span>NewServer<span class="token punctuation">.</span>func2 <span class="token punctuation">(</span><span class="token number">1</span> handlers<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>打开一个新的Linux终端测试</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook<span class="token operator">-</span>Pro fastgo <span class="token operator">%</span> curl http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token punctuation">:</span><span class="token number">6666</span><span class="token operator">/</span>nonexist<span class="token punctuation">&#123;</span><span class="token string">"code"</span><span class="token punctuation">:</span><span class="token number">404</span><span class="token punctuation">,</span><span class="token string">"message"</span><span class="token punctuation">:</span><span class="token string">"Page not Found"</span><span class="token punctuation">&#125;</span><span class="token operator">%</span>                                                                  base<span class="token punctuation">)</span> dujie@MacBook<span class="token operator">-</span>Pro fastgo <span class="token operator">%</span> curl http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token punctuation">:</span><span class="token number">6666</span><span class="token operator">/</span>healthz <span class="token punctuation">&#123;</span><span class="token string">"status"</span><span class="token punctuation">:</span><span class="token string">"ok"</span><span class="token punctuation">&#125;</span><span class="token operator">%</span>               <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>curl工具常用参数</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token operator">-</span>X<span class="token operator">/</span><span class="token operator">--</span>request <span class="token punctuation">[</span>GET<span class="token operator">|</span>POST<span class="token operator">|</span>PUT<span class="token operator">|</span>DELETE<span class="token operator">|</span>…<span class="token punctuation">]</span>  指定请求的 HTTP 方法<span class="token operator">-</span>H<span class="token operator">/</span><span class="token operator">--</span>header                           指定请求的 HTTP Header<span class="token operator">-</span>d<span class="token operator">/</span><span class="token operator">--</span>data                             指定请求的 HTTP 消息体（Body）<span class="token operator">-</span>v<span class="token operator">/</span><span class="token operator">--</span>verbose                          输出详细的返回信息<span class="token operator">-</span>u<span class="token operator">/</span><span class="token operator">--</span>user                             指定账号、密码<span class="token operator">-</span>b<span class="token operator">/</span><span class="token operator">--</span>cookie                           读取 cookie<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;7、基于Gin实现HTTP服务器&quot;&gt;&lt;a href=&quot;#7、基于Gin实现HTTP服务器&quot; class=&quot;headerlink&quot; title=&quot;7、基于Gin实现HTTP服务器&quot;&gt;&lt;/a&gt;7、基于Gin实现HTTP服务器&lt;/h1&gt;&lt;p&gt;在go项目开发中，开发场景很</summary>
      
    
    
    
    <category term="Fastgo项目学习" scheme="http://dycloud.fun/categories/Fastgo%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="云原生" scheme="http://dycloud.fun/tags/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
    <category term="golang" scheme="http://dycloud.fun/tags/golang/"/>
    
    <category term="Fastgo项目学习" scheme="http://dycloud.fun/tags/Fastgo%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>6、实现日志打印功能</title>
    <link href="http://dycloud.fun/2025/02/12/6%E3%80%81%E5%AE%9E%E7%8E%B0%E6%97%A5%E5%BF%97%E6%89%93%E5%8D%B0%E5%8A%9F%E8%83%BD/"/>
    <id>http://dycloud.fun/2025/02/12/6%E3%80%81%E5%AE%9E%E7%8E%B0%E6%97%A5%E5%BF%97%E6%89%93%E5%8D%B0%E5%8A%9F%E8%83%BD/</id>
    <published>2025-02-12T03:40:00.000Z</published>
    <updated>2025-04-02T08:20:01.047Z</updated>
    
    <content type="html"><![CDATA[<h1 id="6、实现日志打印功能"><a href="#6、实现日志打印功能" class="headerlink" title="6、实现日志打印功能"></a>6、实现日志打印功能</h1><p>打印日志需要一个日志包，日志包的选择通常有以下几种手段</p><ul><li>自研：根据需要从0自研一个日志包</li><li>复用团队&#x2F;公司基本的日志包：更多的情况，是复用公司级别的日志包</li><li>复用开源日志包：如<a href="https://github.com/sirupsen/logrus">sirupsen&#x2F;logrus</a>、<a href="https://github.com/uber-go/zap">uber-go&#x2F;zap</a></li></ul><p>go标准库也自带了一个生产可用的日志包<code>log/slog</code> </p><h3 id="Go代码使用日志包的步骤"><a href="#Go代码使用日志包的步骤" class="headerlink" title="Go代码使用日志包的步骤"></a>Go代码使用日志包的步骤</h3><ol><li>初始化日志包</li><li>调用日志包</li></ol><h5 id="步骤一：初始化日志包"><a href="#步骤一：初始化日志包" class="headerlink" title="步骤一：初始化日志包"></a>步骤一：初始化日志包</h5><p>修改cmd&#x2F;fg-apiserver&#x2F;server.go文件</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">initLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>format <span class="token operator">:=</span> viper<span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span><span class="token string">"log.format"</span><span class="token punctuation">)</span> <span class="token comment">// 日志格式，支持：json、text</span>level <span class="token operator">:=</span> viper<span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span><span class="token string">"log.level"</span><span class="token punctuation">)</span>   <span class="token comment">// 日志级别，支持：debug、info、warn、error</span>output <span class="token operator">:=</span> viper<span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span><span class="token string">"log.output"</span><span class="token punctuation">)</span> <span class="token comment">// 日志输出路径，支持：标准输出stdout和文件</span><span class="token comment">// 转换日志级别</span><span class="token keyword">var</span> slevel slog<span class="token punctuation">.</span>Level<span class="token keyword">switch</span> level <span class="token punctuation">&#123;</span><span class="token keyword">case</span> <span class="token string">"debug"</span><span class="token punctuation">:</span>slevel <span class="token operator">=</span> slog<span class="token punctuation">.</span>LevelDebug<span class="token keyword">case</span> <span class="token string">"info"</span><span class="token punctuation">:</span>slevel <span class="token operator">=</span> slog<span class="token punctuation">.</span>LevelInfo<span class="token keyword">case</span> <span class="token string">"warn"</span><span class="token punctuation">:</span>slevel <span class="token operator">=</span> slog<span class="token punctuation">.</span>LevelWarn<span class="token keyword">case</span> <span class="token string">"error"</span><span class="token punctuation">:</span>slevel <span class="token operator">=</span> slog<span class="token punctuation">.</span>LevelError<span class="token keyword">default</span><span class="token punctuation">:</span>slevel <span class="token operator">=</span> slog<span class="token punctuation">.</span>LevelInfo<span class="token punctuation">&#125;</span>opts <span class="token operator">:=</span> <span class="token operator">&amp;</span>slog<span class="token punctuation">.</span>HandlerOptions<span class="token punctuation">&#123;</span>Level<span class="token punctuation">:</span> slevel<span class="token punctuation">&#125;</span><span class="token keyword">var</span> w io<span class="token punctuation">.</span>Writer<span class="token keyword">var</span> err <span class="token builtin">error</span><span class="token comment">// 转换日志输出路径</span><span class="token keyword">switch</span> output <span class="token punctuation">&#123;</span><span class="token keyword">case</span> <span class="token string">""</span><span class="token punctuation">:</span>w <span class="token operator">=</span> os<span class="token punctuation">.</span>Stdout<span class="token keyword">case</span> <span class="token string">"stdout"</span><span class="token punctuation">:</span>w <span class="token operator">=</span> os<span class="token punctuation">.</span>Stdout<span class="token keyword">default</span><span class="token punctuation">:</span>w<span class="token punctuation">,</span> err <span class="token operator">=</span> os<span class="token punctuation">.</span><span class="token function">OpenFile</span><span class="token punctuation">(</span>output<span class="token punctuation">,</span> os<span class="token punctuation">.</span>O_CREATE<span class="token operator">|</span>os<span class="token punctuation">.</span>O_WRONLY<span class="token operator">|</span>os<span class="token punctuation">.</span>O_APPEND<span class="token punctuation">,</span> <span class="token number">0666</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 转换日志格式</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> handler slog<span class="token punctuation">.</span>Handler<span class="token keyword">switch</span> format <span class="token punctuation">&#123;</span><span class="token keyword">case</span> <span class="token string">"json"</span><span class="token punctuation">:</span>handler <span class="token operator">=</span> slog<span class="token punctuation">.</span><span class="token function">NewJSONHandler</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> opts<span class="token punctuation">)</span><span class="token keyword">case</span> <span class="token string">"text"</span><span class="token punctuation">:</span>handler <span class="token operator">=</span> slog<span class="token punctuation">.</span><span class="token function">NewTextHandler</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> opts<span class="token punctuation">)</span><span class="token keyword">default</span><span class="token punctuation">:</span>handler <span class="token operator">=</span> slog<span class="token punctuation">.</span><span class="token function">NewJSONHandler</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> opts<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>slog<span class="token punctuation">.</span><span class="token function">SetDefault</span><span class="token punctuation">(</span>slog<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">run</span><span class="token punctuation">(</span>opts <span class="token operator">*</span>options<span class="token punctuation">.</span>ServerOptions<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span><span class="token operator">...</span>        <span class="token comment">// 初始化slog</span><span class="token function">initLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="步骤二：调用日志包"><a href="#步骤二：调用日志包" class="headerlink" title="步骤二：调用日志包"></a>步骤二：调用日志包</h5><p>在internal&#x2F;apiserver&#x2F;server.go 中，将输入改成调用slog日志包来输出。</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>Server<span class="token punctuation">)</span> <span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span>slog<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span>fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"Read MYSQL host from config %s"</span><span class="token punctuation">,</span> s<span class="token punctuation">.</span>cfg<span class="token punctuation">.</span>MYSQLOptions<span class="token punctuation">.</span>Addr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//select &#123;&#125; // 调用select 语句，阻塞防止进程退出</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>slog包还提供了Debug、warn、Error等方法，用来打印不同级别的日志</p><h3 id="编译并运行"><a href="#编译并运行" class="headerlink" title="编译并运行"></a>编译并运行</h3><p>1、更新配置文件</p><p>更新config&#x2F;fg-apiserver.yaml</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Mysql数据库相关配置</span><span class="token key atrule">mysql</span><span class="token punctuation">:</span>  <span class="token comment"># MYSQL 机器ip和端口，默认127.0.0.1:3306</span>  <span class="token key atrule">addr</span><span class="token punctuation">:</span> 127.0.0.1<span class="token punctuation">:</span><span class="token number">3306</span>  <span class="token comment"># mysql用户名</span>  <span class="token key atrule">username</span><span class="token punctuation">:</span> fastgo  <span class="token comment"># mysql密码</span>  <span class="token key atrule">password</span><span class="token punctuation">:</span> fastgo1234  <span class="token comment"># 数据库名</span>  <span class="token key atrule">database</span><span class="token punctuation">:</span> fastgo  <span class="token comment"># 最大空闲连接数，默认100</span>  <span class="token key atrule">max-idle-connections</span><span class="token punctuation">:</span> <span class="token number">100</span>  <span class="token comment"># 最大打开链接数</span>  <span class="token key atrule">max-open-connections</span><span class="token punctuation">:</span> <span class="token number">100</span>  <span class="token comment"># 空闲连接最大存活时间</span>  <span class="token key atrule">max-connection-life-time</span><span class="token punctuation">:</span> 10s<span class="token key atrule">log</span><span class="token punctuation">:</span>  <span class="token key atrule">format</span><span class="token punctuation">:</span> json  <span class="token key atrule">level</span><span class="token punctuation">:</span> info  <span class="token key atrule">output</span><span class="token punctuation">:</span> stdout<span class="token comment">#  output: ./log/fg-apiserver-info.log 输出到文件中</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2、编译并运行</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">(base) dujie@MacBook<span class="token punctuation">-</span>Pro fastgo % sh build.sh command<span class="token punctuation">-</span>line<span class="token punctuation">-</span>arguments(base) dujie@MacBook<span class="token punctuation">-</span>Pro fastgo % ./_output/fg<span class="token punctuation">-</span>apiserver <span class="token punctuation">-</span>c configs/fg<span class="token punctuation">-</span>apiserver.yaml/Users/dujie/.fastgo/fg<span class="token punctuation">-</span>apiserver.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/images/jB5IBZ6c5nOWQREEnAnoTkQCAt59u371k6J3sL-8PIs.png" alt="image"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;6、实现日志打印功能&quot;&gt;&lt;a href=&quot;#6、实现日志打印功能&quot; class=&quot;headerlink&quot; title=&quot;6、实现日志打印功能&quot;&gt;&lt;/a&gt;6、实现日志打印功能&lt;/h1&gt;&lt;p&gt;打印日志需要一个日志包，日志包的选择通常有以下几种手段&lt;/p&gt;
&lt;ul&gt;
&lt;</summary>
      
    
    
    
    <category term="Fastgo项目学习" scheme="http://dycloud.fun/categories/Fastgo%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="云原生" scheme="http://dycloud.fun/tags/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
    <category term="golang" scheme="http://dycloud.fun/tags/golang/"/>
    
    <category term="Fastgo项目学习" scheme="http://dycloud.fun/tags/Fastgo%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>6、实现版本号打印功能</title>
    <link href="http://dycloud.fun/2025/02/12/5%E3%80%81%E5%AE%9E%E7%8E%B0%E7%89%88%E6%9C%AC%E5%8F%B7%E6%89%93%E5%8D%B0%E5%8A%9F%E8%83%BD/"/>
    <id>http://dycloud.fun/2025/02/12/5%E3%80%81%E5%AE%9E%E7%8E%B0%E7%89%88%E6%9C%AC%E5%8F%B7%E6%89%93%E5%8D%B0%E5%8A%9F%E8%83%BD/</id>
    <published>2025-02-12T03:33:00.000Z</published>
    <updated>2025-04-02T08:19:55.865Z</updated>
    
    <content type="html"><![CDATA[<h1 id="5、实现版本号打印功能"><a href="#5、实现版本号打印功能" class="headerlink" title="5、实现版本号打印功能"></a>5、实现版本号打印功能</h1><p>go项目中，为了方便排障等，需要知道某个线上应用的具体版本。另外，在开发命令行工具的时候，也需要支持<code>-v</code>  &#x2F; <code>--version</code> 之类的命令行参数。这时候就需要给应用添加版本号打印功能。</p><h3 id="如何添加版本号？"><a href="#如何添加版本号？" class="headerlink" title="如何添加版本号？"></a>如何添加版本号？</h3><p>实际开发中国，当完成一个应用特性开发后，会编译 应用源码并发布到生产环境。为了定位问题或出于安全考虑（确认发布的是正确的版本），开发者通常需要了解应用的版本信息及一些编译时的详细信息，例如编译时使用的go版本、git目录是否干净，以及哪个git提交id进行的编译。在一个编译好的可执行程序中，通常可以通过类似<code>/appname  -v </code>的方式来获取版本信息。</p><p>可以将这些信息写入版本号配置文件中，程序运行时从版本号配置文件中读取并显示。然而，在程序部署时，除了二进制文件外，还需要额外的版本号配置文件，这种方式既不方便，又面临版本号配置文件被篡改的风险，另一种方式是将这些信息直接写入代码，这样无需额外的版本号配置文件，但每次编译时都需要修改代码以更新版本号，这种方式同样不够优雅。</p><p>Go官方提供了一种更优的方式：通过编译时指定<code>-ldflags  -X importpath.name=value</code>参数，来为程序自动注入版本信息。</p><blockquote><p>实际开发中，绝大多数情况是使用git进行源码版本管理，因此fastgo的版本功能也基于git实现。</p></blockquote><h3 id="给fg-apiserver-组件添加版本号功能"><a href="#给fg-apiserver-组件添加版本号功能" class="headerlink" title="给fg-apiserver 组件添加版本号功能"></a>给fg-apiserver 组件添加版本号功能</h3><p>可以通过以下步骤添加</p><ol><li>创建一个version包用于保存版本信息</li><li>将版本信息注入到version包中</li><li>fg-apiserver应用添加<code>--version</code>命令行选项</li></ol><h3 id="创建一个version包"><a href="#创建一个version包" class="headerlink" title="创建一个version包"></a>创建一个version包</h3><p>创建一个pkg&#x2F;version&#x2F;version.go 文件</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> version<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"encoding/json"</span><span class="token string">"fmt"</span><span class="token string">"github.com/gosuri/uitable"</span><span class="token string">"runtime"</span><span class="token punctuation">)</span><span class="token keyword">var</span> <span class="token punctuation">(</span><span class="token comment">// semantic version, derived by build scripts (see</span><span class="token comment">// https://github.com/kubernetes/community/blob/master/contributors/design-proposals/release/versioning.md</span><span class="token comment">// for a detailed discussion of this field)</span><span class="token comment">//</span><span class="token comment">// TODO: This field is still called "gitVersion" for legacy</span><span class="token comment">// reasons. For prerelease versions, the build metadata on the</span><span class="token comment">// semantic version is a git hash, but the version itself is no</span><span class="token comment">// longer the direct output of "git describe", but a slight</span><span class="token comment">// translation to be semver compliant.</span><span class="token comment">// NOTE: The $Format strings are replaced during 'git archive' thanks to the</span><span class="token comment">// companion .gitattributes file containing 'export-subst' in this same</span><span class="token comment">// directory.  See also https://git-scm.com/docs/gitattributes</span>gitVersion   <span class="token operator">=</span> <span class="token string">"v0.0.0-master+$Format:%H$"</span>gitCommit    <span class="token operator">=</span> <span class="token string">"$Format:%H$"</span> <span class="token comment">// sha1 from git, output of $(git rev-parse HEAD)</span>gitTreeState <span class="token operator">=</span> <span class="token string">""</span>            <span class="token comment">// state of git tree, either "clean" or "dirty"</span>buildDate <span class="token operator">=</span> <span class="token string">"1970-01-01T00:00:00Z"</span> <span class="token comment">// build date in ISO8601 format, output of $(date -u +'%Y-%m-%dT%H:%M:%SZ')</span><span class="token punctuation">)</span><span class="token comment">// Info contains versioning information.</span><span class="token keyword">type</span> Info <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>GitVersion   <span class="token builtin">string</span> <span class="token string">`json:"gitVersion"`</span>GitCommit    <span class="token builtin">string</span> <span class="token string">`json:"gitCommit"`</span>GitTreeState <span class="token builtin">string</span> <span class="token string">`json:"gitTreeState"`</span>BuildDate    <span class="token builtin">string</span> <span class="token string">`json:"buildDate"`</span>GoVersion    <span class="token builtin">string</span> <span class="token string">`json:"goVersion"`</span>Compiler     <span class="token builtin">string</span> <span class="token string">`json:"compiler"`</span>Platform     <span class="token builtin">string</span> <span class="token string">`json:"platform"`</span><span class="token punctuation">&#125;</span><span class="token comment">// String returns info as a human-friendly version string.</span><span class="token keyword">func</span> <span class="token punctuation">(</span>info Info<span class="token punctuation">)</span> <span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> info<span class="token punctuation">.</span>GitVersion<span class="token punctuation">&#125;</span><span class="token comment">// ToJSON returns the JSON string of version information.</span><span class="token keyword">func</span> <span class="token punctuation">(</span>info Info<span class="token punctuation">)</span> <span class="token function">ToJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span>s<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Marshal</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token function">string</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// Text encodes the version information into UTF-8-encoded text and</span><span class="token comment">// returns the result.</span><span class="token keyword">func</span> <span class="token punctuation">(</span>info Info<span class="token punctuation">)</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span>table <span class="token operator">:=</span> uitable<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span>table<span class="token punctuation">.</span><span class="token function">RightAlign</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>table<span class="token punctuation">.</span>MaxColWidth <span class="token operator">=</span> <span class="token number">80</span>table<span class="token punctuation">.</span>Separator <span class="token operator">=</span> <span class="token string">" "</span>table<span class="token punctuation">.</span><span class="token function">AddRow</span><span class="token punctuation">(</span><span class="token string">"gitVersion:"</span><span class="token punctuation">,</span> info<span class="token punctuation">.</span>GitVersion<span class="token punctuation">)</span>table<span class="token punctuation">.</span><span class="token function">AddRow</span><span class="token punctuation">(</span><span class="token string">"gitCommit:"</span><span class="token punctuation">,</span> info<span class="token punctuation">.</span>GitCommit<span class="token punctuation">)</span>table<span class="token punctuation">.</span><span class="token function">AddRow</span><span class="token punctuation">(</span><span class="token string">"gitTreeState:"</span><span class="token punctuation">,</span> info<span class="token punctuation">.</span>GitTreeState<span class="token punctuation">)</span>table<span class="token punctuation">.</span><span class="token function">AddRow</span><span class="token punctuation">(</span><span class="token string">"buildDate:"</span><span class="token punctuation">,</span> info<span class="token punctuation">.</span>BuildDate<span class="token punctuation">)</span>table<span class="token punctuation">.</span><span class="token function">AddRow</span><span class="token punctuation">(</span><span class="token string">"goVersion:"</span><span class="token punctuation">,</span> info<span class="token punctuation">.</span>GoVersion<span class="token punctuation">)</span>table<span class="token punctuation">.</span><span class="token function">AddRow</span><span class="token punctuation">(</span><span class="token string">"compiler:"</span><span class="token punctuation">,</span> info<span class="token punctuation">.</span>Compiler<span class="token punctuation">)</span>table<span class="token punctuation">.</span><span class="token function">AddRow</span><span class="token punctuation">(</span><span class="token string">"platform:"</span><span class="token punctuation">,</span> info<span class="token punctuation">.</span>Platform<span class="token punctuation">)</span><span class="token keyword">return</span> table<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// Get returns the overall codebase version. It's for detecting</span><span class="token comment">// what code a binary was built from.</span><span class="token keyword">func</span> <span class="token function">Get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> Info <span class="token punctuation">&#123;</span><span class="token comment">// These variables typically come from -ldflags settings and in</span><span class="token comment">// their absence fallback to the settings in pkg/version/base.go</span><span class="token keyword">return</span> Info<span class="token punctuation">&#123;</span>GitVersion<span class="token punctuation">:</span>   gitVersion<span class="token punctuation">,</span>GitCommit<span class="token punctuation">:</span>    gitCommit<span class="token punctuation">,</span>GitTreeState<span class="token punctuation">:</span> gitTreeState<span class="token punctuation">,</span>BuildDate<span class="token punctuation">:</span>    buildDate<span class="token punctuation">,</span>GoVersion<span class="token punctuation">:</span>    runtime<span class="token punctuation">.</span><span class="token function">Version</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>Compiler<span class="token punctuation">:</span>     runtime<span class="token punctuation">.</span>Compiler<span class="token punctuation">,</span>Platform<span class="token punctuation">:</span>     fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"%s/%s"</span><span class="token punctuation">,</span> runtime<span class="token punctuation">.</span>GOOS<span class="token punctuation">,</span> runtime<span class="token punctuation">.</span>GOARCH<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>version包用于记录版本号信息，而版本号功能几乎是所有Go应用都会用到的通用功能。因此，需要考虑将version包提供给其他外部应用程序使用。根据目录规范，应将version包放在pkg&#x2F;目录下，以便其他项目可以导入并使用version包。鱿鱼version包需要是面向第三方应用的包，因此需要确保version包的功能稳定、完善并且能够独立对外提供预期的功能。</p><p>上面代码定义了一个Info结构体，用于统一保存版本信息。Info结构体记录了比较详细的构建信息，包括git版本号、git提交id、git仓库状态、应用构建时间、go版本、用到的编译器和构建平台。此外，Info结构体还实现了以下方法，用于展示不同格式的版本信息</p><ul><li><code>Get</code>方法：返回详尽的代码库版本信息</li><li><code>String</code>方法：以更友好、可读的形式展示构建信息</li><li><code>ToJSON</code>方法：以Json格式输出版本信息</li><li><code>Text</code>方法：展示格式化的版本信息</li></ul><p>pkg&#x2F;version&#x2F;flag.go文件</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> version<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"fmt"</span>flag <span class="token string">"github.com/spf13/pflag"</span><span class="token string">"os"</span><span class="token string">"strconv"</span><span class="token punctuation">)</span><span class="token keyword">type</span> versionValue <span class="token builtin">int</span><span class="token keyword">const</span> <span class="token punctuation">(</span><span class="token comment">// 未设置版本.</span>VersionNotSet versionValue <span class="token operator">=</span> <span class="token number">0</span><span class="token comment">// 启用版本.</span>VersionEnabled versionValue <span class="token operator">=</span> <span class="token number">1</span><span class="token comment">// 原始版本.</span>VersionRaw versionValue <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">const</span> strRawVersion <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">"raw"</span><span class="token keyword">func</span> <span class="token punctuation">(</span>v <span class="token operator">*</span>versionValue<span class="token punctuation">)</span> <span class="token function">IsBoolFlag</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>v <span class="token operator">*</span>versionValue<span class="token punctuation">)</span> <span class="token function">Get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> any <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token operator">*</span>v<span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>v <span class="token operator">*</span>versionValue<span class="token punctuation">)</span> <span class="token function">Set</span><span class="token punctuation">(</span>s <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> s <span class="token operator">==</span> strRawVersion <span class="token punctuation">&#123;</span><span class="token operator">*</span>v <span class="token operator">=</span> VersionRaw<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span>boolVal<span class="token punctuation">,</span> err <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">ParseBool</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token keyword">if</span> boolVal <span class="token punctuation">&#123;</span><span class="token operator">*</span>v <span class="token operator">=</span> VersionEnabled<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token operator">*</span>v <span class="token operator">=</span> VersionNotSet<span class="token punctuation">&#125;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>v <span class="token operator">*</span>versionValue<span class="token punctuation">)</span> <span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token operator">*</span>v <span class="token operator">==</span> VersionRaw <span class="token punctuation">&#123;</span><span class="token keyword">return</span> strRawVersion<span class="token punctuation">&#125;</span><span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"%v"</span><span class="token punctuation">,</span> <span class="token function">bool</span><span class="token punctuation">(</span><span class="token operator">*</span>v <span class="token operator">==</span> VersionEnabled<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// The type of the flag as required by the pflag.Value interface.</span><span class="token keyword">func</span> <span class="token punctuation">(</span>v <span class="token operator">*</span>versionValue<span class="token punctuation">)</span> <span class="token function">Type</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token string">"version"</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">VersionVar</span><span class="token punctuation">(</span>p <span class="token operator">*</span>versionValue<span class="token punctuation">,</span> name <span class="token builtin">string</span><span class="token punctuation">,</span> value versionValue<span class="token punctuation">,</span> usage <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token operator">*</span>p <span class="token operator">=</span> valueflag<span class="token punctuation">.</span><span class="token function">Var</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> name<span class="token punctuation">,</span> usage<span class="token punctuation">)</span><span class="token comment">// "--version" will be treated as "--version=true"</span>flag<span class="token punctuation">.</span><span class="token function">Lookup</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">.</span>NoOptDefVal <span class="token operator">=</span> <span class="token string">"true"</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">Version</span><span class="token punctuation">(</span>name <span class="token builtin">string</span><span class="token punctuation">,</span> value versionValue<span class="token punctuation">,</span> usage <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">*</span>versionValue <span class="token punctuation">&#123;</span>p <span class="token operator">:=</span> <span class="token function">new</span><span class="token punctuation">(</span>versionValue<span class="token punctuation">)</span><span class="token function">VersionVar</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> name<span class="token punctuation">,</span> value<span class="token punctuation">,</span> usage<span class="token punctuation">)</span><span class="token keyword">return</span> p<span class="token punctuation">&#125;</span><span class="token keyword">const</span> versionFlagName <span class="token operator">=</span> <span class="token string">"version"</span><span class="token keyword">var</span> versionFlag <span class="token operator">=</span> <span class="token function">Version</span><span class="token punctuation">(</span>versionFlagName<span class="token punctuation">,</span> VersionNotSet<span class="token punctuation">,</span> <span class="token string">"Print version information and quit"</span><span class="token punctuation">)</span><span class="token comment">// AddFlags registers this package's flags on arbitrary FlagSets, such that they point to the</span><span class="token comment">// same value as the global flags.</span><span class="token keyword">func</span> <span class="token function">AddFlags</span><span class="token punctuation">(</span>fs <span class="token operator">*</span>flag<span class="token punctuation">.</span>FlagSet<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>fs<span class="token punctuation">.</span><span class="token function">AddFlag</span><span class="token punctuation">(</span>flag<span class="token punctuation">.</span><span class="token function">Lookup</span><span class="token punctuation">(</span>versionFlagName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// PrintAndExitIfRequested will check if the -version flag was passed</span><span class="token comment">// and, if so, print the version and exit.</span><span class="token keyword">func</span> <span class="token function">PrintAndExitIfRequested</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 检查版本标志的值并打印相应的信息</span><span class="token keyword">if</span> <span class="token operator">*</span>versionFlag <span class="token operator">==</span> VersionRaw <span class="token punctuation">&#123;</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"%s\n"</span><span class="token punctuation">,</span> <span class="token function">Get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>os<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token operator">*</span>versionFlag <span class="token operator">==</span> VersionEnabled <span class="token punctuation">&#123;</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"%s\n"</span><span class="token punctuation">,</span> <span class="token function">Get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>os<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="将版本信息注入到version包中"><a href="#将版本信息注入到version包中" class="headerlink" title="将版本信息注入到version包中"></a>将版本信息注入到version包中</h3><p>接下来，可以通过 -ldflags -X “importpath.name&#x3D;value” 构建参数将版本信息注入到version包中。</p><p>由于需要解析当前Git仓库的状态、CommitID、tag等信息，为了方便在编译时将版本号信息注入到version包中，这里将这些注入操作统一封装到build.sh 脚本中，这样在编译fg-apiserver组件的时候，只需要执行build.sh脚本就可以。</p><pre class="line-numbers language-go" data-language="go"><code class="language-go">#<span class="token operator">!</span><span class="token operator">/</span>bin<span class="token operator">/</span>bash# 获取脚本所在目录作为项目根目录PROJ_ROOT_DIR<span class="token operator">=</span>$<span class="token punctuation">(</span>dirname <span class="token string">"$&#123;BASH_SOURCE[0]&#125;"</span><span class="token punctuation">)</span># 定义构建产物的输出目录为项目根目录下的_output文件夹OUTPUT_DIR<span class="token operator">=</span>$<span class="token punctuation">&#123;</span>PROJ_ROOT_DIR<span class="token punctuation">&#125;</span><span class="token operator">/</span>_output# 指定版本信息包的路径，后续会通过<span class="token operator">-</span>ldflags参数将版本信息注入到这个包的变量中VERSION_PACKAGE<span class="token operator">=</span>gitlab<span class="token punctuation">.</span>com<span class="token operator">/</span>onexstack<span class="token operator">/</span>fastgo<span class="token operator">/</span>pkg<span class="token operator">/</span>version# 确定VERSION值：如果环境变量中没有设置VERSION，则使用git标签作为版本号# git describe <span class="token operator">--</span>tags <span class="token operator">--</span>always <span class="token operator">--</span>match<span class="token operator">=</span><span class="token char">'v*'</span>命令会获取最近的v开头的标签，如果没有则使用当前commit的短哈希<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token operator">-</span>z <span class="token string">"$&#123;VERSION&#125;"</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>then  VERSION<span class="token operator">=</span>$<span class="token punctuation">(</span>git describe <span class="token operator">--</span>tags <span class="token operator">--</span>always <span class="token operator">--</span>match<span class="token operator">=</span><span class="token char">'v*'</span><span class="token punctuation">)</span>fi# 检查代码仓库状态：判断工作目录是否干净# 默认状态设为<span class="token string">"dirty"</span>（有未提交更改）GIT_TREE_STATE<span class="token operator">=</span><span class="token string">"dirty"</span># 使用git status检查是否有未提交的更改is_clean<span class="token operator">=</span>$<span class="token punctuation">(</span>git status <span class="token operator">--</span>porcelain <span class="token number">2</span><span class="token operator">></span><span class="token operator">/</span>dev<span class="token operator">/</span>null<span class="token punctuation">)</span># 如果is_clean为空，说明没有未提交的更改，状态设为<span class="token string">"clean"</span><span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token operator">-</span>z $<span class="token punctuation">&#123;</span>is_clean<span class="token punctuation">&#125;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>then  GIT_TREE_STATE<span class="token operator">=</span><span class="token string">"clean"</span>fi# 获取当前git commit的完整哈希值GIT_COMMIT<span class="token operator">=</span>$<span class="token punctuation">(</span>git rev<span class="token operator">-</span>parse HEAD<span class="token punctuation">)</span># 构造链接器标志（ldflags）# 通过<span class="token operator">-</span>X选项向VERSION_PACKAGE包中注入以下变量的值：# <span class="token operator">-</span> gitVersion<span class="token punctuation">:</span> 版本号# <span class="token operator">-</span> gitCommit<span class="token punctuation">:</span> 构建时的commit哈希# <span class="token operator">-</span> gitTreeState<span class="token punctuation">:</span> 代码仓库状态<span class="token punctuation">(</span>clean或dirty<span class="token punctuation">)</span># <span class="token operator">-</span> buildDate<span class="token punctuation">:</span> 构建日期和时间<span class="token punctuation">(</span>UTC格式<span class="token punctuation">)</span>GO_LDFLAGS<span class="token operator">=</span>"<span class="token operator">-</span>X $<span class="token punctuation">&#123;</span>VERSION_PACKAGE<span class="token punctuation">&#125;</span><span class="token punctuation">.</span>gitVersion<span class="token operator">=</span>$<span class="token punctuation">&#123;</span>VERSION<span class="token punctuation">&#125;</span> \  <span class="token operator">-</span>X $<span class="token punctuation">&#123;</span>VERSION_PACKAGE<span class="token punctuation">&#125;</span><span class="token punctuation">.</span>gitCommit<span class="token operator">=</span>$<span class="token punctuation">&#123;</span>GIT_COMMIT<span class="token punctuation">&#125;</span> \  <span class="token operator">-</span>X $<span class="token punctuation">&#123;</span>VERSION_PACKAGE<span class="token punctuation">&#125;</span><span class="token punctuation">.</span>gitTreeState<span class="token operator">=</span>$<span class="token punctuation">&#123;</span>GIT_TREE_STATE<span class="token punctuation">&#125;</span> \  <span class="token operator">-</span>X $<span class="token punctuation">&#123;</span>VERSION_PACKAGE<span class="token punctuation">&#125;</span><span class="token punctuation">.</span>buildDate<span class="token operator">=</span>$<span class="token punctuation">(</span>date <span class="token operator">-</span>u <span class="token operator">+</span>'<span class="token operator">%</span>Y<span class="token operator">-</span><span class="token operator">%</span>m<span class="token operator">-</span><span class="token operator">%</span>dT<span class="token operator">%</span>H<span class="token punctuation">:</span><span class="token operator">%</span>M<span class="token punctuation">:</span><span class="token operator">%</span>SZ'<span class="token punctuation">)</span>"# 执行Go构建命令# <span class="token operator">-</span>v<span class="token punctuation">:</span> 显示详细编译信息# <span class="token operator">-</span>ldflags<span class="token punctuation">:</span> 传入上面定义的链接器标志# <span class="token operator">-</span>o<span class="token punctuation">:</span> 指定输出文件路径和名称# 最后参数是入口文件路径<span class="token keyword">go</span> build <span class="token operator">-</span>v <span class="token operator">-</span>ldflags <span class="token string">"$&#123;GO_LDFLAGS&#125;"</span> <span class="token operator">-</span>o $<span class="token punctuation">&#123;</span>OUTPUT_DIR<span class="token punctuation">&#125;</span><span class="token operator">/</span>fg<span class="token operator">-</span>apiserver <span class="token operator">-</span>v cmd<span class="token operator">/</span>fg<span class="token operator">-</span>apiserver<span class="token operator">/</span>main<span class="token punctuation">.</span><span class="token keyword">go</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="fg-apiserver-添加-version-命令行选项"><a href="#fg-apiserver-添加-version-命令行选项" class="headerlink" title="fg-apiserver 添加 --version 命令行选项"></a>fg-apiserver 添加 <code>--version</code> 命令行选项</h3><p>前面的步骤，在编译fg-apiserver 之后，所需的版本信息已经成功注入version包中。接下来还需要再fg-apiserver 主程序中调用version包打印版本信息。</p><p>编辑cmd&#x2F;fg-apiserver&#x2F;app&#x2F;server.go 在run函数添加代码</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> app<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token operator">...</span>   <span class="token string">"gitlab.com/onexstack/fastgo/pkg/version"</span><span class="token punctuation">)</span><span class="token operator">...</span><span class="token comment">// NewFastGOCommand 创建一个 *cobra.Command 对象，用于启动应用程序.</span><span class="token keyword">func</span> <span class="token function">NewFastGOCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span>cobra<span class="token punctuation">.</span>Command <span class="token punctuation">&#123;</span>    <span class="token operator">...</span>    <span class="token comment">// 添加 --version 标志</span>    version<span class="token punctuation">.</span><span class="token function">AddFlags</span><span class="token punctuation">(</span>cmd<span class="token punctuation">.</span><span class="token function">PersistentFlags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> cmd<span class="token punctuation">&#125;</span><span class="token comment">// run 是主运行逻辑，负责初始化日志、解析配置、校验选项并启动服务器。</span><span class="token keyword">func</span> <span class="token function">run</span><span class="token punctuation">(</span>opts <span class="token operator">*</span>options<span class="token punctuation">.</span>ServerOptions<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 如果传入 --version，则打印版本信息并退出</span>    version<span class="token punctuation">.</span><span class="token function">PrintAndExitIfRequested</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token operator">...</span><span class="token punctuation">&#125;</span>   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>version.AddFlags(cmd.PersistentFlags())</code> 用来给fg-apiserver 命令添加<code>-v</code>  &#x2F; <code>--version </code>命令行选项</p><p>version.PrintAndExitIfRequested() 用来指定当fg-apiserver 命令执行并传入 <code>-v</code>   &#x2F;  <code>--version</code> 命令行选项时，应用会打印版本号信息并退出</p><h3 id="测试fg-apiserver-版本号打印"><a href="#测试fg-apiserver-版本号打印" class="headerlink" title="测试fg-apiserver 版本号打印"></a>测试fg-apiserver 版本号打印</h3><p>执行以下命令编译fg-apiserver 组件源码，打印版本信息</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook<span class="token operator">-</span>Pro fastgo <span class="token operator">%</span> git tag <span class="token operator">-</span>a v0<span class="token punctuation">.</span><span class="token number">0.2</span> <span class="token operator">-</span>m <span class="token string">"release: v0.0.2"</span><span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook<span class="token operator">-</span>Pro fastgo <span class="token operator">%</span> sh build<span class="token punctuation">.</span>sh<span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook<span class="token operator">-</span>Pro fastgo <span class="token operator">%</span> <span class="token punctuation">.</span><span class="token operator">/</span>_output<span class="token operator">/</span>fg<span class="token operator">-</span>apiserver <span class="token operator">--</span>version<span class="token operator">=</span>raw <span class="token operator">/</span>Users<span class="token operator">/</span>dujie<span class="token operator">/</span><span class="token punctuation">.</span>fastgo<span class="token operator">/</span>fg<span class="token operator">-</span>apiserver<span class="token punctuation">.</span>yaml  gitVersion<span class="token punctuation">:</span> v0<span class="token punctuation">.</span><span class="token number">0.2</span>                                     gitCommit<span class="token punctuation">:</span> 61f41c6b84add6906b2811a16ad13f14661a416fgitTreeState<span class="token punctuation">:</span> dirty                                      buildDate<span class="token punctuation">:</span> <span class="token number">2025</span><span class="token operator">-</span><span class="token number">04</span><span class="token operator">-</span>02T04<span class="token punctuation">:</span><span class="token number">46</span><span class="token punctuation">:</span>06Z                       goVersion<span class="token punctuation">:</span> go1<span class="token punctuation">.</span><span class="token number">24.0</span>                                    compiler<span class="token punctuation">:</span> gc                                          platform<span class="token punctuation">:</span> darwin<span class="token operator">/</span>arm64       <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到fg-apiserver 程序根据 –version 的值输出了不同格式且内容详尽的版本信息。通过这些版本信息，可以精确定位当前应用所使用的代码及编译环境，为日后的故障排查鉴定了坚实的基础。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;5、实现版本号打印功能&quot;&gt;&lt;a href=&quot;#5、实现版本号打印功能&quot; class=&quot;headerlink&quot; title=&quot;5、实现版本号打印功能&quot;&gt;&lt;/a&gt;5、实现版本号打印功能&lt;/h1&gt;&lt;p&gt;go项目中，为了方便排障等，需要知道某个线上应用的具体版本。另外，在</summary>
      
    
    
    
    <category term="Fastgo项目学习" scheme="http://dycloud.fun/categories/Fastgo%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="云原生" scheme="http://dycloud.fun/tags/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
    <category term="golang" scheme="http://dycloud.fun/tags/golang/"/>
    
    <category term="Fastgo项目学习" scheme="http://dycloud.fun/tags/Fastgo%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>4、框架代码和业务代码分离</title>
    <link href="http://dycloud.fun/2025/02/12/4%E3%80%81%E6%A1%86%E6%9E%B6%E4%BB%A3%E7%A0%81%E5%92%8C%E4%B8%9A%E5%8A%A1%E4%BB%A3%E7%A0%81%E5%88%86%E7%A6%BB/"/>
    <id>http://dycloud.fun/2025/02/12/4%E3%80%81%E6%A1%86%E6%9E%B6%E4%BB%A3%E7%A0%81%E5%92%8C%E4%B8%9A%E5%8A%A1%E4%BB%A3%E7%A0%81%E5%88%86%E7%A6%BB/</id>
    <published>2025-02-12T03:32:00.000Z</published>
    <updated>2025-04-02T08:19:50.471Z</updated>
    
    <content type="html"><![CDATA[<h1 id="4、框架代码和业务代码分离"><a href="#4、框架代码和业务代码分离" class="headerlink" title="4、框架代码和业务代码分离"></a>4、框架代码和业务代码分离</h1><p>在go项目中，项目代码通常分为2类：</p><ul><li><strong>应用启动框架</strong>：例如：命令行框架、配置文件解析和读取、配置项校验等。</li><li><strong>业务相关的代码</strong>：业务相关的代码变更相较于应用框架部分，变更频繁，而且可能会影响业务。</li></ul><p>为了提高项目可维护性，将两类代码分类拆分，从目录级别隔离，减少2类代码变更时互相影响的概率</p><h3 id="优化ServerOptions结构体定义"><a href="#优化ServerOptions结构体定义" class="headerlink" title="优化ServerOptions结构体定义"></a>优化ServerOptions结构体定义</h3><p>分别存放在以下两个目录：</p><ul><li>应用框架代码： cmd&#x2F;fg-apiserver&#x2F;app</li><li>运行时代码：internal&#x2F;appiserver</li></ul><p>2部分代码有些配置会共享，为了提高代码复用性，需要将cmd&#x2F;fg-apiserver&#x2F;app&#x2F;options&#x2F;options.go 文件中可复用配置拆分成一个独立的包，共两种类别的代码引用。</p><p>将MYSQLOptions结构体定义放在<code>pkg/options/mysql_options.go</code>文件中。因为我们经常要基于MySQLOptions 结构体的字段创建<code>*gorm.DB</code>类型的数据库实例。为了提高代码调用效率，给MYSQLOptions结构体类型添加了NewDB方法，用来创建<code>*gorm.DB</code> 类型的实例。</p><p><code>pkg/options/mysql_options.go</code> 内容如下</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> options<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"fmt"</span><span class="token string">"gorm.io/driver/mysql"</span><span class="token string">"gorm.io/gorm"</span><span class="token string">"net"</span><span class="token string">"strconv"</span><span class="token string">"time"</span><span class="token punctuation">)</span><span class="token keyword">type</span> MySQLOption <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>Addr                  <span class="token builtin">string</span>        <span class="token string">`json:"addr,omitempty" mapstructure:"addr"`</span>Username              <span class="token builtin">string</span>        <span class="token string">`json:"username,omitempty" mapstructure:"username"`</span>Password              <span class="token builtin">string</span>        <span class="token string">`json:"-" mapstructure:"password"`</span>Database              <span class="token builtin">string</span>        <span class="token string">`json:"database" mapstructure:"database"`</span>MaxIdleConnections    <span class="token builtin">int</span>           <span class="token string">`json:"max-idle-connections,omitempty" mapstructure:"max-idle-connections,omitempty"`</span>MaxOpenConnections    <span class="token builtin">int</span>           <span class="token string">`json:"max-open-connections,omitempty" mapstructure:"max-open-connections"`</span>MaxConnectionLifeTime time<span class="token punctuation">.</span>Duration <span class="token string">`json:"max-connection-life-time,omitempty" mapstructure:"max-connection-life-time"`</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">NewMYSQLOption</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span>MySQLOption <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token operator">&amp;</span>MySQLOption<span class="token punctuation">&#123;</span>Addr<span class="token punctuation">:</span>                  <span class="token string">"127.0.0.1:3306"</span><span class="token punctuation">,</span>Username<span class="token punctuation">:</span>              <span class="token string">"onex"</span><span class="token punctuation">,</span>Password<span class="token punctuation">:</span>              <span class="token string">"onex"</span><span class="token punctuation">,</span>Database<span class="token punctuation">:</span>              <span class="token string">"onex"</span><span class="token punctuation">,</span>MaxIdleConnections<span class="token punctuation">:</span>    <span class="token number">100</span><span class="token punctuation">,</span>MaxOpenConnections<span class="token punctuation">:</span>    <span class="token number">100</span><span class="token punctuation">,</span>MaxConnectionLifeTime<span class="token punctuation">:</span> time<span class="token punctuation">.</span><span class="token function">Duration</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 创建数据库链接地址</span><span class="token keyword">func</span> <span class="token punctuation">(</span>m <span class="token operator">*</span>MySQLOption<span class="token punctuation">)</span> <span class="token function">DSN</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">`%s:%s@tcp(%s)/%s?charset=utf8&amp;parseTime=%t&amp;loc=%s`</span><span class="token punctuation">,</span>m<span class="token punctuation">.</span>Username<span class="token punctuation">,</span>m<span class="token punctuation">.</span>Password<span class="token punctuation">,</span>m<span class="token punctuation">.</span>Addr<span class="token punctuation">,</span>m<span class="token punctuation">.</span>Database<span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token string">"Local"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 创建DB方法</span><span class="token keyword">func</span> <span class="token punctuation">(</span>m <span class="token operator">*</span>MySQLOption<span class="token punctuation">)</span> <span class="token function">NewDB</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>gorm<span class="token punctuation">.</span>DB<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>db<span class="token punctuation">,</span> err <span class="token operator">:=</span> gorm<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>mysql<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span><span class="token function">DSN</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>gorm<span class="token punctuation">.</span>Config<span class="token punctuation">&#123;</span>PrepareStmt<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err<span class="token punctuation">&#125;</span>sqlDB<span class="token punctuation">,</span> err <span class="token operator">:=</span> db<span class="token punctuation">.</span><span class="token function">DB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err<span class="token punctuation">&#125;</span>sqlDB<span class="token punctuation">.</span><span class="token function">SetMaxOpenConns</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span>MaxOpenConnections<span class="token punctuation">)</span>sqlDB<span class="token punctuation">.</span><span class="token function">SetConnMaxLifetime</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span>MaxConnectionLifeTime<span class="token punctuation">)</span>sqlDB<span class="token punctuation">.</span><span class="token function">SetMaxIdleConns</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span>MaxIdleConnections<span class="token punctuation">)</span><span class="token keyword">return</span> db<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>o <span class="token operator">*</span>MySQLOption<span class="token punctuation">)</span> <span class="token function">Validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span><span class="token comment">// 验证MySQL地址格式</span><span class="token keyword">if</span> o<span class="token punctuation">.</span>Addr <span class="token operator">==</span> <span class="token string">""</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"MySQL server address cannot be empty"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 检查地址格式是否为host:port</span>host<span class="token punctuation">,</span> portStr<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">SplitHostPort</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>Addr<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"Invalid MySQL address format '%s': %w"</span><span class="token punctuation">,</span> o<span class="token punctuation">.</span>Addr<span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 验证端口是否为数字</span>port<span class="token punctuation">,</span> err <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">Atoi</span><span class="token punctuation">(</span>portStr<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token operator">||</span> port <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token operator">||</span> port <span class="token operator">></span> <span class="token number">65535</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"Invalid MySQL port: %s"</span><span class="token punctuation">,</span> portStr<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 验证主机名是否为空</span><span class="token keyword">if</span> host <span class="token operator">==</span> <span class="token string">""</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"MySQL hostname cannot be empty"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 验证凭据和数据库名</span><span class="token keyword">if</span> o<span class="token punctuation">.</span>Username <span class="token operator">==</span> <span class="token string">""</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"MySQL username cannot be empty"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> o<span class="token punctuation">.</span>Password <span class="token operator">==</span> <span class="token string">""</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"MySQL password cannot be empty"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> o<span class="token punctuation">.</span>Database <span class="token operator">==</span> <span class="token string">""</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"MySQL database name cannot be empty"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 验证连接池参数</span><span class="token keyword">if</span> o<span class="token punctuation">.</span>MaxIdleConnections <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"MySQL max idle connections must be greater than 0"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> o<span class="token punctuation">.</span>MaxOpenConnections <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"MySQL max open connections must be greater than 0"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> o<span class="token punctuation">.</span>MaxIdleConnections <span class="token operator">></span> o<span class="token punctuation">.</span>MaxOpenConnections <span class="token punctuation">&#123;</span><span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"MySQL max idle connections cannot be greater than max open connections"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> o<span class="token punctuation">.</span>MaxConnectionLifeTime <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"MySQL max connection lifetime must be greater than 0"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面代码会使用<code>gorm.Open</code> 方法创建一个<code>*gorm.DB</code>实例，并且对该实例进行一些设置：</p><ul><li><code>MaxOpenConnections</code>：设置最大打开连接数</li><li><code>MaxConnectionLifeTime</code>：设置连接最大存活时间</li><li><code>MaxIdleConnections</code>：设置最大空闲连接数</li></ul><p>优化后的cmd&#x2F;fg-apiserver&#x2F;app&#x2F;options&#x2F;options.go 文件内容：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> options<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"gitlab.com/onexstack/fastgo/internal/apiserver"</span>genericoptions <span class="token string">"gitlab.com/onexstack/fastgo/pkg/options"</span><span class="token punctuation">)</span><span class="token keyword">type</span> ServerOptions <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>MySQLOptions <span class="token operator">*</span>genericoptions<span class="token punctuation">.</span>MySQLOption <span class="token string">`json:"mysql" mapstructure:"mysql"`</span><span class="token punctuation">&#125;</span><span class="token comment">// NewServerOptions 创建带有默认值的 ServerOptions 实例.</span><span class="token keyword">func</span> <span class="token function">NewServerOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span>ServerOptions <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token operator">&amp;</span>ServerOptions<span class="token punctuation">&#123;</span>MySQLOptions<span class="token punctuation">:</span> genericoptions<span class="token punctuation">.</span><span class="token function">NewMYSQLOption</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">//</span><span class="token comment">// Validate</span><span class="token comment">//  @Description: Validate校验ServierOptions参数是否合法</span><span class="token comment">//  @receiver s</span><span class="token comment">//  @return error</span><span class="token comment">//</span><span class="token keyword">func</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>ServerOptions<span class="token punctuation">)</span> <span class="token function">Validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> s<span class="token punctuation">.</span>MySQLOptions<span class="token punctuation">.</span><span class="token function">Validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">//</span><span class="token comment">// Config</span><span class="token comment">//  @Description: 基于ServerOptions构建apiserver.Config</span><span class="token comment">//  @receiver s</span><span class="token comment">//  @return *apiserver.Config</span><span class="token comment">//  @return error</span><span class="token comment">//</span><span class="token keyword">func</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>ServerOptions<span class="token punctuation">)</span> <span class="token function">Config</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>apiserver<span class="token punctuation">.</span>Config<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token operator">&amp;</span>apiserver<span class="token punctuation">.</span>Config<span class="token punctuation">&#123;</span>MYSQLOptions<span class="token punctuation">:</span> s<span class="token punctuation">.</span>MySQLOptions<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>ServerOptions</code> 结构体新增了<code>Config</code>方法，该方法用来基于<code>ServerOptions</code>创建 <code>*apiserver.Config</code>实例，供运行时代码调用</p><h3 id="新增运行时代码"><a href="#新增运行时代码" class="headerlink" title="新增运行时代码"></a>新增运行时代码</h3><p>为了将运行时代码和应用框架代码物理隔开，将运行代码的实现保存在internal&#x2F;apiserve&#x2F;server.go 中</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> apiserver<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"fmt"</span>genericoptions <span class="token string">"gitlab.com/onexstack/fastgo/pkg/options"</span><span class="token punctuation">)</span><span class="token comment">// Server</span><span class="token comment">// @Description: 定义一个服务器结构体类型</span><span class="token keyword">type</span> Server <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>cfg <span class="token operator">*</span>Config<span class="token punctuation">&#125;</span><span class="token comment">//Config</span><span class="token comment">//@Description: Config结构体，用于存储应用相关的配置</span><span class="token comment">//</span><span class="token comment">// 不用viper.Get 是因为这种方式能更加清晰知道应用提供了哪些配置项</span><span class="token keyword">type</span> Config <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>MYSQLOptions <span class="token operator">*</span>genericoptions<span class="token punctuation">.</span>MySQLOption<span class="token punctuation">&#125;</span><span class="token comment">// NewServer</span><span class="token comment">//</span><span class="token comment">//@Description: NewServer 根据配置创建服务器</span><span class="token comment">//@receiver cfg</span><span class="token comment">//@return *Server</span><span class="token comment">//@return error</span><span class="token keyword">func</span> <span class="token punctuation">(</span>cfg <span class="token operator">*</span>Config<span class="token punctuation">)</span> <span class="token function">NewServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>Server<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token operator">&amp;</span>Server<span class="token punctuation">&#123;</span>cfg<span class="token punctuation">:</span> cfg<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token comment">// Run</span><span class="token comment">//</span><span class="token comment">//@Description: Run运行应用</span><span class="token comment">//@receiver s</span><span class="token comment">//@return error</span><span class="token keyword">func</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>Server<span class="token punctuation">)</span> <span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"Read MYSQL host from config : %s \n"</span><span class="token punctuation">,</span> s<span class="token punctuation">.</span>cfg<span class="token punctuation">.</span>MYSQLOptions<span class="token punctuation">.</span>Addr<span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>cfg<span class="token punctuation">.</span>MYSQLOptions<span class="token punctuation">)</span><span class="token keyword">select</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span> <span class="token comment">// 调用select 语句，阻塞防止进程退出</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="应用启动时调用运行时代码"><a href="#应用启动时调用运行时代码" class="headerlink" title="应用启动时调用运行时代码"></a>应用启动时调用运行时代码</h3><p>上面优化了ServerOptions ，并新增了运行时代码实现。下面还要修改cmd&#x2F;fg-apiserver&#x2F;app&#x2F;server.go 文件，在应用启动时调用运行时代码。cmd&#x2F;fg-apiserver&#x2F;app&#x2F;server.go 文件如下</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> app<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"fmt"</span><span class="token string">"github.com/spf13/cobra"</span><span class="token string">"github.com/spf13/viper"</span><span class="token string">"gitlab.com/onexstack/fastgo/cmd/fg-apiserver/app/options"</span><span class="token punctuation">)</span><span class="token keyword">var</span> configFile <span class="token builtin">string</span> <span class="token comment">// 配置文件路径</span><span class="token keyword">func</span> <span class="token function">NewFastGoCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span>cobra<span class="token punctuation">.</span>Command <span class="token punctuation">&#123;</span><span class="token comment">// 创建默认的应用命令行选项</span>opts <span class="token operator">:=</span> options<span class="token punctuation">.</span><span class="token function">NewServerOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span>cmd <span class="token operator">:=</span> <span class="token operator">&amp;</span>cobra<span class="token punctuation">.</span>Command<span class="token punctuation">&#123;</span><span class="token comment">// 指定命令的名字，该名字会出现在帮助信息中</span>Use<span class="token punctuation">:</span> <span class="token string">"fg-apiserver"</span><span class="token punctuation">,</span><span class="token comment">// 命令简短的描述</span>Short<span class="token punctuation">:</span> <span class="token string">"A very lightweight full go project"</span><span class="token punctuation">,</span>Long<span class="token punctuation">:</span> <span class="token string">`A very lightweight full go project, designed to help beginners quicklylearn Go project development.`</span><span class="token punctuation">,</span><span class="token comment">// 命令出错时，不打印帮助信息。设置为true可以确保命令出错时一眼就能看到错误信息</span>SilenceUsage<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token comment">// 指定cmd.Execute()时，执行的Run函数</span>RunE<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span>cmd <span class="token operator">*</span>cobra<span class="token punctuation">.</span>Command<span class="token punctuation">,</span> args <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token function">run</span><span class="token punctuation">(</span>opts<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token comment">// 设置命令运行时的参数检查，不需要指定命令行参数。例如：./fg-apiserver param1 param2</span>Args<span class="token punctuation">:</span> cobra<span class="token punctuation">.</span>NoArgs<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token comment">// 初始化配置函数，在每个命令运行时调用</span>cobra<span class="token punctuation">.</span><span class="token function">OnInitialize</span><span class="token punctuation">(</span>onInitialize<span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">filePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// cobra 支持持久性标志(PersistentFlag)，该标志可用于它所分配的命令以及该命令下的每个子命令</span><span class="token comment">// 推荐使用配置文件来配置应用，便于管理配置项</span>cmd<span class="token punctuation">.</span><span class="token function">PersistentFlags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">StringVarP</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>configFile<span class="token punctuation">,</span> <span class="token string">"config"</span><span class="token punctuation">,</span> <span class="token string">"c"</span><span class="token punctuation">,</span> <span class="token function">filePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"Path to the fg-apiserver configuration file."</span><span class="token punctuation">)</span><span class="token keyword">return</span> cmd<span class="token punctuation">&#125;</span><span class="token comment">//</span><span class="token comment">// run</span><span class="token comment">//  @Description: run是主运行逻辑，负责初始化日志、解析配置、校验选项并启动服务器</span><span class="token comment">//  @param opts</span><span class="token comment">//  @return error</span><span class="token comment">//</span><span class="token keyword">func</span> <span class="token function">run</span><span class="token punctuation">(</span>opts <span class="token operator">*</span>options<span class="token punctuation">.</span>ServerOptions<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span><span class="token comment">// 将viper中的配置解析到opts</span><span class="token keyword">if</span> err <span class="token operator">:=</span> viper<span class="token punctuation">.</span><span class="token function">Unmarshal</span><span class="token punctuation">(</span>opts<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token comment">// 校验命令选项</span><span class="token keyword">if</span> err <span class="token operator">:=</span> opts<span class="token punctuation">.</span><span class="token function">Validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token comment">//  获取应用配置</span><span class="token comment">// 将命令行选项和应用配置分开，可以更灵活的处理2种不同类型的配置</span>cfg<span class="token punctuation">,</span> err <span class="token operator">:=</span> opts<span class="token punctuation">.</span><span class="token function">Config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token comment">// 创建服务器实例</span>server<span class="token punctuation">,</span> err <span class="token operator">:=</span> cfg<span class="token punctuation">.</span><span class="token function">NewServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token comment">// 启动服务器</span><span class="token keyword">return</span> server<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面代码中，将之前的配置解析和校验逻辑迁移到了run方法中。这样做的目的是保持cobra.ommand 应用框架的简洁性。在run方法中通过opts.Config()函数调用，创建了运行时代码需要的配置，并基于此配置创建了运行时服务实例server，之后调用server的run方法，启动整个应用程序。</p><h3 id="编译并运行"><a href="#编译并运行" class="headerlink" title="编译并运行"></a>编译并运行</h3><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook<span class="token operator">-</span>Pro fastgo <span class="token operator">%</span> <span class="token keyword">go</span> build <span class="token operator">-</span>v <span class="token operator">-</span>o _output<span class="token operator">/</span>fg<span class="token operator">-</span>apiserver cmd<span class="token operator">/</span>fg<span class="token operator">-</span>apiserver<span class="token operator">/</span>main<span class="token punctuation">.</span><span class="token keyword">go</span>gitlab<span class="token punctuation">.</span>com<span class="token operator">/</span>onexstack<span class="token operator">/</span>fastgo<span class="token operator">/</span>internal<span class="token operator">/</span>apiservergitlab<span class="token punctuation">.</span>com<span class="token operator">/</span>onexstack<span class="token operator">/</span>fastgo<span class="token operator">/</span>cmd<span class="token operator">/</span>fg<span class="token operator">-</span>apiserver<span class="token operator">/</span>app<span class="token operator">/</span>optionsgitlab<span class="token punctuation">.</span>com<span class="token operator">/</span>onexstack<span class="token operator">/</span>fastgo<span class="token operator">/</span>cmd<span class="token operator">/</span>fg<span class="token operator">-</span>apiserver<span class="token operator">/</span>appcommand<span class="token operator">-</span>line<span class="token operator">-</span>arguments<span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook<span class="token operator">-</span>Pro fastgo <span class="token operator">%</span> <span class="token punctuation">.</span><span class="token operator">/</span>_output<span class="token operator">/</span>fg<span class="token operator">-</span>apiserver <span class="token operator">-</span>c configs<span class="token operator">/</span>fg<span class="token operator">-</span>apiserver<span class="token punctuation">.</span>yaml    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;4、框架代码和业务代码分离&quot;&gt;&lt;a href=&quot;#4、框架代码和业务代码分离&quot; class=&quot;headerlink&quot; title=&quot;4、框架代码和业务代码分离&quot;&gt;&lt;/a&gt;4、框架代码和业务代码分离&lt;/h1&gt;&lt;p&gt;在go项目中，项目代码通常分为2类：&lt;/p&gt;
&lt;ul</summary>
      
    
    
    
    <category term="Fastgo项目学习" scheme="http://dycloud.fun/categories/Fastgo%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="云原生" scheme="http://dycloud.fun/tags/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
    <category term="golang" scheme="http://dycloud.fun/tags/golang/"/>
    
    <category term="Fastgo项目学习" scheme="http://dycloud.fun/tags/Fastgo%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>3、使用viper添加配置文件解析功能</title>
    <link href="http://dycloud.fun/2025/02/12/3%E3%80%81%E4%BD%BF%E7%94%A8viper%E6%B7%BB%E5%8A%A0%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%A7%A3%E6%9E%90%E5%8A%9F%E8%83%BD/"/>
    <id>http://dycloud.fun/2025/02/12/3%E3%80%81%E4%BD%BF%E7%94%A8viper%E6%B7%BB%E5%8A%A0%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%A7%A3%E6%9E%90%E5%8A%9F%E8%83%BD/</id>
    <published>2025-02-12T02:32:00.000Z</published>
    <updated>2025-04-02T08:19:44.328Z</updated>
    
    <content type="html"><![CDATA[<h1 id="3、使用viper添加配置文件解析功能"><a href="#3、使用viper添加配置文件解析功能" class="headerlink" title="3、使用viper添加配置文件解析功能"></a>3、使用viper添加配置文件解析功能</h1><p>因为配置几乎是每个服务都需要的能力，所以，在使用cobra开发完二进制命令的主题框架后，还需要实现配置文件解析能力。</p><p>go项目开发中配置解析源有多种，例如：命令行参数、环境变量、配置文件等。但是推荐的配置解析源是配置文件，因为配置文件更易维护。</p><p>Go社区提供了很多优秀的Go包可以读取yaml、json等格式的配置文件，但是目前使用最多的是<code>spf13/viper</code>包</p><h3 id="配置文件解析思路"><a href="#配置文件解析思路" class="headerlink" title="配置文件解析思路"></a>配置文件解析思路</h3><p>在Go项目开发中，服务的配置能力一般通过以下2步实现：</p><ol><li>解析配置文件</li><li>读取配置</li></ol><p>其中配置文件考虑到易读性，通常的使用格式更加易读的YAML格式。并且使用<a href="https://github.com/spf13/viper">spf13&#x2F;viper</a>包来解析。</p><p>所以，可以通过设置钩子函数，来让程序运行时加载并读取配置。更新<code>cmd/fg-apiserver/app/server.go</code>文件</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> app<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"encoding/json"</span><span class="token string">"fmt"</span><span class="token string">"github.com/spf13/cobra"</span><span class="token string">"github.com/spf13/viper"</span><span class="token string">"gitlab.com/onexstack/fastgo/cmd/fg-apiserver/app/options"</span><span class="token punctuation">)</span><span class="token keyword">var</span> configFile <span class="token builtin">string</span> <span class="token comment">// 配置文件路径</span><span class="token keyword">func</span> <span class="token function">NewFastGoCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span>cobra<span class="token punctuation">.</span>Command <span class="token punctuation">&#123;</span><span class="token comment">// 创建默认的应用命令行选项</span>opts <span class="token operator">:=</span> options<span class="token punctuation">.</span><span class="token function">NewServerOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span>cmd <span class="token operator">:=</span> <span class="token operator">&amp;</span>cobra<span class="token punctuation">.</span>Command<span class="token punctuation">&#123;</span>Use<span class="token punctuation">:</span>   <span class="token string">"fg-apiserver"</span><span class="token punctuation">,</span>Short<span class="token punctuation">:</span> <span class="token string">"A very lightweight full go project"</span><span class="token punctuation">,</span>Long<span class="token punctuation">:</span> <span class="token string">`A very lightweight full go project, designed to help beginners quicklylearn Go project development.`</span><span class="token punctuation">,</span>SilenceUsage<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>RunE<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span>cmd <span class="token operator">*</span>cobra<span class="token punctuation">.</span>Command<span class="token punctuation">,</span> args <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span><span class="token comment">// 将viper中的配置解析到选项opts变量中</span><span class="token keyword">if</span> err <span class="token operator">:=</span> viper<span class="token punctuation">.</span><span class="token function">Unmarshal</span><span class="token punctuation">(</span>opts<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Hello FastGo!"</span><span class="token punctuation">)</span><span class="token comment">// 对命令行选项进行校验</span><span class="token keyword">if</span> err <span class="token operator">:=</span> opts<span class="token punctuation">.</span><span class="token function">Validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"Read MySQL host from Viper: %s\n\n"</span><span class="token punctuation">,</span> viper<span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span><span class="token string">"mysql.host"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>jsonData<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">MarshalIndent</span><span class="token punctuation">(</span>opts<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">"  "</span><span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">string</span><span class="token punctuation">(</span>jsonData<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token comment">// 设置命令运行时的参数检查，不需要指定命令行参数。例如：./fg-apiserver param1 param2</span>Args<span class="token punctuation">:</span> cobra<span class="token punctuation">.</span>NoArgs<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token comment">// 初始化配置函数，在每个命令运行时调用</span>cobra<span class="token punctuation">.</span><span class="token function">OnInitialize</span><span class="token punctuation">(</span>onInitialize<span class="token punctuation">)</span><span class="token comment">// cobra 支持持久性标志(PersistentFlag)，该标志可用于它所分配的命令以及该命令下的每个子命令</span><span class="token comment">// 推荐使用配置文件来配置应用，便于管理配置项</span>cmd<span class="token punctuation">.</span><span class="token function">PersistentFlags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">StringVarP</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>configFile<span class="token punctuation">,</span> <span class="token string">"config"</span><span class="token punctuation">,</span> <span class="token string">"c"</span><span class="token punctuation">,</span> <span class="token function">filePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"Path to the fg-apiserver configuration file."</span><span class="token punctuation">)</span><span class="token keyword">return</span> cmd<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面代码会通过<code>options.NewServerOptions()</code>函数调用，创建了一个配置结构体变量 <code>opts</code>。在<code>RunE</code>方法中，通过<code>viper.Unmarshal(opts) </code>函数调用，将<code>viper</code>读取配置文件后的配置内容解码到<code>opts</code>配置结构体变量中。</p><p>之后调用opts的 <code>Validate</code>方法，来判断配置项是否合法。并使用下面两种方法读取并打印配置项内容：</p><ul><li>使用<code>viper.GetString</code>读取指定的配置项。<code>viper.Get&lt;Type&gt;</code> 是viper提供的方法可以根据传入的key，来读取配置项的值。key支持层级，例如：<code>mysql.addr</code> ，标识yaml中的以下配置</li></ul><pre class="line-numbers language-go" data-language="go"><code class="language-go">mysql<span class="token punctuation">:</span>   addr<span class="token punctuation">:</span> <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token punctuation">:</span><span class="token number">3306</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>通过配置结构体变量opts 来使用: <code>opts.MySQLOptions.Username</code></li><li>使用<code>json.MarshalIndent </code>读取所有的配置项并打印</li></ul><p>上面代码通过<code>cobra.OnInitialize(onInitialize)</code> 调用，指定了程序启动时调用的钩子函数<code>onInitialize</code> ，该函数用来加载并读取配置。</p><p>通过下面代码行来给命令程序添加<code>--config </code>&#x2F; <code>-c</code>选项</p><pre class="line-numbers language-go" data-language="go"><code class="language-go">cmd<span class="token punctuation">.</span><span class="token function">PersistentFlags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">StringVarP</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>configFile<span class="token punctuation">,</span> <span class="token string">"config"</span><span class="token punctuation">,</span> <span class="token string">"c"</span><span class="token punctuation">,</span> <span class="token function">filePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"Path to the fg-apiserver configuration file."</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>--config</code>  &#x2F;  <code>-c</code> 选项用来指定配置文件路径，并将配置文件的路径保存在configFile变量中，给<code>onInitialize</code> 函数加载解析。</p><p><code>onInitialize</code> 钩子函数定义在cmd&#x2F;fg-apiserver&#x2F;app&#x2F;config.go 文件中</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> app<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"github.com/spf13/cobra"</span><span class="token string">"github.com/spf13/viper"</span><span class="token string">"os"</span><span class="token string">"path/filepath"</span><span class="token string">"strings"</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token punctuation">(</span><span class="token comment">// defaultHomeDir 定义放置 fastgo 服务配置的默认目录.</span>defaultHomeDir <span class="token operator">=</span> <span class="token string">".fastgo"</span><span class="token comment">// defaultConfigName 指定 fastgo 服务的默认配置文件名.</span>defaultConfigName <span class="token operator">=</span> <span class="token string">"fg-apiserver.yaml"</span><span class="token punctuation">)</span><span class="token comment">// onInitialize 设置需要读取的配置文件名、环境变量，并将其内容读取到 viper 中.</span><span class="token keyword">func</span> <span class="token function">onInitialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> configFile <span class="token operator">!=</span> <span class="token string">""</span> <span class="token punctuation">&#123;</span><span class="token comment">// 从命令行选项指定的配置文件中读取</span>viper<span class="token punctuation">.</span><span class="token function">SetConfigFile</span><span class="token punctuation">(</span>configFile<span class="token punctuation">)</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token comment">// 使用默认配置文件路径和名称</span><span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> dir <span class="token operator">:=</span> <span class="token keyword">range</span> <span class="token function">searchDirs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 将dir目录加入到配置文件的搜索路径</span>viper<span class="token punctuation">.</span><span class="token function">AddConfigPath</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 设置配置文件格式问YAML</span>viper<span class="token punctuation">.</span><span class="token function">SetConfigType</span><span class="token punctuation">(</span><span class="token string">"yaml"</span><span class="token punctuation">)</span><span class="token comment">// 配置文件名称（没有文件扩展名）</span>viper<span class="token punctuation">.</span><span class="token function">SetConfigName</span><span class="token punctuation">(</span>defaultConfigName<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 读取环境变量并设置前缀</span><span class="token function">setupEnvironmentVariables</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 读取配置文件.如果指定了配置文件名，则使用指定的配置文件，否则在注册的搜索路径中搜索</span><span class="token boolean">_</span> <span class="token operator">=</span> viper<span class="token punctuation">.</span><span class="token function">ReadInConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 返回默认的配置文件搜索目录</span><span class="token keyword">func</span> <span class="token function">searchDirs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span> <span class="token punctuation">&#123;</span><span class="token comment">// 获取用户主目录</span>homeDir<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">UserHomeDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 如果获取用户主目录失败，则打印错误信息并退出程序</span>cobra<span class="token punctuation">.</span><span class="token function">CheckErr</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">&#123;</span>filepath<span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span>homeDir<span class="token punctuation">,</span> defaultHomeDir<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"."</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// setupEnvironmentVariables 配置环境变量规则.</span><span class="token keyword">func</span> <span class="token function">setupEnvironmentVariables</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 允许 viper 自动匹配环境变量</span>viper<span class="token punctuation">.</span><span class="token function">AutomaticEnv</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 设置环境变量前缀</span>viper<span class="token punctuation">.</span><span class="token function">SetEnvPrefix</span><span class="token punctuation">(</span><span class="token string">"FASTGO"</span><span class="token punctuation">)</span><span class="token comment">// 替换环境变量 key 中的分隔符 '.' 和 '-' 为 '_'</span>replacer <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">NewReplacer</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">,</span> <span class="token string">"_"</span><span class="token punctuation">,</span> <span class="token string">"-"</span><span class="token punctuation">,</span> <span class="token string">"_"</span><span class="token punctuation">)</span>viper<span class="token punctuation">.</span><span class="token function">SetEnvKeyReplacer</span><span class="token punctuation">(</span>replacer<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// filePath 获取默认配置文件的完整路径.</span><span class="token keyword">func</span> <span class="token function">filePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span>home<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">UserHomeDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 如果不能获取用户主目录，则记录错误并返回空路径</span>cobra<span class="token punctuation">.</span><span class="token function">CheckErr</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token keyword">return</span> filepath<span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span>home<span class="token punctuation">,</span> defaultHomeDir<span class="token punctuation">,</span> defaultConfigName<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="创建配置文件结构体"><a href="#创建配置文件结构体" class="headerlink" title="创建配置文件结构体"></a>创建配置文件结构体</h3><p>可以通过<code>viper.Get&lt;Type&gt;</code> 来访问配置项的值，也可以通过配置项结构体变量来引用配置项的值，例如<code>opts.MySQLOptions.Username</code> 。</p><p>实际开发中建议通过 <code>opts.MySQLOptions.Username</code> 方式来访问配置项的值，更易维护。</p><p>配置项结构体位于<code>cmd/fg-apiserver/app/options/options.go</code> 文件中，放在这里是因为配置项结构体的创建、校验方法代码量较大，为了提高可维护性，统一保存在<code>cmd/fg-apiserver/app/options</code> 目录中</p><p><code>cmd/fg-apiserver/app/options/options.go</code> 内容如下</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> options<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"fmt"</span><span class="token string">"net"</span><span class="token string">"strconv"</span><span class="token string">"time"</span><span class="token punctuation">)</span><span class="token keyword">type</span> MySQLOption <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>Addr                  <span class="token builtin">string</span>        <span class="token string">`json:"addr,omitempty" mapstructure:"addr"`</span>Username              <span class="token builtin">string</span>        <span class="token string">`json:"username,omitempty" mapstructure:"username"`</span>Password              <span class="token builtin">string</span>        <span class="token string">`json:"-" mapstructure:"password"`</span>Database              <span class="token builtin">string</span>        <span class="token string">`json:"database" mapstructure:"database"`</span>MaxIdleConnections    <span class="token builtin">int</span>           <span class="token string">`json:"max-idle-connections,omitempty" mapstructure:"max-idle-connections,omitempty"`</span>MaxOpenConnections    <span class="token builtin">int</span>           <span class="token string">`json:"max-open-connections,omitempty" mapstructure:"max-open-connections"`</span>MaxConnectionLifeTime time<span class="token punctuation">.</span>Duration <span class="token string">`json:"max-connection-life-time,omitempty" mapstructure:"max-connection-life-time"`</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">NewMYSQLOption</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span>MySQLOption <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token operator">&amp;</span>MySQLOption<span class="token punctuation">&#123;</span>Addr<span class="token punctuation">:</span>                  <span class="token string">"127.0.0.1:3306"</span><span class="token punctuation">,</span>Username<span class="token punctuation">:</span>              <span class="token string">"onex"</span><span class="token punctuation">,</span>Password<span class="token punctuation">:</span>              <span class="token string">"onex"</span><span class="token punctuation">,</span>Database<span class="token punctuation">:</span>              <span class="token string">"onex"</span><span class="token punctuation">,</span>MaxIdleConnections<span class="token punctuation">:</span>    <span class="token number">100</span><span class="token punctuation">,</span>MaxOpenConnections<span class="token punctuation">:</span>    <span class="token number">100</span><span class="token punctuation">,</span>MaxConnectionLifeTime<span class="token punctuation">:</span> time<span class="token punctuation">.</span><span class="token function">Duration</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">type</span> ServerOptions <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>MySQLOptions <span class="token operator">*</span>MySQLOption <span class="token string">`json:"mysql" mapstructure:"mysql"`</span><span class="token punctuation">&#125;</span><span class="token comment">// NewServerOptions 创建带有默认值的 ServerOptions 实例.</span><span class="token keyword">func</span> <span class="token function">NewServerOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span>ServerOptions <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token operator">&amp;</span>ServerOptions<span class="token punctuation">&#123;</span>MySQLOptions<span class="token punctuation">:</span> <span class="token function">NewMYSQLOption</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>o <span class="token operator">*</span>ServerOptions<span class="token punctuation">)</span> <span class="token function">Validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span><span class="token comment">// 验证MySQL地址格式</span><span class="token keyword">if</span> o<span class="token punctuation">.</span>MySQLOptions<span class="token punctuation">.</span>Addr <span class="token operator">==</span> <span class="token string">""</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"MySQL server address cannot be empty"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 检查地址格式是否为host:port</span>host<span class="token punctuation">,</span> portStr<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">SplitHostPort</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>MySQLOptions<span class="token punctuation">.</span>Addr<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"Invalid MySQL address format '%s': %w"</span><span class="token punctuation">,</span> o<span class="token punctuation">.</span>MySQLOptions<span class="token punctuation">.</span>Addr<span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 验证端口是否为数字</span>port<span class="token punctuation">,</span> err <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">Atoi</span><span class="token punctuation">(</span>portStr<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token operator">||</span> port <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token operator">||</span> port <span class="token operator">></span> <span class="token number">65535</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"Invalid MySQL port: %s"</span><span class="token punctuation">,</span> portStr<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 验证主机名是否为空</span><span class="token keyword">if</span> host <span class="token operator">==</span> <span class="token string">""</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"MySQL hostname cannot be empty"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 验证凭据和数据库名</span><span class="token keyword">if</span> o<span class="token punctuation">.</span>MySQLOptions<span class="token punctuation">.</span>Username <span class="token operator">==</span> <span class="token string">""</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"MySQL username cannot be empty"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> o<span class="token punctuation">.</span>MySQLOptions<span class="token punctuation">.</span>Password <span class="token operator">==</span> <span class="token string">""</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"MySQL password cannot be empty"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> o<span class="token punctuation">.</span>MySQLOptions<span class="token punctuation">.</span>Database <span class="token operator">==</span> <span class="token string">""</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"MySQL database name cannot be empty"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 验证连接池参数</span><span class="token keyword">if</span> o<span class="token punctuation">.</span>MySQLOptions<span class="token punctuation">.</span>MaxIdleConnections <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"MySQL max idle connections must be greater than 0"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> o<span class="token punctuation">.</span>MySQLOptions<span class="token punctuation">.</span>MaxOpenConnections <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"MySQL max open connections must be greater than 0"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> o<span class="token punctuation">.</span>MySQLOptions<span class="token punctuation">.</span>MaxIdleConnections <span class="token operator">></span> o<span class="token punctuation">.</span>MySQLOptions<span class="token punctuation">.</span>MaxOpenConnections <span class="token punctuation">&#123;</span><span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"MySQL max idle connections cannot be greater than max open connections"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> o<span class="token punctuation">.</span>MySQLOptions<span class="token punctuation">.</span>MaxConnectionLifeTime <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"MySQL max connection lifetime must be greater than 0"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上述代码定义<code>ServerOptions</code>类型的结构体变量，该结构体变量保存了<code>fg-apiserver</code>服务需要用到的所有配置项，例如：<code>MySQLOptions</code>。每个配置项都有<code>mapstructure</code> 标签，非常重要，用来指定结构体字段对应YAML中的同名键，例如<code>MySQLOptions</code>结构体变量中的Addr字段对应了以下YAML键(<code>mysql.addr</code>)</p><pre class="line-numbers language-go" data-language="go"><code class="language-go">mysql<span class="token punctuation">:</span>  addr<span class="token punctuation">:</span> <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token punctuation">:</span><span class="token number">3306</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>上面代码还提供了<code>NewServerOptions</code>函数，用来快速创建一个带有默认值的<code>*ServerOptions</code>类型的结构体，通过该函数创建一个具有默认值的配置变量opts，再更新opts中的字段值有以下优点：</p><ul><li>可以便捷创建一个带有默认值的结构体变量，变量中的值都是推荐、可用的值</li><li>开发者可以根据需要只更新需要的配置项，其他配置项使用默认的值，可以提高配置应用的效率</li></ul><p><code>*ServerOptions </code>结构体类型的<code>Validate</code>函数用来校验配置项的值是否合法，避免非常配置项带来的程序异常。</p><p>Validate函数中的校验逻辑可以借助ai生成。</p><p>执行命令，编译并运行程序</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook<span class="token operator">-</span>Pro fastgo <span class="token operator">%</span> <span class="token keyword">go</span> build <span class="token operator">-</span>v <span class="token operator">-</span>o _output<span class="token operator">/</span>fg<span class="token operator">-</span>apiserver cmd<span class="token operator">/</span>fg<span class="token operator">-</span>apiserver<span class="token operator">/</span>main<span class="token punctuation">.</span><span class="token keyword">go</span>gitlab<span class="token punctuation">.</span>com<span class="token operator">/</span>onexstack<span class="token operator">/</span>fastgo<span class="token operator">/</span>cmd<span class="token operator">/</span>fg<span class="token operator">-</span>apiserver<span class="token operator">/</span>appcommand<span class="token operator">-</span>line<span class="token operator">-</span>arguments<span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook<span class="token operator">-</span>Pro fastgo <span class="token operator">%</span> <span class="token punctuation">.</span><span class="token operator">/</span>_output<span class="token operator">/</span>fg<span class="token operator">-</span>apiserver <span class="token operator">-</span>c configs<span class="token operator">/</span>fg<span class="token operator">-</span>apiserver<span class="token punctuation">.</span>yaml         <span class="token operator">/</span>Users<span class="token operator">/</span>dujie<span class="token operator">/</span><span class="token punctuation">.</span>fastgo<span class="token operator">/</span>fg<span class="token operator">-</span>apiserver<span class="token punctuation">.</span>yamlconfigs<span class="token operator">/</span>fg<span class="token operator">-</span>apiserver<span class="token punctuation">.</span>yaml<span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>Hello FastGo<span class="token operator">!</span>Read MySQL host from Viper<span class="token punctuation">:</span> <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token punctuation">:</span><span class="token number">3306</span>fastgo1234<span class="token punctuation">&#123;</span>  <span class="token string">"mysql"</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>    <span class="token string">"addr"</span><span class="token punctuation">:</span> <span class="token string">"127.0.0.1:3306"</span><span class="token punctuation">,</span>    <span class="token string">"username"</span><span class="token punctuation">:</span> <span class="token string">"fastgo"</span><span class="token punctuation">,</span>    <span class="token string">"database"</span><span class="token punctuation">:</span> <span class="token string">"fastgo"</span><span class="token punctuation">,</span>    <span class="token string">"max-idle-connections"</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>    <span class="token string">"max-open-connections"</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>    <span class="token string">"max-connection-life-time"</span><span class="token punctuation">:</span> <span class="token number">10000000000</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;3、使用viper添加配置文件解析功能&quot;&gt;&lt;a href=&quot;#3、使用viper添加配置文件解析功能&quot; class=&quot;headerlink&quot; title=&quot;3、使用viper添加配置文件解析功能&quot;&gt;&lt;/a&gt;3、使用viper添加配置文件解析功能&lt;/h1&gt;&lt;p&gt;因为</summary>
      
    
    
    
    <category term="Fastgo项目学习" scheme="http://dycloud.fun/categories/Fastgo%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="云原生" scheme="http://dycloud.fun/tags/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
    <category term="golang" scheme="http://dycloud.fun/tags/golang/"/>
    
    <category term="Fastgo项目学习" scheme="http://dycloud.fun/tags/Fastgo%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>2、使用Cobra包构建go项</title>
    <link href="http://dycloud.fun/2025/02/12/2%E3%80%81%E4%BD%BF%E7%94%A8Cobra%E5%8C%85%E6%9E%84%E5%BB%BAgo%E9%A1%B9%E7%9B%AE/"/>
    <id>http://dycloud.fun/2025/02/12/2%E3%80%81%E4%BD%BF%E7%94%A8Cobra%E5%8C%85%E6%9E%84%E5%BB%BAgo%E9%A1%B9%E7%9B%AE/</id>
    <published>2025-02-12T01:32:00.000Z</published>
    <updated>2025-04-02T08:19:37.930Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2、使用Cobra包构建go项目"><a href="#2、使用Cobra包构建go项目" class="headerlink" title="2、使用Cobra包构建go项目"></a>2、使用Cobra包构建go项目</h1><p>Go程序运行入口是main函数，首先要开发出main函数</p><p>可以使用以下两个方式开发一个main函数</p><ul><li>手动写一个main函数，实现业务逻辑，并启动程序。</li><li>使用应用框架，实现一个main函数</li></ul><p>手动写一个main函数并启动</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"flag"</span><span class="token string">"fmt"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 解析命令行参数</span>option1 <span class="token operator">:=</span> flag<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">"option1"</span><span class="token punctuation">,</span> <span class="token string">"default_value"</span><span class="token punctuation">,</span> <span class="token string">"Description of option 1"</span><span class="token punctuation">)</span>option2 <span class="token operator">:=</span> flag<span class="token punctuation">.</span><span class="token function">Int</span><span class="token punctuation">(</span><span class="token string">"option2"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"Description of option 2"</span><span class="token punctuation">)</span>flag<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 执行简单的业务逻辑</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Option 1 value:"</span><span class="token punctuation">,</span> <span class="token operator">*</span>option1<span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Option 2 value:"</span><span class="token punctuation">,</span> <span class="token operator">*</span>option2<span class="token punctuation">)</span><span class="token comment">// 在这里添加您的业务逻辑代码</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这种mian不能实现很复杂的功能，当应用程序逻辑复杂的时候，main函数代码会很难维护。所以建议使用社区优秀的应用包来实现一个程序，这种程序更加结构化，更易维护</p><h5 id="使用应用框架实现main函数"><a href="#使用应用框架实现main函数" class="headerlink" title="使用应用框架实现main函数"></a>使用应用框架实现main函数</h5><p>社区有很多优秀的go包，例如<a href="https://github.com/spf13/cobra">spf13&#x2F;cobra</a>、<a href="https://github.com/urfave/cli">urfave&#x2F;cli</a>，当前用的最多的是cobra。例如k8s、docker、etcd、hugo等都用cobra构建应用。</p><p>一个Go项目通常代表一个应用，一个应用通常又包含多个服务。根据project-layout 目录结构规范，目录的组织方式如下：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">$ tree -F app-aapp-a├── cmd/│   ├── component-a/│   └── component-b/└── internal/    ├── component-a/    └── component-b/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在cmd&#x2F;目录下创建多个目录，例如：component-a、component-b。每个目录下保存了对应服务的main源码。cmd&#x2F;目录下的源文件保存了服务二进制文件的启动源码，具体的业务逻辑实现放在internal目录下，并且放在对应的同名目录下。</p><p>这种目录组织方式的优点如下：</p><ul><li>在cmd&#x2F;目录下保存不同服务的main源码，将一个应用的不同服务main函数保存在一个cmd&#x2F;目录下，便于查找和维护这些服务源码。</li><li>将不同服务的业务实现放在internal目录下的不同文件中，有利于从目录来物理隔离不同服务的源码，从而实现代码的可维护性。</li></ul><p>因为fastgo实现了一个REST API服务器，所以其服务组件命名为 <code>fg-apiserver</code> 。其中fg是fastgo的简写，用来标识这是一个fastgo项目的服务。apiserver用来明确知名这是一个REST API服务器。</p><p>根据上面介绍的源码组织方式，需要再cmd&#x2F; 目录下创建fg-apiserver 目录，fg-apiserver目录中创建main.go文件，用来保存fg-apiserver服务的main函数入口。代码如下：（位于cmd&#x2F;fg-apiserver&#x2F;main.go）文件中</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"os"</span>    <span class="token string">"github.com/onexstack/fastgo/cmd/fg-apiserver/app"</span>    <span class="token comment">// 导入 automaxprocs 包，可以在程序启动时自动设置 GOMAXPROCS 配置，</span>    <span class="token comment">// 使其与 Linux 容器的 CPU 配额相匹配。</span>    <span class="token comment">// 这避免了在容器中运行时，因默认 GOMAXPROCS 值不合适导致的性能问题，</span>    <span class="token comment">// 确保 Go 程序能够充分利用可用的 CPU 资源，避免 CPU 浪费。</span>    <span class="token boolean">_</span> <span class="token string">"go.uber.org/automaxprocs"</span><span class="token punctuation">)</span><span class="token comment">// Go 程序的默认入口函数。阅读项目代码的入口函数.</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 创建 Go 极速项目</span>    command <span class="token operator">:=</span> app<span class="token punctuation">.</span><span class="token function">NewFastGOCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// 执行命令并处理错误</span>    <span class="token keyword">if</span> err <span class="token operator">:=</span> command<span class="token punctuation">.</span><span class="token function">Execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 如果发生错误，则退出程序</span>        <span class="token comment">// 返回退出码，可以使其他程序（例如 bash 脚本）根据退出码来判断服务运行状态</span>        os<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>cmd/fg-apiserver/main.go </code>文件通过 <code>app.NewFastGOCommand() </code>创建了一个<code>*cobra.Command</code>类型的命令实例.</p><p><code>cmd/fg-apiserver/app/server.go </code>文件内容如下：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> app<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"fmt"</span>    <span class="token string">"github.com/spf13/cobra"</span><span class="token punctuation">)</span><span class="token comment">// NewFastGOCommand 创建一个 *cobra.Command 对象，用于启动应用程序.</span><span class="token keyword">func</span> <span class="token function">NewFastGOCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span>cobra<span class="token punctuation">.</span>Command <span class="token punctuation">&#123;</span>    cmd <span class="token operator">:=</span> <span class="token operator">&amp;</span>cobra<span class="token punctuation">.</span>Command<span class="token punctuation">&#123;</span>        <span class="token comment">// 指定命令的名字，该名字会出现在帮助信息中</span>        Use<span class="token punctuation">:</span> <span class="token string">"fg-apiserver"</span><span class="token punctuation">,</span>        <span class="token comment">// 命令的简短描述</span>        Short<span class="token punctuation">:</span> <span class="token string">"A very lightweight full go project"</span><span class="token punctuation">,</span>        Long<span class="token punctuation">:</span> <span class="token string">`A very lightweight full go project, designed to help beginners quickly        learn Go project development.`</span><span class="token punctuation">,</span>        <span class="token comment">// 命令出错时，不打印帮助信息。设置为 true 可以确保命令出错时一眼就能看到错误信息</span>        SilenceUsage<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token comment">// 指定调用 cmd.Execute() 时，执行的 Run 函数</span>        RunE<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span>cmd <span class="token operator">*</span>cobra<span class="token punctuation">.</span>Command<span class="token punctuation">,</span> args <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span>            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Hello FastGO!"</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token boolean">nil</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token comment">// 设置命令运行时的参数检查，不需要指定命令行参数。例如：./fg-apiserver param1 param2</span>        Args<span class="token punctuation">:</span> cobra<span class="token punctuation">.</span>NoArgs<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> cmd<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>创建<code>cmd</code>实例的方法，其实就是根据<code>cobra.Command </code>类型的字段描述，设置需要的字段。每个字段的含义，可以看上面。</p><p>编译并测试</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook<span class="token operator">-</span>Pro fastgo <span class="token operator">%</span> <span class="token keyword">go</span> build <span class="token operator">-</span>v <span class="token operator">-</span>o _output<span class="token operator">/</span>fg<span class="token operator">-</span>apiserver cmd<span class="token operator">/</span>fg<span class="token operator">-</span>apiserver<span class="token operator">/</span>main<span class="token punctuation">.</span><span class="token keyword">go</span> <span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook<span class="token operator">-</span>Pro fastgo <span class="token operator">%</span> <span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook<span class="token operator">-</span>Pro fastgo <span class="token operator">%</span> <span class="token punctuation">.</span><span class="token operator">/</span>_output<span class="token operator">/</span>fg<span class="token operator">-</span>apiserver Hello FastGo<span class="token operator">!</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>上面的代码，核心设计如下：</p><ul><li>声明式Api设计：代码使用Cobra的声明式结构定义命令行界面，通过简介的配置表达复杂的命令行行为，提升了可读性和可维护性。这种方式是Go社区推崇的”配置胜于代码”哲学的体现。</li><li>错误处理优化：使用<code>RunE</code> 代替<code>Run</code> 并配置<code>SlienceUsage: true</code> ，创建了更专业的错误报告机制，这种设计在大型CLI工具中至关重要，它确保错误信息清晰可见，不被冗长的帮助文本淹没。</li><li>安全边界设置：通过Args: cobra.NoArgs 强制执行参数验证，防止用户误传参数导致程序异常。这种防御性编程思想体现了对生产环境稳定性的考虑，是区分业务和专业CLI工具的关键细节。</li><li>自文档化：代码中的Short 和Long字段不仅提供了用户文档，更重要的是他们构成了自助式用户界面，是命令行工具更加友好。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;2、使用Cobra包构建go项目&quot;&gt;&lt;a href=&quot;#2、使用Cobra包构建go项目&quot; class=&quot;headerlink&quot; title=&quot;2、使用Cobra包构建go项目&quot;&gt;&lt;/a&gt;2、使用Cobra包构建go项目&lt;/h1&gt;&lt;p&gt;Go程序运行入口是main函</summary>
      
    
    
    
    <category term="Fastgo项目学习" scheme="http://dycloud.fun/categories/Fastgo%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="云原生" scheme="http://dycloud.fun/tags/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
    <category term="golang" scheme="http://dycloud.fun/tags/golang/"/>
    
    <category term="Fastgo项目学习" scheme="http://dycloud.fun/tags/Fastgo%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>1、初始化Fastgo项目仓库</title>
    <link href="http://dycloud.fun/2025/02/12/1%E3%80%81%E5%88%9D%E5%A7%8B%E5%8C%96fastgo%E9%A1%B9%E7%9B%AE%E4%BB%93%E5%BA%93/"/>
    <id>http://dycloud.fun/2025/02/12/1%E3%80%81%E5%88%9D%E5%A7%8B%E5%8C%96fastgo%E9%A1%B9%E7%9B%AE%E4%BB%93%E5%BA%93/</id>
    <published>2025-02-12T00:32:00.000Z</published>
    <updated>2025-04-02T08:09:03.513Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1、初始化fastgo项目仓库"><a href="#1、初始化fastgo项目仓库" class="headerlink" title="1、初始化fastgo项目仓库"></a>1、初始化fastgo项目仓库</h1><p>项目开发第一步，初始化一个项目目录，并根据这个目录规范，添加必要的目录及文件 <a href="https://github.com/golang-standards/project-layout/blob/master/README_zh-CN.md">golang-standards&#x2F;project-layout</a></p><p>初始化一个go项目，分为以下几步：</p><ol><li>创建项目目录</li><li>初始化目录为go模块</li><li>初始化目录为git仓库</li><li>创建需要的目录</li><li>创建helloworld 程序</li></ol><h3 id="步骤一：创建项目目录"><a href="#步骤一：创建项目目录" class="headerlink" title="步骤一：创建项目目录"></a>步骤一：创建项目目录</h3><p>开发Go项目第一步就是创建一个项目目录。现在go模块管理的都用Go Modules。虽然在使用gomodules的亲看过下，不需要在设置GOPATH环境变量。但是为了提高项目维护性，这里还是建议将项目放在GOPATH目录下。</p><p>初始化目录，操作命令如下：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook<span class="token operator">-</span>Pro GolandProjects <span class="token operator">%</span> mkdir <span class="token operator">-</span>p $GOPATH<span class="token operator">/</span>src<span class="token operator">/</span>gitlab<span class="token punctuation">.</span>com<span class="token operator">/</span>onexstack<span class="token operator">/</span>fastgo<span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook<span class="token operator">-</span>Pro GolandProjects <span class="token operator">%</span> cd $GOPATH<span class="token operator">/</span>src<span class="token operator">/</span>gitlab<span class="token punctuation">.</span>com<span class="token operator">/</span>onexstack<span class="token operator">/</span>fastgo<span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook<span class="token operator">-</span>Pro fastgo <span class="token operator">%</span> echo <span class="token string">"## fastgo项目"</span> <span class="token operator">>></span> README<span class="token punctuation">.</span>md<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="步骤二：初始化目录为Go模块"><a href="#步骤二：初始化目录为Go模块" class="headerlink" title="步骤二：初始化目录为Go模块"></a>步骤二：初始化目录为Go模块</h3><p>go项目都需要将目录初始化一个go模块。所以，这里需要将fastgo目录初始化一个go模块。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook-Pro fastgo % go mod init  <span class="token comment"># 初始化Go模块</span>go: creating new go.mod: module gitlab.com/onexstack/fastgo    <span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook-Pro fastgo % go work init <span class="token builtin class-name">.</span>   <span class="token comment"># 初始化Go工作区（仅限多模块管理场景），生成go.work文件</span><span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook-Pro fastgo % go work use <span class="token builtin class-name">.</span> <span class="token comment"># 添加当前模块到go工作区 </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="步骤三：初始化目录为Git仓库"><a href="#步骤三：初始化目录为Git仓库" class="headerlink" title="步骤三：初始化目录为Git仓库"></a>步骤三：初始化目录为Git仓库</h3><p>当前Go项目基本上都使用git来管理项目代码，所以需要将目录初始化为一个git仓库</p><p>初始化仓库第一步，就是在当前目录添加一个<code>.gitignore </code>文件，里面包含不期望git跟踪的文件，例如：临时文件等。可以使用生成工具来<a href="https://www.toptal.com/developers/gitignore">gitignore.io</a>生成<code>.gitignore</code></p><pre class="line-numbers language-vim" data-language="vim"><code class="language-vim"># Created by https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token operator">.</span>toptal<span class="token operator">.</span><span class="token builtin">com</span><span class="token operator">/</span>developers<span class="token operator">/</span>gitignore<span class="token operator">/</span>api<span class="token operator">/</span>macos# Edit at https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token operator">.</span>toptal<span class="token operator">.</span><span class="token builtin">com</span><span class="token operator">/</span>developers<span class="token operator">/</span>gitignore<span class="token operator">?</span>templates<span class="token operator">=</span>macos# 备份文件<span class="token operator">*</span><span class="token operator">.</span>bak<span class="token operator">*</span>~# Go工作区文件。<span class="token keyword">go</span>项目开发中，不建议将<span class="token keyword">go</span>工作区文件提交到仓库中<span class="token keyword">go</span><span class="token operator">.</span>work<span class="token keyword">go</span><span class="token operator">.</span>work<span class="token operator">.</span>sum# 日志文件<span class="token operator">*</span><span class="token operator">.</span>log# 自定义文件<span class="token operator">/</span>_output### macOS #### General<span class="token operator">.</span>DS_Store<span class="token operator">.</span>AppleDouble<span class="token operator">.</span>LSOverride# Icon must end with two \<span class="token keyword">r</span>Icon# Thumbnails<span class="token operator">.</span>_<span class="token operator">*</span># Files that might appear <span class="token keyword">in</span> the root of a volume<span class="token operator">.</span>DocumentRevisions<span class="token operator">-</span>V100<span class="token operator">.</span>fseventsd<span class="token operator">.</span>Spotlight<span class="token operator">-</span>V100<span class="token operator">.</span>TemporaryItems<span class="token operator">.</span>Trashes<span class="token operator">.</span>VolumeIcon<span class="token operator">.</span>icns<span class="token operator">.</span><span class="token builtin">com</span><span class="token operator">.</span>apple<span class="token operator">.</span>timemachine<span class="token operator">.</span>donotpresent# Directories potentially created <span class="token keyword">on</span> remote AFP share<span class="token operator">.</span>AppleDB<span class="token operator">.</span>AppleDesktopNetwork Trash FolderTemporary Items<span class="token operator">.</span>apdisk### macOS Patch #### iCloud generated <span class="token keyword">files</span><span class="token operator">*</span><span class="token operator">.</span>icloud# End of https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token operator">.</span>toptal<span class="token operator">.</span><span class="token builtin">com</span><span class="token operator">/</span>developers<span class="token operator">/</span>gitignore<span class="token operator">/</span>api<span class="token operator">/</span>macos<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以执行以下命令将go项目仓库初始化为一个git仓库</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook-Pro fastgo % <span class="token function">git</span> init  <span class="token comment"># 初始化当前目录为Git仓库</span>Initialized empty Git repository <span class="token keyword">in</span> /Users/dujie/go/src/gitlab.com/onexstack/fastgo/.git/<span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook-Pro fastgo % <span class="token function">git</span> config user.name 杜杰  <span class="token comment"># 设置仓库级别的用户名</span><span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook-Pro fastgo % <span class="token function">git</span> config user.email dujie@cnpiec.com.cn  <span class="token comment"># 设置仓库级别邮箱</span><span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook-Pro fastgo % <span class="token function">git</span> config --global credential.helper store  <span class="token comment">#永久保存凭据</span><span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook-Pro fastgo % <span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span> <span class="token comment"># 添加所有被Git追踪的文件到暂存区 </span><span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook-Pro fastgo % <span class="token function">git</span> remote <span class="token function">add</span> origin http://10.122.25.15/kubernetes/fastgo  <span class="token comment"># 将本地仓库与远程仓库相关联</span><span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook-Pro fastgo % <span class="token function">git</span> commit -m <span class="token string">"feat: 第一次提交"</span>  <span class="token comment"># 将暂存区的内容添加到本地仓库</span><span class="token punctuation">[</span>main <span class="token punctuation">(</span>root-commit<span class="token punctuation">)</span> 61f41c6<span class="token punctuation">]</span> feat: 第一次提交 <span class="token number">3</span> files changed, <span class="token number">7</span> insertions<span class="token punctuation">(</span>+<span class="token punctuation">)</span> create mode <span class="token number">100644</span> README.md create mode <span class="token number">100644</span> go.mod create mode <span class="token number">100644</span> go.work<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>之后就可以在该目录下开发代码，并根据需要提交代码。提交后的源码目录内容如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook-Pro fastgo % ll -a total <span class="token number">32</span>drwxr-xr-x@  <span class="token number">7</span> dujie  staff  <span class="token number">224</span> Apr  <span class="token number">1</span> <span class="token number">14</span>:21 <span class="token builtin class-name">.</span>drwxr-xr-x@  <span class="token number">3</span> dujie  staff   <span class="token number">96</span> Apr  <span class="token number">1</span> <span class="token number">14</span>:08 <span class="token punctuation">..</span>drwxr-xr-x@ <span class="token number">12</span> dujie  staff  <span class="token number">384</span> Apr  <span class="token number">1</span> <span class="token number">14</span>:18 .git-rw-r--r--@  <span class="token number">1</span> dujie  staff  <span class="token number">859</span> Apr  <span class="token number">1</span> <span class="token number">14</span>:21 .gitignore-rw-r--r--@  <span class="token number">1</span> dujie  staff   <span class="token number">16</span> Apr  <span class="token number">1</span> <span class="token number">14</span>:09 README.md-rw-r--r--@  <span class="token number">1</span> dujie  staff   <span class="token number">46</span> Apr  <span class="token number">1</span> <span class="token number">14</span>:11 go.mod-rw-r--r--@  <span class="token number">1</span> dujie  staff   <span class="token number">17</span> Apr  <span class="token number">1</span> <span class="token number">14</span>:11 go.work<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="步骤四：创建需要的目录"><a href="#步骤四：创建需要的目录" class="headerlink" title="步骤四：创建需要的目录"></a>步骤四：创建需要的目录</h3><p>执行以下命令创建需要的目录：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook-Pro fastgo % <span class="token function">mkdir</span> -p cmd configs docs scripts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>提前创建一些符合目录规范的空目录可以起到以下两个作用：</p><ul><li>提前规划目录相当于提前规划未来的功能，将未来要实现的功能以目录的形式固化在项目仓库中，起到记录的作用</li><li>提前创建目录有利于后续文件按照功能存放在预先规划好的目录中，从而使项目更加规范。否则不同开发者可能会根据各自的开发习惯，创建各种各样的目录结构和目录名称。</li></ul><p>因为Git默认不会追踪空目录，所以需要在空目录下创建.keep文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook-Pro fastgo % <span class="token function">touch</span> configs/.keep docs/.keep  scripts/.keep cmd/.keep<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="步骤五：创建helloworld程序"><a href="#步骤五：创建helloworld程序" class="headerlink" title="步骤五：创建helloworld程序"></a>步骤五：创建helloworld程序</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook-Pro fastgo % <span class="token function">mkdir</span> -p cmd/fg-apiserver<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>cmd&#x2F;fg-apiserver&#x2F;main.go内容如下</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Hello World!"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>编译并运行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook-Pro fastgo % gofmt -s -w ./   <span class="token comment"># 格式化Go源码</span><span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook-Pro fastgo % go build -o _output/fg-apiserver -v cmd/fg-apiserver/main.go  <span class="token comment"># 编译fg-apiserver组件源码</span>command-line-arguments<span class="token punctuation">(</span>base<span class="token punctuation">)</span> dujie@MacBook-Pro fastgo % ./_output/fg-apiserver  <span class="token comment"># 启动fg-apiserver组件</span>Hello World<span class="token operator">!</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1、初始化fastgo项目仓库&quot;&gt;&lt;a href=&quot;#1、初始化fastgo项目仓库&quot; class=&quot;headerlink&quot; title=&quot;1、初始化fastgo项目仓库&quot;&gt;&lt;/a&gt;1、初始化fastgo项目仓库&lt;/h1&gt;&lt;p&gt;项目开发第一步，初始化一个项目目录，</summary>
      
    
    
    
    <category term="Fastgo项目学习" scheme="http://dycloud.fun/categories/Fastgo%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="云原生" scheme="http://dycloud.fun/tags/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
    <category term="golang" scheme="http://dycloud.fun/tags/golang/"/>
    
    <category term="Fastgo项目学习" scheme="http://dycloud.fun/tags/Fastgo%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>调用k8s API实现添加用户并授权</title>
    <link href="http://dycloud.fun/2024/07/24/%E8%B0%83%E7%94%A8k8s%20api%E5%AE%9E%E7%8E%B0%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7%E5%B9%B6%E6%8E%88%E6%9D%83/"/>
    <id>http://dycloud.fun/2024/07/24/%E8%B0%83%E7%94%A8k8s%20api%E5%AE%9E%E7%8E%B0%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7%E5%B9%B6%E6%8E%88%E6%9D%83/</id>
    <published>2024-07-24T12:32:00.000Z</published>
    <updated>2024-07-25T03:03:24.694Z</updated>
    
    <content type="html"><![CDATA[<h1 id="调用k8s-api实现添加用户并授权"><a href="#调用k8s-api实现添加用户并授权" class="headerlink" title="调用k8s api实现添加用户并授权"></a>调用k8s api实现添加用户并授权</h1><h3 id="一、k8s中根据用户名创建config文件"><a href="#一、k8s中根据用户名创建config文件" class="headerlink" title="一、k8s中根据用户名创建config文件"></a>一、k8s中根据用户名创建config文件</h3><p>在k8s中如果想给一个用户创建授权文件，并让用户可用通过该config文件操作k8s集群，流程如下</p><p>1、生成私钥和证书签名请求（CSR）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 生成私钥</span><span class="token punctuation">[</span>root@k8s-master01 config<span class="token punctuation">]</span><span class="token comment"># openssl genrsa -out dujie.key 2048</span>Generating RSA private key, <span class="token number">2048</span> bit long modulus <span class="token punctuation">(</span><span class="token number">2</span> primes<span class="token punctuation">)</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>+++++<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>.+++++e is <span class="token number">65537</span> <span class="token punctuation">(</span>0x010001<span class="token punctuation">)</span><span class="token comment"># 生成证书签名请求（CSR）</span><span class="token punctuation">[</span>root@k8s-master01 config<span class="token punctuation">]</span><span class="token comment"># openssl req -new -key dujie.key -out dujie.csr -subj "/CN=username/O=organization"</span><span class="token punctuation">[</span>root@k8s-master01 config<span class="token punctuation">]</span><span class="token comment"># ll</span>总用量 <span class="token number">8</span>-rw-r--r-- <span class="token number">1</span> root root  <span class="token number">920</span> <span class="token number">7</span>月  <span class="token number">25</span> 09:38 dujie.csr-rw------- <span class="token number">1</span> root root <span class="token number">1679</span> <span class="token number">7</span>月  <span class="token number">25</span> 09:38 dujie.key<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2、创建<strong>CertificateSigningRequest</strong>资源</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 config<span class="token punctuation">]</span><span class="token comment"># kubectl create -f - &lt;&lt;EOF</span>apiVersion: certificates.k8s.io/v1kind: CertificateSigningRequestmetadata:  name: dujie-csrspec:  signerName: kubernetes.io/kube-apiserver-client  groups:  - system:authenticated  request: <span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> dujie.csr <span class="token operator">|</span> base64 <span class="token operator">|</span> <span class="token function">tr</span> -d <span class="token string">'\n'</span><span class="token variable">)</span></span>  usages:  - client authEOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3、查看和审批CSR</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 config<span class="token punctuation">]</span><span class="token comment"># kubectl get csr </span>NAME           AGE   SIGNERNAME                            REQUESTOR          REQUESTEDDURATION   CONDITIONdujie-csr      16s   kubernetes.io/kube-apiserver-client   kubernetes-admin   <span class="token operator">&lt;</span>none<span class="token operator">></span>              Pending<span class="token punctuation">[</span>root@k8s-master01 config<span class="token punctuation">]</span><span class="token comment"># kubectl certificate approve dujie-csr</span>certificatesigningrequest.certificates.k8s.io/dujie-csr approved<span class="token punctuation">[</span>root@k8s-master01 config<span class="token punctuation">]</span><span class="token comment"># kubectl get csr </span>NAME           AGE   SIGNERNAME                            REQUESTOR          REQUESTEDDURATION   CONDITIONdujie-csr      35s   kubernetes.io/kube-apiserver-client   kubernetes-admin   <span class="token operator">&lt;</span>none<span class="token operator">></span>              Approved,Issued<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>4、获取已颁发的证书</p><p>你获取的是 Kubernetes 集群的 CA（Certificate Authority）证书的 Base64 编码数据。这些数据用于验证 Kubernetes API 服务器证书的根证书。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 config<span class="token punctuation">]</span><span class="token comment"># kubectl get csr username-csr -o jsonpath='&#123;.status.certificate&#125;' | base64 --decode > dujie.crt</span><span class="token punctuation">[</span>root@k8s-master01 config<span class="token punctuation">]</span><span class="token comment"># </span><span class="token punctuation">[</span>root@k8s-master01 config<span class="token punctuation">]</span><span class="token comment"># ll</span>总用量 <span class="token number">12</span>-rw-r--r-- <span class="token number">1</span> root root <span class="token number">1123</span> <span class="token number">7</span>月  <span class="token number">25</span> 09:40 dujie.crt-rw-r--r-- <span class="token number">1</span> root root  <span class="token number">920</span> <span class="token number">7</span>月  <span class="token number">25</span> 09:38 dujie.csr-rw------- <span class="token number">1</span> root root <span class="token number">1679</span> <span class="token number">7</span>月  <span class="token number">25</span> 09:38 dujie.key<span class="token punctuation">[</span>root@k8s-master01 config<span class="token punctuation">]</span><span class="token comment"># cat dujie.crt </span>-----BEGIN CERTIFICATE-----MIIDEDCCAfigAwIBAgIRAKd4kXjh8llahVKABkuybNYwDQYJKoZIhvcNAQELBQAwFTETMBEGA1UEAxMKa3ViZXJuZXRlczAeFw0yNDA3MjUwMDU3MzVaFw0yNTA3MjUwMDU3MzVaMCoxFTATBgNVBAoTDG9yZ2FuaXphdGlvbjERMA8GA1UEAxMIdXNlcm5hbWUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDLckKDsUnp9ZMynLbayZ47S8eldOtQSYP8637WzHJ1q2XZsTmGFXTAkJS9riMkV8BuDzhrOLHjJ/hmXZuRQrCNGSLhXXsUfDlIa4iXtZNorv7kYzT7vkT0565wGnN1TPPQ9M18Z5PuaP/UpPtt6K65rRRvi/zyVET/aT+WDd4b7J2WwH93dDbVqONIy7+Q/9BCo1UOobI5fWAiixTAdZasKAQVaD8GD+ZMl8+kZrLA+TL8gdtapSYBrNbZplguTAWUDAcpXkvtMEoQiC4Sbp8VistfQ3Oxy3aLdycrNbdRrgjW6HHjMLBidQ+efVliQ4MP3rjjwB2VnSgpYZ8qcPcbAgMBAAGjRjBEMBMGA1UdJQQMMAoGCCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAwHwYDVR0jBBgwFoAUDkfKuT1zeRu8QhIUBQWl6nwkCkAwDQYJKoZIhvcNAQELBQADggEBABN0tqHPZMpxge0HmbjWkzGxqbbhkqHXgZx/ltG1MHF4nb5FQvUUaTwrY3xDzYd7Wk6iBOQRS/Hh4bcDJd6iBVHfSk0vEfERYTO1GJRbJ8n4RWCJg89xVkuD6MBD4MfVRRD5IW3zG58ycbIPmw428HvIwMFIFpZ+JURFwRyIFqfwgQxl61Sgr9RyQze7H4Fd9xItRjFocwqrNXj6bbIctLC8XkhuT1teDQNhIiGvLxbaVsgaEdglkU0P2btZ0cbxoCCwPcIWsKGL8YZtyCEAmNGD0BXIPydX5GDIX3xVgrDUxh1RL9YmUWFpyZo7dRKpPWWwfWLFG/OWgToROVTfuSs<span class="token operator">=</span>-----END CERTIFICATE-----<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>5、配置kubernetes客户端</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 config<span class="token punctuation">]</span><span class="token comment"># kubectl config set-credentials dujie --client-certificate=dujie.crt --client-key=dujie.key</span><span class="token punctuation">[</span>root@k8s-master01 config<span class="token punctuation">]</span><span class="token comment"># kubectl config set-context --current --user=dujie</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>6、生成config文件</p><p>获取集群的ca证书</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 config<span class="token punctuation">]</span><span class="token comment"># kubectl config view --minify -o jsonpath='&#123;.clusters[0].cluster.certificate-authority-data&#125;'</span>DATA+OMITTED<span class="token punctuation">[</span>root@k8s-master01 config<span class="token punctuation">]</span><span class="token comment"># </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 config<span class="token punctuation">]</span><span class="token comment"># CA_CERT=$(kubectl config view --minify -o jsonpath='&#123;.clusters[0].cluster.certificate-authority-data&#125;')</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使用以下命令创建一个新的 <code>kubeconfig</code> 文件，其中包含 <code>dujie</code> 用户的凭据信息。假设 API 服务器地址是 <code>https://&lt;api-server-address&gt;:6443</code>，并使用上述命令生成的 CA 证书数据：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> <span class="token operator">&lt;&lt;</span><span class="token string">EOF<span class="token bash punctuation"> <span class="token operator">></span> dujie.kubeconfig</span>apiVersion: v1kind: Configclusters:- cluster:    certificate-authority-data: <span class="token variable">$&#123;CA_CERT&#125;</span>    server: https://&lt;api-server-address>:6443  name: kubernetescontexts:- context:    cluster: kubernetes    user: dujie  name: dujie-contextcurrent-context: dujie-contextusers:- name: dujie  user:    client-certificate: dujie.crt    client-key: dujie.keyEOF</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面的操作仅仅只是生成一个config文件，并没有对该用户授权。所以还无法操作k8s集群，授权操作自行查询，下面主要演示如何使用go对k8s集群生成授权文件、添加用户并授权等操作。</p><h3 id="二、golang中如何创建用户授权文件"><a href="#二、golang中如何创建用户授权文件" class="headerlink" title="二、golang中如何创建用户授权文件"></a>二、golang中如何创建用户授权文件</h3><p>初衷：开发一个k8s多集群管理平台，且可以根据当前登录的平台用户对k8s集群资源进行授权操作。</p><p>大体流程如下：</p><ol><li>获取k8s客户端：获取k8s客户端对象clientset，通过clientset对k8s Api进行交互，执行创建和管理资源的操作</li><li>生成私钥：生成RSA私钥，用于生成证书请求，并在后续的链接中用于客户端认证</li><li>生成证书请求（CSR）：根据传入的用户名和私钥，生成一个证书签名请求（CSR），该CSR中包含了请求证书和公钥和相关的身份信息，然后提交给ca请求签发证书</li><li>创建CertificateSigningRequest资源：用于请求管理员和自动系统批准和签发证书</li><li>审批CSR：为 <code>createResp.Status.Conditions</code> 添加批准条件，并更新 CSR 的审批状态</li><li>等待证书颁发：在一个循环中不断检查 CSR 的状态，看是否已颁发证书</li><li>删除已颁发证书的CSR：在证书颁发后，删除相应的 CSR 对象。</li></ol><p>第一步先看下我这里的系统表、集群表、还有集群用户表的结构</p><p>集群表：</p><p>Users 设置为[]Users 表示1个集群可以被多个用户访问和管理</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// k8sCluster表 结构体  K8sCluster</span><span class="token keyword">type</span> K8sCluster <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>ID                 <span class="token builtin">uint</span>      <span class="token string">`json:"id" gorm:"not null;unique;primary_key"`</span>UUID               uuid<span class="token punctuation">.</span>UUID <span class="token string">`json:"uuid" gorm:"comment:集群UUID"`</span>Name               <span class="token builtin">string</span>    <span class="token string">`json:"name" form:"name" gorm:"comment:集群名称"`</span>KubeType           <span class="token builtin">uint</span>      <span class="token string">`json:"kube_type" form:"kube_type" gorm:"comment:凭据类型1:KubeConfig,2:Token"`</span>KubeConfig         <span class="token builtin">string</span>    <span class="token string">`gorm:"type:longText" json:"kube_config" form:"kube_config" gorm:"comment:kube_config"`</span>KubeCaCrt          <span class="token builtin">string</span>    <span class="token string">`gorm:"type:longText; comment:ca.crt" json:"kube_ca_crt" form:"kube_ca_crt"`</span>ApiAddress         <span class="token builtin">string</span>    <span class="token string">`gorm:"type:longText" json:"api_address" form:"api_address" gorm:"comment:api_address"`</span>PrometheusUrl      <span class="token builtin">string</span>    <span class="token string">`gorm:"type:longText" json:"prometheus_url" form:"prometheus_url" gorm:"comment:prometheus 地址"`</span>PrometheusAuthType <span class="token builtin">uint</span>      <span class="token string">`json:"prometheus_auth_type" form:"prometheus_auth_type" gorm:"comment: 认证类型"`</span>PrometheusUser     <span class="token builtin">string</span>    <span class="token string">`gorm:"type:longText" json:"prometheus_user" form:"prometheus_user" gorm:"comment:用户名"`</span>PrometheusPwd      <span class="token builtin">string</span>    <span class="token string">`gorm:"type:longText" json:"prometheus_pwd" form:"prometheus_pwd" gorm:"comment:密码"`</span>Users              <span class="token punctuation">[</span><span class="token punctuation">]</span>User    <span class="token string">`json:"users" gorm:"foreignKey:ClusterId;"`</span> # foreignKey指定外键，在Use表有个字段为ClusterId，关联到K8sCluster表的主键字段CreatedBy          <span class="token builtin">uint</span>      <span class="token string">`gorm:"column:created_by;comment:创建者"`</span>UpdatedBy          <span class="token builtin">uint</span>      <span class="token string">`gorm:"column:updated_by;comment:更新者"`</span>DeletedBy          <span class="token builtin">uint</span>      <span class="token string">`gorm:"column:deleted_by;comment:删除者"`</span>CreatedAt          time<span class="token punctuation">.</span>Time     UpdatedAt          time<span class="token punctuation">.</span>Time      DeletedAt          gorm<span class="token punctuation">.</span>DeletedAt <span class="token string">`gorm:"index" json:"-"`</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>k8s的User表</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>ID             <span class="token builtin">uint</span>           <span class="token string">`json:"id" gorm:"not null;unique;primary_key"`</span>UUID           uuid<span class="token punctuation">.</span>UUID      <span class="token string">`json:"uuid" gorm:"comment:用户UUID"`</span>Username       <span class="token builtin">string</span>         <span class="token string">`json:"userName" gorm:"comment:用户登录名"`</span>NickName       <span class="token builtin">string</span>         <span class="token string">`json:"nickName" gorm:"default:系统用户;comment:用户昵称"`</span>KubeConfig     <span class="token builtin">string</span>         <span class="token string">`gorm:"type:longText" json:"kube_config" form:"kube_config" gorm:"comment:kube_config"`</span>ClusterRoles   <span class="token builtin">string</span>         <span class="token string">`gorm:"type:longText" json:"cluster_roles"`</span>NamespaceRoles <span class="token builtin">string</span>         <span class="token string">`json:"namespace_roles" gorm:"comment:命名空间权限"`</span>ClusterId      <span class="token builtin">uint</span>           <span class="token string">`json:"cluster_id" gorm:"comment:集群ID"`</span>CreatedAt      time<span class="token punctuation">.</span>Time      <span class="token string">`json:"created_at"`</span>UpdatedAt      time<span class="token punctuation">.</span>Time      <span class="token string">`json:"updated_at"`</span>DeletedAt      gorm<span class="token punctuation">.</span>DeletedAt <span class="token string">`gorm:"index" json:"-"`</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>平台用户表</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> SysUser <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>ID        <span class="token builtin">uint</span>           <span class="token string">`gorm:"primarykey" json:"ID"`</span> CreatedAt time<span class="token punctuation">.</span>Time      UpdatedAt time<span class="token punctuation">.</span>Time      DeletedAt gorm<span class="token punctuation">.</span>DeletedAt <span class="token string">`gorm:"index" json:"-"`</span> UUID        uuid<span class="token punctuation">.</span>UUID      <span class="token string">`json:"uuid" gorm:"index;comment:用户UUID"`</span>  Username    <span class="token builtin">string</span>         <span class="token string">`json:"userName" gorm:"index;comment:用户登录名"`</span>    Password    <span class="token builtin">string</span>         <span class="token string">`json:"-"  gorm:"comment:用户登录密码"`</span>   NickName    <span class="token builtin">string</span>         <span class="token string">`json:"nickName" gorm:"default:系统用户;comment:用户昵称"`</span>             AuthorityId <span class="token builtin">uint</span>           <span class="token string">`json:"authorityId" gorm:"default:888;comment:用户角色ID"`</span>   Authority   SysAuthority   <span class="token string">`json:"authority" gorm:"foreignKey:AuthorityId;references:AuthorityId;comment:用户角色"`</span>Authorities <span class="token punctuation">[</span><span class="token punctuation">]</span>SysAuthority <span class="token string">`json:"authorities" gorm:"many2many:sys_user_authority;"`</span>Phone       <span class="token builtin">string</span>         <span class="token string">`json:"phone"  gorm:"comment:用户手机号"`</span>                    Email       <span class="token builtin">string</span>         <span class="token string">`json:"email"  gorm:"comment:用户邮箱"`</span>                    Enable      <span class="token builtin">int</span>            <span class="token string">`json:"enable" gorm:"default:1;comment:用户是否被冻结 1正常 2冻结"`</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>创建凭据方法：</p><p>clusterId：用户上传的集群id，区分对哪个集群进行创建凭据</p><p>userId：当前平台登录的用户id</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token punctuation">(</span>K8sClusterService <span class="token operator">*</span>K8sClusterService<span class="token punctuation">)</span> <span class="token function">CreateCredential</span><span class="token punctuation">(</span>clusterId <span class="token builtin">int</span><span class="token punctuation">,</span> userId <span class="token builtin">uint</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span><span class="token comment">// 根据当前平台登录的用户id获取用户信息</span><span class="token keyword">var</span> user system<span class="token punctuation">.</span>SysUser<span class="token keyword">if</span> err <span class="token operator">:=</span> global<span class="token punctuation">.</span>DY_DB<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">"id = ?"</span><span class="token punctuation">,</span> userId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span><span class="token punctuation">.</span>Error<span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token comment">// 根据当前平台登录的用户的uuid，和上传的集群id查询集群信息，同时预加载相关的用户信息</span><span class="token keyword">var</span> clusterIns cluster<span class="token punctuation">.</span>K8sCluster<span class="token keyword">if</span> err <span class="token operator">:=</span> global<span class="token punctuation">.</span>DY_DB<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">"id = ?"</span><span class="token punctuation">,</span> clusterId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Preload</span><span class="token punctuation">(</span><span class="token string">"Users"</span><span class="token punctuation">,</span> <span class="token string">"uuid = ?"</span><span class="token punctuation">,</span> user<span class="token punctuation">.</span>UUID<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>clusterIns<span class="token punctuation">)</span><span class="token punctuation">.</span>Error<span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token operator">!</span>errors<span class="token punctuation">.</span><span class="token function">Is</span><span class="token punctuation">(</span>global<span class="token punctuation">.</span>DY_DB<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">"cluster_id = ? and uuid = ?"</span><span class="token punctuation">,</span> clusterId<span class="token punctuation">,</span> user<span class="token punctuation">.</span>UUID<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>cluster<span class="token punctuation">.</span>User<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Error<span class="token punctuation">,</span> gorm<span class="token punctuation">.</span>ErrRecordNotFound<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"该账号集群凭据已存在"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>clusterIns<span class="token punctuation">)</span><span class="token comment">// CreateClientCertificate</span><span class="token comment">// 构建kubernetes 实例</span>k <span class="token operator">:=</span> kubernetes<span class="token punctuation">.</span><span class="token function">NewKubernetes</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>clusterIns<span class="token punctuation">,</span> <span class="token operator">&amp;</span>cluster<span class="token punctuation">.</span>User<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment">// 生成对应的客户端证书，返回私钥和公钥</span>privateKey<span class="token punctuation">,</span> publicCert<span class="token punctuation">,</span> err <span class="token operator">:=</span> k<span class="token punctuation">.</span><span class="token function">CreateClientCertificate</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>Username<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"CreateClientCertificate, error:"</span> <span class="token operator">+</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// To JSON</span>kubeConfig<span class="token punctuation">,</span> err <span class="token operator">:=</span> k<span class="token punctuation">.</span><span class="token function">KubeconfigJson</span><span class="token punctuation">(</span>clusterIns<span class="token punctuation">,</span> user<span class="token punctuation">.</span>Username<span class="token punctuation">,</span> privateKey<span class="token punctuation">,</span> publicCert<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"To YAML, error:"</span> <span class="token operator">+</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// save User</span><span class="token keyword">if</span> err <span class="token operator">=</span> global<span class="token punctuation">.</span>DY_DB<span class="token punctuation">.</span><span class="token function">Save</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>cluster<span class="token punctuation">.</span>User<span class="token punctuation">&#123;</span>UUID<span class="token punctuation">:</span>       user<span class="token punctuation">.</span>UUID<span class="token punctuation">,</span>Username<span class="token punctuation">:</span>   user<span class="token punctuation">.</span>Username<span class="token punctuation">,</span>NickName<span class="token punctuation">:</span>   user<span class="token punctuation">.</span>NickName<span class="token punctuation">,</span>KubeConfig<span class="token punctuation">:</span> kubeConfig<span class="token punctuation">,</span>ClusterId<span class="token punctuation">:</span>  <span class="token function">uint</span><span class="token punctuation">(</span>clusterId<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Error<span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>CreateClientCertificate 方法创建集群证书，返回私钥和公钥</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">func <span class="token punctuation">(</span>k *Kubernetes<span class="token punctuation">)</span> CreateClientCertificate<span class="token punctuation">(</span>username string<span class="token punctuation">)</span> <span class="token punctuation">(</span>privateKey, publicCert string, err error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>// 获取clientSet客户端clientset, err :<span class="token operator">=</span> k.Client<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> nil <span class="token punctuation">&#123;</span><span class="token builtin class-name">return</span> privateKey, publicCert, err<span class="token punctuation">&#125;</span>// 生成一个私钥RandprivateKey, err :<span class="token operator">=</span> GeneratePrivateKey<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> nil <span class="token punctuation">&#123;</span><span class="token builtin class-name">return</span> privateKey, publicCert, err<span class="token punctuation">&#125;</span>// 生成用户证书申请cert, err :<span class="token operator">=</span> CreateClientCertificateRequest<span class="token punctuation">(</span>username, RandprivateKey<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> nil <span class="token punctuation">&#123;</span><span class="token builtin class-name">return</span> privateKey, publicCert, err<span class="token punctuation">&#125;</span>// 创建k8s证书签名请求<span class="token punctuation">(</span>CSR<span class="token punctuation">)</span>csr :<span class="token operator">=</span> certv1.CertificateSigningRequest<span class="token punctuation">&#123;</span>ObjectMeta: metav1.ObjectMeta<span class="token punctuation">&#123;</span>Name: username,<span class="token punctuation">&#125;</span>,Spec: certv1.CertificateSigningRequestSpec<span class="token punctuation">&#123;</span>SignerName: <span class="token string">"kubernetes.io/kube-apiserver-client"</span>, // 指定签名者Request:    cert,                                  // 设置CSR 请求的证书Groups: <span class="token punctuation">[</span><span class="token punctuation">]</span>string<span class="token punctuation">&#123;</span><span class="token string">"system:authenticated"</span>, // 指定用户组<span class="token punctuation">&#125;</span>,Usages: <span class="token punctuation">[</span><span class="token punctuation">]</span>certv1.KeyUsage<span class="token punctuation">&#123;</span><span class="token string">"client auth"</span>, // 指定证书用途为客户端认证<span class="token punctuation">&#125;</span>,<span class="token punctuation">&#125;</span>,<span class="token punctuation">&#125;</span>// 在k8s集群中创建CSRcreateResp, err :<span class="token operator">=</span> clientset.CertificatesV1<span class="token punctuation">(</span><span class="token punctuation">)</span>.CertificateSigningRequests<span class="token punctuation">(</span><span class="token punctuation">)</span>.Create<span class="token punctuation">(</span>context.TODO<span class="token punctuation">(</span><span class="token punctuation">)</span>, <span class="token operator">&amp;</span>csr, metav1.CreateOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> nil <span class="token punctuation">&#123;</span><span class="token builtin class-name">return</span> privateKey, publicCert, err<span class="token punctuation">&#125;</span>// 审批CSR证书createResp.Status.Conditions <span class="token operator">=</span> append<span class="token punctuation">(</span>createResp.Status.Conditions, certv1.CertificateSigningRequestCondition<span class="token punctuation">&#123;</span>Reason:         <span class="token string">"Approved by Devops"</span>,Type:           certv1.CertificateApproved,LastUpdateTime: metav1.Now<span class="token punctuation">(</span><span class="token punctuation">)</span>,Status:         <span class="token string">"True"</span>,<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>// 更新CSR的审批状态updateResp, err :<span class="token operator">=</span> clientset.CertificatesV1<span class="token punctuation">(</span><span class="token punctuation">)</span>.CertificateSigningRequests<span class="token punctuation">(</span><span class="token punctuation">)</span>.UpdateApproval<span class="token punctuation">(</span>context.TODO<span class="token punctuation">(</span><span class="token punctuation">)</span>, createResp.Name, createResp, metav1.UpdateOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> nil <span class="token punctuation">&#123;</span><span class="token builtin class-name">return</span> privateKey, publicCert, err<span class="token punctuation">&#125;</span>// 循环等待证书颁发<span class="token keyword">for</span> <span class="token punctuation">&#123;</span>max_num :<span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">for</span> <span class="token punctuation">&#123;</span>// 每次循环等待3秒time.Sleep<span class="token punctuation">(</span><span class="token number">3</span> * time.Second<span class="token punctuation">)</span><span class="token keyword">if</span> max_num <span class="token operator">></span> <span class="token number">150</span> <span class="token punctuation">&#123;</span><span class="token builtin class-name">break</span><span class="token punctuation">&#125;</span>// 获取CSR的状态getResp, err :<span class="token operator">=</span> clientset.CertificatesV1<span class="token punctuation">(</span><span class="token punctuation">)</span>.CertificateSigningRequests<span class="token punctuation">(</span><span class="token punctuation">)</span>.Get<span class="token punctuation">(</span>context.TODO<span class="token punctuation">(</span><span class="token punctuation">)</span>, updateResp.Name, metav1.GetOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> nil <span class="token punctuation">&#123;</span>max_num <span class="token operator">+=</span> <span class="token number">1</span>global.DY_LOG.Warn<span class="token punctuation">(</span><span class="token string">"CertificateSigningRequests Get failed: "</span> + err.Error<span class="token punctuation">(</span><span class="token punctuation">))</span><span class="token builtin class-name">continue</span><span class="token punctuation">&#125;</span>// 检查CSR是否已经颁发证书<span class="token keyword">if</span> getResp.Status.Certificate <span class="token operator">!=</span> nil <span class="token punctuation">&#123;</span>// 删除已经颁发证书的CSR<span class="token keyword">if</span> err <span class="token operator">=</span> clientset.CertificatesV1<span class="token punctuation">(</span><span class="token punctuation">)</span>.CertificateSigningRequests<span class="token punctuation">(</span><span class="token punctuation">)</span>.Delete<span class="token punctuation">(</span>context.TODO<span class="token punctuation">(</span><span class="token punctuation">)</span>, username, metav1.DeleteOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> nil <span class="token punctuation">&#123;</span>max_num <span class="token operator">+=</span> <span class="token number">1</span>global.DY_LOG.Warn<span class="token punctuation">(</span><span class="token string">"CertificateSigningRequests Get failed: "</span> + err.Error<span class="token punctuation">(</span><span class="token punctuation">))</span><span class="token builtin class-name">continue</span><span class="token punctuation">&#125;</span>// 返回私钥和公钥证书<span class="token punctuation">(</span>编码为Base64<span class="token punctuation">)</span><span class="token builtin class-name">return</span> base64.StdEncoding.EncodeToString<span class="token punctuation">(</span>pem.EncodeToMemory<span class="token punctuation">(</span><span class="token operator">&amp;</span>pem.Block<span class="token punctuation">&#123;</span>Type: <span class="token string">"RSA PRIVATE KEY"</span>, Bytes: RandprivateKey<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>,<span class="token punctuation">)</span>, base64.StdEncoding.EncodeToString<span class="token punctuation">(</span>getResp.Status.Certificate<span class="token punctuation">)</span>, err<span class="token punctuation">&#125;</span>max_num <span class="token operator">+=</span> <span class="token number">1</span><span class="token builtin class-name">continue</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>GeneratePrivateKey：生成私钥文件</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// GeneratePrivateKey</span><span class="token comment">//</span><span class="token comment">//@Description: 生成私钥</span><span class="token comment">//@return []byte</span><span class="token comment">//@return error</span><span class="token keyword">func</span> <span class="token function">GeneratePrivateKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>privateKey<span class="token punctuation">,</span> err <span class="token operator">:=</span> rsa<span class="token punctuation">.</span><span class="token function">GenerateKey</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span>Reader<span class="token punctuation">,</span> <span class="token number">2048</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err<span class="token punctuation">&#125;</span><span class="token keyword">return</span> x509<span class="token punctuation">.</span><span class="token function">MarshalPKCS1PrivateKey</span><span class="token punctuation">(</span>privateKey<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>CreateClientCertificateRequest：根据私钥文件，生成客户端证书CSR</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">CreateClientCertificateRequest</span><span class="token punctuation">(</span>userName <span class="token builtin">string</span><span class="token punctuation">,</span> key <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> org <span class="token operator">...</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 解析PEM 编码的RSA私钥</span>privateKey<span class="token punctuation">,</span> err <span class="token operator">:=</span> x509<span class="token punctuation">.</span><span class="token function">ParsePKCS1PrivateKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err<span class="token punctuation">&#125;</span><span class="token comment">// 构建证书请求的主题信息，包括用户名等</span>subj <span class="token operator">:=</span> pkix<span class="token punctuation">.</span>Name<span class="token punctuation">&#123;</span>CommonName<span class="token punctuation">:</span> userName<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> org <span class="token punctuation">&#123;</span>subj<span class="token punctuation">.</span>Organization <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>subj<span class="token punctuation">.</span>Organization<span class="token punctuation">,</span> org<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 将主题信息转换为RDN序列</span>rawSubj <span class="token operator">:=</span> subj<span class="token punctuation">.</span><span class="token function">ToRDNSequence</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 使用ASN.1 编码主题</span>asn1Subj<span class="token punctuation">,</span> err <span class="token operator">:=</span> asn1<span class="token punctuation">.</span><span class="token function">Marshal</span><span class="token punctuation">(</span>rawSubj<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err<span class="token punctuation">&#125;</span><span class="token comment">// 创建x509的证书请求对象</span>csr <span class="token operator">:=</span> <span class="token operator">&amp;</span>x509<span class="token punctuation">.</span>CertificateRequest<span class="token punctuation">&#123;</span>RawSubject<span class="token punctuation">:</span>         asn1Subj<span class="token punctuation">,</span>SignatureAlgorithm<span class="token punctuation">:</span> x509<span class="token punctuation">.</span>SHA256WithRSA<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token comment">// 生成证书CSR</span>csrBytes<span class="token punctuation">,</span> err <span class="token operator">:=</span> x509<span class="token punctuation">.</span><span class="token function">CreateCertificateRequest</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span>Reader<span class="token punctuation">,</span> csr<span class="token punctuation">,</span> privateKey<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err<span class="token punctuation">&#125;</span><span class="token comment">// 将CSR转为PEM格式</span><span class="token keyword">return</span> pem<span class="token punctuation">.</span><span class="token function">EncodeToMemory</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>pem<span class="token punctuation">.</span>Block<span class="token punctuation">&#123;</span>Type<span class="token punctuation">:</span> <span class="token string">"CERTIFICATE REQUEST"</span><span class="token punctuation">,</span> Bytes<span class="token punctuation">:</span> csrBytes<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>调用创建授权方法之后，k8s_users表就会多出一条记录，该记录就是一个集群用户，其中的kube_config字段就是对应的k8sconfig文件，创建的用户权限根据k8s_cluster表的kubeconfig文件权限一致</p><p><img src="/images/client1.png" alt="image"></p><p><img src="/images/client2.png" alt="image"></p><p><img src="/images/client3.png" alt="image"></p><p>上面的方法可以给当前登录的平台用户申请授权文件，而想给平台的其他用户授权呢，如下图，给wangwu用户授权k8s集群的操作权限，需要：</p><ul><li>配置默认的集群角色</li><li>创建集群角色</li><li>根据角色创建对应用户（用户授权）</li></ul><p><img src="/images/client4.png" alt="image"></p><p>配置默认集群角色</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// CreateDefaultClusterRoles 创建或更新默认的 Kubernetes ClusterRoles</span><span class="token comment">// 返回值：</span><span class="token comment">// - error: 如果创建或更新过程中出现问题，则返回相应的错误信息</span><span class="token keyword">func</span> <span class="token punctuation">(</span>k <span class="token operator">*</span>Kubernetes<span class="token punctuation">)</span> <span class="token function">CreateDefaultClusterRoles</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 获取 Kubernetes 客户端</span>    clientset<span class="token punctuation">,</span> err <span class="token operator">:=</span> k<span class="token punctuation">.</span><span class="token function">Client</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        global<span class="token punctuation">.</span>GVA_LOG<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">"clientset init failed: "</span> <span class="token operator">+</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> err    <span class="token punctuation">&#125;</span>    <span class="token comment">// 遍历初始化的 ClusterRoles 列表</span>    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> InitClusterRoles <span class="token punctuation">&#123;</span>        <span class="token comment">// 尝试获取现有的 ClusterRole</span>        instance<span class="token punctuation">,</span> err <span class="token operator">:=</span> clientset<span class="token punctuation">.</span><span class="token function">RbacV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClusterRoles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">TODO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> InitClusterRoles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>Name<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>GetOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 如果错误不是 "not found"，则返回错误</span>            <span class="token keyword">if</span> <span class="token operator">!</span>strings<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>strings<span class="token punctuation">.</span><span class="token function">ToLower</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"not found"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> err            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 如果 ClusterRole 不存在，则创建新的 ClusterRole</span>        <span class="token keyword">if</span> instance <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token operator">||</span> instance<span class="token punctuation">.</span>Name <span class="token operator">==</span> <span class="token string">""</span> <span class="token punctuation">&#123;</span>            <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">=</span> clientset<span class="token punctuation">.</span><span class="token function">RbacV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClusterRoles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">TODO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>InitClusterRoles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>CreateOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> err            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 如果 ClusterRole 存在，则更新现有的 ClusterRole</span>            <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">=</span> clientset<span class="token punctuation">.</span><span class="token function">RbacV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClusterRoles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">TODO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>InitClusterRoles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>UpdateOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> err            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 返回 nil 表示操作成功</span>    <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>创建集群角色：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> NamespaceRoles <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>Namespace <span class="token builtin">string</span>   <span class="token string">`json:"namespace"`</span>Roles     <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span> <span class="token string">`json:"roles"`</span><span class="token punctuation">&#125;</span><span class="token keyword">type</span> CreateClusterRole <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>ClusterRoles   <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span>         <span class="token string">`json:"cluster_roles"`</span>NamespaceRoles <span class="token punctuation">[</span><span class="token punctuation">]</span>NamespaceRoles <span class="token string">`json:"namespace_roles"`</span>UserUuids      <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span>         <span class="token string">`json:"user_uuids"`</span>cluster<span class="token punctuation">.</span>UserClusterId <span class="token builtin">int</span> <span class="token string">`json:"cluster_id"`</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// CreateClusterRole</span><span class="token comment">//</span><span class="token comment">//@Description: 创建k8s集群角色</span><span class="token comment">//@receiver k8sClusterService</span><span class="token comment">//@param role  包含要创建的角色数据的结构体</span><span class="token comment">//@return err</span><span class="token keyword">func</span> <span class="token punctuation">(</span>k8sClusterService <span class="token operator">*</span>K8sClusterService<span class="token punctuation">)</span> <span class="token function">CreateClusterRole</span><span class="token punctuation">(</span>role cluster<span class="token punctuation">.</span>RoleData<span class="token punctuation">)</span> <span class="token punctuation">(</span>err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 根据角色中的 ClusterId 查找对应的 Kubernetes 集群实例</span><span class="token keyword">var</span> clusterIns cluster<span class="token punctuation">.</span>K8sCluster<span class="token keyword">if</span> err <span class="token operator">:=</span> global<span class="token punctuation">.</span>DY_DB<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">"id = ?"</span><span class="token punctuation">,</span> role<span class="token punctuation">.</span>ClusterId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>clusterIns<span class="token punctuation">)</span><span class="token punctuation">.</span>Error<span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token comment">// 遍历角色规则中的 API 组，将 "core" 替换为空字符串</span><span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> role<span class="token punctuation">.</span>Rules <span class="token punctuation">&#123;</span><span class="token keyword">for</span> j <span class="token operator">:=</span> <span class="token keyword">range</span> role<span class="token punctuation">.</span>Rules<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>APIGroups <span class="token punctuation">&#123;</span><span class="token keyword">if</span> role<span class="token punctuation">.</span>Rules<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>APIGroups<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">"core"</span> <span class="token punctuation">&#123;</span>role<span class="token punctuation">.</span>Rules<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>APIGroups<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 创建 Kubernetes 客户端实例</span>k <span class="token operator">:=</span> kubernetes<span class="token punctuation">.</span><span class="token function">NewKubernetes</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>clusterIns<span class="token punctuation">,</span> <span class="token operator">&amp;</span>cluster<span class="token punctuation">.</span>User<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>client<span class="token punctuation">,</span> err <span class="token operator">:=</span> k<span class="token punctuation">.</span><span class="token function">Client</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token comment">// 设置角色的注解和标签</span>role<span class="token punctuation">.</span>Annotations<span class="token punctuation">[</span><span class="token string">"builtin"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"false"</span>role<span class="token punctuation">.</span>Annotations<span class="token punctuation">[</span><span class="token string">"created-at"</span><span class="token punctuation">]</span> <span class="token operator">=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">"2006-01-02 15:04:05"</span><span class="token punctuation">)</span>role<span class="token punctuation">.</span>Labels<span class="token punctuation">[</span>kubernetes<span class="token punctuation">.</span>LabelManageKey<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"devops"</span>role<span class="token punctuation">.</span>Labels<span class="token punctuation">[</span>kubernetes<span class="token punctuation">.</span>LabelClusterId<span class="token punctuation">]</span> <span class="token operator">=</span> clusterIns<span class="token punctuation">.</span>UUID<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 使用 Kubernetes 客户端创建集群角色</span><span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">RbacV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClusterRoles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">TODO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>role<span class="token punctuation">.</span>ClusterRole<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>CreateOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>创建集群用户并授权</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// CreateUser</span><span class="token comment">//</span><span class="token comment">//@Description: 在k8s中为给定的角色创建用户</span><span class="token comment">//@receiver k8sClusterService</span><span class="token comment">//@param role</span><span class="token comment">//@return err</span><span class="token keyword">func</span> <span class="token punctuation">(</span>k8sClusterService <span class="token operator">*</span>K8sClusterService<span class="token punctuation">)</span> <span class="token function">CreateUser</span><span class="token punctuation">(</span>role clusterReq<span class="token punctuation">.</span>CreateClusterRole<span class="token punctuation">)</span> <span class="token punctuation">(</span>err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 遍历 role.UserUuids 列表，处理每个用户的创建操作</span><span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> userUuid <span class="token operator">:=</span> <span class="token keyword">range</span> role<span class="token punctuation">.</span>UserUuids <span class="token punctuation">&#123;</span><span class="token comment">// 启动一个新的 goroutine 来并行处理每个用户的创建</span><span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span>u <span class="token builtin">string</span><span class="token punctuation">,</span> r clusterReq<span class="token punctuation">.</span>CreateClusterRole<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">var</span> user system<span class="token punctuation">.</span>SysUser<span class="token comment">// 根据用户的 UUID 从数据库中查找对应的用户记录</span><span class="token keyword">if</span> err <span class="token operator">=</span> global<span class="token punctuation">.</span>DY_DB<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">"uuid = ?"</span><span class="token punctuation">,</span> u<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span><span class="token punctuation">.</span>Error<span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>global<span class="token punctuation">.</span>DY_LOG<span class="token punctuation">.</span><span class="token function">Warn</span><span class="token punctuation">(</span><span class="token string">"User Not Found failed:"</span> <span class="token operator">+</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">&#125;</span><span class="token comment">// 检查该用户是否已经存在于指定的集群中</span><span class="token keyword">if</span> <span class="token operator">!</span>errors<span class="token punctuation">.</span><span class="token function">Is</span><span class="token punctuation">(</span>global<span class="token punctuation">.</span>DY_DB<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">"cluster_id = ? and uuid = ?"</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>ClusterId<span class="token punctuation">,</span> user<span class="token punctuation">.</span>UUID<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>cluster<span class="token punctuation">.</span>User<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Error<span class="token punctuation">,</span> gorm<span class="token punctuation">.</span>ErrRecordNotFound<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>global<span class="token punctuation">.</span>DY_LOG<span class="token punctuation">.</span><span class="token function">Warn</span><span class="token punctuation">(</span>fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"The User: %s cluster credentials for this account already exist"</span><span class="token punctuation">,</span> user<span class="token punctuation">.</span>NickName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">&#125;</span><span class="token comment">// 调用 CreateClusterUser 方法来为用户创建集群凭证</span><span class="token keyword">if</span> err <span class="token operator">=</span> k8sClusterService<span class="token punctuation">.</span><span class="token function">CreateClusterUser</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>global<span class="token punctuation">.</span>DY_LOG<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">"CreateClusterUser failed: "</span> <span class="token operator">+</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span>userUuid<span class="token punctuation">,</span> role<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token comment">// CreateClusterUser</span><span class="token comment">//</span><span class="token comment">//@Description: 为给定角色和平台用户在k8s中创建集群用户</span><span class="token comment">//@receiver k8sClusterService</span><span class="token comment">//@param role</span><span class="token comment">//@param user</span><span class="token comment">//@return err</span><span class="token keyword">func</span> <span class="token punctuation">(</span>k8sClusterService <span class="token operator">*</span>K8sClusterService<span class="token punctuation">)</span> <span class="token function">CreateClusterUser</span><span class="token punctuation">(</span>role clusterReq<span class="token punctuation">.</span>CreateClusterRole<span class="token punctuation">,</span> user system<span class="token punctuation">.</span>SysUser<span class="token punctuation">)</span> <span class="token punctuation">(</span>err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 根据角色中的 ClusterId 查找对应的 Kubernetes 集群实例</span><span class="token keyword">var</span> clusterIns cluster<span class="token punctuation">.</span>K8sCluster<span class="token keyword">if</span> err <span class="token operator">:=</span> global<span class="token punctuation">.</span>DY_DB<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">"id = ?"</span><span class="token punctuation">,</span> role<span class="token punctuation">.</span>ClusterId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>clusterIns<span class="token punctuation">)</span><span class="token punctuation">.</span>Error<span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token comment">// 为用户创建集群凭据</span><span class="token keyword">if</span> err <span class="token operator">=</span> k8sClusterService<span class="token punctuation">.</span><span class="token function">CreateCredential</span><span class="token punctuation">(</span>role<span class="token punctuation">.</span>ClusterId<span class="token punctuation">,</span> user<span class="token punctuation">.</span>ID<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"为用户创建集群凭据失败"</span> <span class="token operator">+</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 创建 Kubernetes 客户端实例</span>k <span class="token operator">:=</span> kubernetes<span class="token punctuation">.</span><span class="token function">NewKubernetes</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>clusterIns<span class="token punctuation">,</span> <span class="token operator">&amp;</span>cluster<span class="token punctuation">.</span>User<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment">// 查找用户在集群中的数据</span><span class="token keyword">var</span> userData cluster<span class="token punctuation">.</span>User<span class="token keyword">if</span> err <span class="token operator">=</span> global<span class="token punctuation">.</span>DY_DB<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">"cluster_id = ? and uuid = ?"</span><span class="token punctuation">,</span> role<span class="token punctuation">.</span>ClusterId<span class="token punctuation">,</span> user<span class="token punctuation">.</span>UUID<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>userData<span class="token punctuation">)</span><span class="token punctuation">.</span>Error<span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token comment">// 如果角色包含 ClusterRoles，则进行相应处理</span><span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>role<span class="token punctuation">.</span>ClusterRoles<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span> <span class="token punctuation">&#123;</span><span class="token comment">// 将 ClusterRoles 转换为 JSON 字符串</span>clusterRolesString<span class="token punctuation">,</span> err <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Marshal</span><span class="token punctuation">(</span>role<span class="token punctuation">.</span>ClusterRoles<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token comment">// 启动一个新的 goroutine 处理 ClusterRoleBinding 的创建和更新</span><span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span>id <span class="token builtin">uint</span><span class="token punctuation">,</span> clusterRolesString <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 创建或更新 ClusterRoleBinding</span><span class="token keyword">for</span> r <span class="token operator">:=</span> <span class="token keyword">range</span> role<span class="token punctuation">.</span>ClusterRoles <span class="token punctuation">&#123;</span><span class="token keyword">if</span> err <span class="token operator">=</span> k<span class="token punctuation">.</span><span class="token function">CreateOrUpdateClusterRoleBinding</span><span class="token punctuation">(</span>role<span class="token punctuation">.</span>ClusterRoles<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">,</span> user<span class="token punctuation">.</span>Username<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>global<span class="token punctuation">.</span>DY_LOG<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">"CreateOrUpdateClusterRoleBinding failed:"</span> <span class="token operator">+</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 更新集群授权</span><span class="token keyword">if</span> err <span class="token operator">=</span> global<span class="token punctuation">.</span>DY_DB<span class="token punctuation">.</span><span class="token function">Model</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>cluster<span class="token punctuation">.</span>User<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">"id = ?"</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span><span class="token string">"cluster_roles"</span><span class="token punctuation">,</span> clusterRolesString<span class="token punctuation">)</span><span class="token punctuation">.</span>Error<span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>global<span class="token punctuation">.</span>DY_LOG<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">"CreateOrUpdateClusterRoleBinding Cluster Role failed:"</span> <span class="token operator">+</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span>userData<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>clusterRolesString<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 如果角色包含 NamespaceRoles，则进行相应处理</span><span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>role<span class="token punctuation">.</span>NamespaceRoles<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span> <span class="token punctuation">&#123;</span><span class="token comment">// 将 NamespaceRoles 转换为 JSON 字符串</span>namespaceRolesString<span class="token punctuation">,</span> err <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Marshal</span><span class="token punctuation">(</span>role<span class="token punctuation">.</span>NamespaceRoles<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token comment">// 启动一个新的 goroutine 处理 Rolebinding 的创建和更新</span><span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span>id <span class="token builtin">uint</span><span class="token punctuation">,</span> namespaceRolesString <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 创建或更新 Rolebinding</span><span class="token keyword">for</span> r <span class="token operator">:=</span> <span class="token keyword">range</span> role<span class="token punctuation">.</span>NamespaceRoles <span class="token punctuation">&#123;</span><span class="token keyword">for</span> j <span class="token operator">:=</span> <span class="token keyword">range</span> role<span class="token punctuation">.</span>NamespaceRoles<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">.</span>Roles <span class="token punctuation">&#123;</span><span class="token keyword">if</span> err <span class="token operator">:=</span> k<span class="token punctuation">.</span><span class="token function">CreateOrUpdateRolebinding</span><span class="token punctuation">(</span>role<span class="token punctuation">.</span>NamespaceRoles<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span> role<span class="token punctuation">.</span>NamespaceRoles<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">.</span>Roles<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> user<span class="token punctuation">.</span>Username<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>global<span class="token punctuation">.</span>DY_LOG<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">"CreateOrUpdateRolebinding Namespace role failed:"</span> <span class="token operator">+</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 更新命名空间授权</span><span class="token keyword">if</span> err <span class="token operator">=</span> global<span class="token punctuation">.</span>DY_DB<span class="token punctuation">.</span><span class="token function">Model</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>cluster<span class="token punctuation">.</span>User<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">"id = ?"</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span><span class="token string">"cluster_roles"</span><span class="token punctuation">,</span> namespaceRolesString<span class="token punctuation">)</span><span class="token punctuation">.</span>Error<span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>global<span class="token punctuation">.</span>DY_LOG<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">"CreateOrUpdateClusterRoleBinding Cluster Role failed:"</span> <span class="token operator">+</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span>userData<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>namespaceRolesString<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>创建或更新k8s clusterRoleBinding</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// CreateOrUpdateClusterRoleBinding</span><span class="token comment">//</span><span class="token comment">//@Description: 创建或更新k8s ClusterRoleBinding</span><span class="token comment">//@receiver k</span><span class="token comment">//@param clusterRoleName</span><span class="token comment">//@param username  用户名</span><span class="token comment">//@param builtIn 是否内置</span><span class="token comment">//@return error</span><span class="token keyword">func</span> <span class="token punctuation">(</span>k <span class="token operator">*</span>Kubernetes<span class="token punctuation">)</span> <span class="token function">CreateOrUpdateClusterRoleBinding</span><span class="token punctuation">(</span>clusterRoleName <span class="token builtin">string</span><span class="token punctuation">,</span> username <span class="token builtin">string</span><span class="token punctuation">,</span> builtIn <span class="token builtin">bool</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span>client<span class="token punctuation">,</span> err <span class="token operator">:=</span> k<span class="token punctuation">.</span><span class="token function">Client</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token comment">// 生成 ClusterRoleBinding 的名称</span>name <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"%s:%s:%s"</span><span class="token punctuation">,</span> username<span class="token punctuation">,</span> clusterRoleName<span class="token punctuation">,</span> k<span class="token punctuation">.</span>K8sCluster<span class="token punctuation">.</span>UUID<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>labels <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">&#123;</span>LabelManageKey<span class="token punctuation">:</span> <span class="token string">"devops"</span><span class="token punctuation">,</span>LabelClusterId<span class="token punctuation">:</span> k<span class="token punctuation">.</span>K8sCluster<span class="token punctuation">.</span>UUID<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>LabelUsername<span class="token punctuation">:</span>  username<span class="token punctuation">,</span><span class="token punctuation">&#125;</span>annotations <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">&#123;</span><span class="token string">"built-in"</span><span class="token punctuation">:</span>   strconv<span class="token punctuation">.</span><span class="token function">FormatBool</span><span class="token punctuation">(</span>builtIn<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"created-at"</span><span class="token punctuation">:</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">"2006-01-02 15:04:05"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token comment">// 创建 ClusterRoleBinding 对象</span>item <span class="token operator">:=</span> rbacV1<span class="token punctuation">.</span>ClusterRoleBinding<span class="token punctuation">&#123;</span>ObjectMeta<span class="token punctuation">:</span> metav1<span class="token punctuation">.</span>ObjectMeta<span class="token punctuation">&#123;</span>Name<span class="token punctuation">:</span>        name<span class="token punctuation">,</span>Labels<span class="token punctuation">:</span>      labels<span class="token punctuation">,</span>Annotations<span class="token punctuation">:</span> annotations<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>Subjects<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>rbacV1<span class="token punctuation">.</span>Subject<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>Kind<span class="token punctuation">:</span> <span class="token string">"User"</span><span class="token punctuation">,</span>Name<span class="token punctuation">:</span> username<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>RoleRef<span class="token punctuation">:</span> rbacV1<span class="token punctuation">.</span>RoleRef<span class="token punctuation">&#123;</span>Kind<span class="token punctuation">:</span> <span class="token string">"ClusterRole"</span><span class="token punctuation">,</span>Name<span class="token punctuation">:</span> clusterRoleName<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token comment">// 获取现有的 ClusterRoleBinding</span>baseItem<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">RbacV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClusterRoleBindings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">TODO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>GetOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token operator">!</span>strings<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"not found"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> baseItem <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token operator">&amp;&amp;</span> baseItem<span class="token punctuation">.</span>Name <span class="token operator">!=</span> <span class="token string">""</span> <span class="token punctuation">&#123;</span><span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">RbacV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClusterRoleBindings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">TODO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>item<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>CreateOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">RbacV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClusterRoleBindings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">TODO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>item<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>UpdateOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>创建或更新k8s RoleBinding</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// CreateOrUpdateRolebinding</span><span class="token comment">//</span><span class="token comment">//@Description: 创建或更新k8s RoleBinding</span><span class="token comment">//@receiver k</span><span class="token comment">//@param namespace</span><span class="token comment">//@param clusterRoleName</span><span class="token comment">//@param username</span><span class="token comment">//@param builtIn</span><span class="token comment">//@return error</span><span class="token keyword">func</span> <span class="token punctuation">(</span>k <span class="token operator">*</span>Kubernetes<span class="token punctuation">)</span> <span class="token function">CreateOrUpdateRolebinding</span><span class="token punctuation">(</span>namespace <span class="token builtin">string</span><span class="token punctuation">,</span> clusterRoleName <span class="token builtin">string</span><span class="token punctuation">,</span> username <span class="token builtin">string</span><span class="token punctuation">,</span> builtIn <span class="token builtin">bool</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span>client<span class="token punctuation">,</span> err <span class="token operator">:=</span> k<span class="token punctuation">.</span><span class="token function">Client</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token comment">// 设置标签</span>labels <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">&#123;</span>LabelManageKey<span class="token punctuation">:</span> <span class="token string">"devops"</span><span class="token punctuation">,</span>LabelClusterId<span class="token punctuation">:</span> k<span class="token punctuation">.</span>K8sCluster<span class="token punctuation">.</span>UUID<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>LabelUsername<span class="token punctuation">:</span>  username<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token comment">// 设置注解</span>annotations <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">&#123;</span><span class="token string">"built-in"</span><span class="token punctuation">:</span>   strconv<span class="token punctuation">.</span><span class="token function">FormatBool</span><span class="token punctuation">(</span>builtIn<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"created-at"</span><span class="token punctuation">:</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">"2006-01-02 15:04:05"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token comment">// 生成RoleBinding的名称</span>name <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"%s:%s:%s:%s"</span><span class="token punctuation">,</span> namespace<span class="token punctuation">,</span> username<span class="token punctuation">,</span> clusterRoleName<span class="token punctuation">,</span> k<span class="token punctuation">.</span>K8sCluster<span class="token punctuation">.</span>UUID<span class="token punctuation">)</span><span class="token comment">// 创建RoleBinding对象</span>item <span class="token operator">:=</span> rbacV1<span class="token punctuation">.</span>RoleBinding<span class="token punctuation">&#123;</span>ObjectMeta<span class="token punctuation">:</span> metav1<span class="token punctuation">.</span>ObjectMeta<span class="token punctuation">&#123;</span>Name<span class="token punctuation">:</span>        name<span class="token punctuation">,</span>Labels<span class="token punctuation">:</span>      labels<span class="token punctuation">,</span>Annotations<span class="token punctuation">:</span> annotations<span class="token punctuation">,</span>Namespace<span class="token punctuation">:</span>   namespace<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>Subjects<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>rbacV1<span class="token punctuation">.</span>Subject<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>Kind<span class="token punctuation">:</span> <span class="token string">"User"</span><span class="token punctuation">,</span>Name<span class="token punctuation">:</span> username<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>RoleRef<span class="token punctuation">:</span> rbacV1<span class="token punctuation">.</span>RoleRef<span class="token punctuation">&#123;</span>Kind<span class="token punctuation">:</span> <span class="token string">"ClusterRole"</span><span class="token punctuation">,</span>Name<span class="token punctuation">:</span> clusterRoleName<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token comment">// 获取现有的 RoleBinding</span>baseItem<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">RbacV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">RoleBindings</span><span class="token punctuation">(</span>namespace<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">TODO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>GetOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token operator">!</span>strings<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"not found"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 如果 RoleBinding 不存在，则创建新的 RoleBinding</span><span class="token keyword">if</span> baseItem <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token operator">&amp;&amp;</span> baseItem<span class="token punctuation">.</span>Name <span class="token operator">!=</span> <span class="token string">""</span> <span class="token punctuation">&#123;</span><span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">RbacV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">RoleBindings</span><span class="token punctuation">(</span>namespace<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">TODO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>item<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>CreateOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token comment">// 如果 RoleBinding 存在，则更新现有的 RoleBinding</span><span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">RbacV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">RoleBindings</span><span class="token punctuation">(</span>namespace<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">TODO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>item<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>UpdateOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样就可以根据平台用户名添加集群用户，指定集群用户的集群权限、命名空间权限了</p><p><img src="/images/client5.png" alt="image"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;调用k8s-api实现添加用户并授权&quot;&gt;&lt;a href=&quot;#调用k8s-api实现添加用户并授权&quot; class=&quot;headerlink&quot; title=&quot;调用k8s api实现添加用户并授权&quot;&gt;&lt;/a&gt;调用k8s api实现添加用户并授权&lt;/h1&gt;&lt;h3 id=&quot;一</summary>
      
    
    
    
    <category term="kubernetes" scheme="http://dycloud.fun/categories/kubernetes/"/>
    
    
    <category term="kubernetes" scheme="http://dycloud.fun/tags/kubernetes/"/>
    
    <category term="云原生" scheme="http://dycloud.fun/tags/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
  </entry>
  
  <entry>
    <title>prometheus operator</title>
    <link href="http://dycloud.fun/2024/05/26/prometheus%20operator/"/>
    <id>http://dycloud.fun/2024/05/26/prometheus%20operator/</id>
    <published>2024-05-26T07:51:23.000Z</published>
    <updated>2024-07-15T06:21:39.803Z</updated>
    
    <content type="html"><![CDATA[<h1 id="prometheus-operator"><a href="#prometheus-operator" class="headerlink" title="prometheus operator"></a>prometheus operator</h1><p>此文包含prometheus-operator部署安装，收集相关指标、数据持久化、使用prometheusalert+alertmanager实现飞书、钉钉、邮箱等告警。</p><h3 id="一、Prometheus介绍"><a href="#一、Prometheus介绍" class="headerlink" title="一、Prometheus介绍"></a>一、Prometheus介绍</h3><p>Prometheus 开源的系统监控和报警框架，本身也是一个时序数据库（TSDB）</p><h5 id="1-1-prometheus特性"><a href="#1-1-prometheus特性" class="headerlink" title="1.1 prometheus特性"></a>1.1 prometheus特性</h5><ul><li>一个多维的数据模型，具有由指标名称和键值对标识的时序序列数据</li><li>使用<code>PromQL</code>查询和聚合数据，可以非常灵活的对数据进行检索</li><li>不依赖额外的数据存储，<code>Prometheus</code>本身就是一个时序数据库，提供本地存储和分布式存储，并且每个<code>Prometheus</code>都是自治的</li><li>应用程序暴露<code>Metrics</code>接口，<code>Prometheus</code>通过基于HTTP的Pull模型采集数据，同时可以使用<code>PushGateway</code>进行Push数据</li><li><code>Prometheus</code>同时支持动态服务发现和静态配置发现目标机器</li><li>支持多种图形化和仪表盘，和Grafan绝配</li></ul><h5 id="1-2-prometheus架构"><a href="#1-2-prometheus架构" class="headerlink" title="1.2 prometheus架构"></a>1.2 prometheus架构</h5><ol><li>Prometheus Server</li></ol><p>核心组件，主要负责一下功能：</p><ul><li>数据抓取(<code>Scraping</code>)：<code>Prometheus</code>通过HTTP定期从配置的目标（如应用程序、服务器、数据库等）抓取指标数据。这些目标称为”<code>Exporters</code>“，他们暴露出<code>Prometheus</code>格式的指标</li><li>数据存储(<code>Storage</code>)：抓取到的指标数据被存储在本地磁盘上的时间序列数据库中。<code>Prometheus</code>使用了一种高效的存储格式，称为”<code>TSDB(Time Series Database)</code>“，他能够高效的处理大量时间序列数据。</li><li>查询(<code>Querying</code>)：<code>Prometheus</code>提供了一个强大的查询语句，称为<code>PromQL(Prometheus Query Language)</code>，允许用户实时查询和分析存储的时间序列数据。</li></ul><ol start="2"><li><code>Exporters</code>：主要用来采集监控数据，比如主机的监控数据可以通过 node_exporter采集，MySQL 的监控数据可以通过mysql_exporter 采集，之后 Exporter 暴露一个接口，比如&#x2F;metrics，Prometheus 可以通过该接口采集到数据</li></ol><ul><li><code>Node Exporter</code>：用于收集主机级别的指标，如CPU、内存、磁盘等。</li><li><code>Blackbox Exporter</code>：用于探测网络服务的可用性，如HTTP、HTTPS、DNS等</li><li><code>Mysql Exporter</code>：用于收集Mysql数据库的指标</li><li>Redis、Mongo….</li></ul><p><a href="https://prometheus.io/docs/instrumenting/exporters/">https://prometheus.io/docs/instrumenting/exporters/</a></p><ol start="3"><li><code>Pushgateway</code>：可选组件，用于接受短暂任务（如批量处理作业）推送的指标。由于这些任务的生命周期可能很短，无法被<code>Prometheus</code>直接抓取，所以可以将指标推送到<code>Pushgateway</code>，然后由<code>Prometheus</code>定期从<code>Pushgateway</code>抓取。</li><li><code>Alertmanager</code>：独立组件，负责处理Prometheus发送的报警，支持以下功能：</li></ol><ul><li>分组（<code>Grouping</code>）：将相似的告警分组，减少通知的数量。</li><li>抑制（<code>Inhibition</code>）：将某些告警已经触发时，抑制其他告警的通知。</li><li>静默（<code>Silencing</code>）：在特定的时间段内静默某些告警的通知。</li><li>通知（<code>Notification</code>）：通过各种渠道（邮箱、微信、飞书等）发送告警通知。</li></ul><ol start="5"><li>WebUI：Prometheus 提供了一个简单的 Web UI，用于执行查询和查看指标数据。此外，Prometheus 还可以与 Grafana 等第三方可视化工具集成，以提供更强大的可视化和仪表板功能。</li><li><code>Service Discovery</code>：Prometheus 支持多种服务发现机制，以便自动发现需要监控的目标。常见的服务发现机制包括：</li></ol><ul><li><p><strong>静态配置</strong>：在 Prometheus 配置文件中手动指定目标。</p></li><li><p><strong>DNS 服务发现</strong>：通过 DNS 记录自动发现目标。</p></li><li><p>文件：通过配置文件发现</p></li><li><p>consul自动发现</p></li><li><p><strong>Kubernetes 服务发现</strong>：通过 Kubernetes API 自动发现 Pod 和 Service。</p></li></ul><p>下面是他的架构图</p><p><img src="/images/prometheus1.png" alt="image"></p><h3 id="二、在k8s上部署prometheus"><a href="#二、在k8s上部署prometheus" class="headerlink" title="二、在k8s上部署prometheus"></a>二、在k8s上部署prometheus</h3><p><code>Prometheus Operator</code>基于k8s自定义资源定义(CRD)来编排<code>Prometheus</code>、<code>AlertManager</code>和其他监控资源，目前支持的CRD如下：</p><ul><li><code>Prometheus</code>：定义如何部署Prometheus</li><li><code>AlertManager</code>：定义如何部署Alertmanager</li><li><code>ServiceMonitor</code>：指定如何通过service实现服务发现</li></ul><p><code>./nodeExporter-serviceMonitor.yaml</code></p><ul><li><code>PodMonitor</code>：以声明方式指定如何监控kubernetes pod组</li><li><code>Probe</code>：指定静态探针配置</li></ul><p><code>./setup/0alertmanagerCustomResourceDefinition.yaml</code></p><ul><li><code>ScrapeConfig</code>：指定要添加到Prometheus的抓取配置，此CRD有助于抓取kubernetes集群外部的资源</li><li><code>PrometheusRule</code>：定义Prometheus报警规则</li></ul><p><code>./nodeExporter-prometheusRule.yaml</code></p><ul><li><code>AlertmanagerConfig</code>：指定Alertmanager配置，允许将告警路由到自定义接收器并设置禁止规则</li></ul><p><code>./alertmanager-prometheusRule.yaml</code> </p><h5 id="2-1-安装"><a href="#2-1-安装" class="headerlink" title="2.1 安装"></a>2.1 安装</h5><p>kube-prometheus项目地址：<a href="https://github.com/prometheus-operator/kube-prometheus/">https://github.com/prometheus-operator/kube-prometheus/</a> </p><p>首先需要通过该项目地址，找到和自己 Kubernetes 版本对应的 Kube Prometheus Stack 的版本：</p><p><img src="/images/prometheus2.png" alt="image"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 prometheus<span class="token punctuation">]</span><span class="token comment"># git clone -b release-0.13 https://github.com/prometheus-operator/kubeprometheus.git</span><span class="token punctuation">[</span>root@k8s-master01 prometheus<span class="token punctuation">]</span><span class="token comment"># cd kube-prometheus-main/manifests/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>安装Prometheus Operator</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 manifests<span class="token punctuation">]</span><span class="token comment"># kubectl create -f setup/</span><span class="token punctuation">[</span>root@k8s-master01 manifests<span class="token punctuation">]</span><span class="token comment"># kubectl get pods -n monitoring </span>NAME                                   READY   STATUS    RESTARTS   AGEprometheus-operator-74cb44ccf7-t8m25   <span class="token number">2</span>/2     Running   <span class="token number">0</span>          25h<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>Operator容器启动后，安装prometheus stack，这里需要修改相关镜像为本地镜像，否则拉取不到</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 manifests<span class="token punctuation">]</span><span class="token comment">#  kubectl create -f .</span><span class="token punctuation">[</span>root@k8s-master01 manifests<span class="token punctuation">]</span><span class="token comment"># kubectl get pods -n monitoring </span>NAME                                   READY   STATUS    RESTARTS   AGEalertmanager-main-0                    <span class="token number">2</span>/2     Running   <span class="token number">0</span>          25halertmanager-main-1                    <span class="token number">2</span>/2     Running   <span class="token number">0</span>          25halertmanager-main-2                    <span class="token number">2</span>/2     Running   <span class="token number">0</span>          25hblackbox-exporter-597d86cf5c-xd2m7     <span class="token number">3</span>/3     Running   <span class="token number">0</span>          25hgrafana-674557f4bd-sgnbb               <span class="token number">1</span>/1     Running   <span class="token number">0</span>          24hkube-state-metrics-56f84757db-nn66j    <span class="token number">3</span>/3     Running   <span class="token number">0</span>          24hmysql-exporter-65bdf76bb9-klq8f        <span class="token number">1</span>/1     Running   <span class="token number">0</span>          16hnode-exporter-4qbgp                    <span class="token number">2</span>/2     Running   <span class="token number">0</span>          25hnode-exporter-bwqcs                    <span class="token number">2</span>/2     Running   <span class="token number">0</span>          25hnode-exporter-bz9pk                    <span class="token number">2</span>/2     Running   <span class="token number">0</span>          25hnode-exporter-cdzm4                    <span class="token number">2</span>/2     Running   <span class="token number">0</span>          25hnode-exporter-ds4zd                    <span class="token number">2</span>/2     Running   <span class="token number">0</span>          25hnode-exporter-j6kb8                    <span class="token number">2</span>/2     Running   <span class="token number">0</span>          25hnode-exporter-vgdjw                    <span class="token number">2</span>/2     Running   <span class="token number">0</span>          25hnode-exporter-zcfb6                    <span class="token number">2</span>/2     Running   <span class="token number">0</span>          25hnode-exporter-zjjb9                    <span class="token number">2</span>/2     Running   <span class="token number">0</span>          25hprometheus-adapter-7786cd46-6cfhd      <span class="token number">1</span>/1     Running   <span class="token number">0</span>          25hprometheus-adapter-7786cd46-qwrmb      <span class="token number">1</span>/1     Running   <span class="token number">0</span>          25hprometheus-k8s-0                       <span class="token number">2</span>/2     Running   <span class="token number">0</span>          19hprometheus-k8s-1                       <span class="token number">2</span>/2     Running   <span class="token number">0</span>          19hprometheus-operator-74cb44ccf7-t8m25   <span class="token number">2</span>/2     Running   <span class="token number">0</span>          25h<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改grafana和prometheus service为NodePort类型</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 manifests<span class="token punctuation">]</span><span class="token comment"># kubectl get svc -n monitoring </span>NAME                    TYPE        CLUSTER-IP      EXTERNAL-IP   PORT<span class="token punctuation">(</span>S<span class="token punctuation">)</span>                         AGEalertmanager-main       ClusterIP   <span class="token number">10.96</span>.41.127    <span class="token operator">&lt;</span>none<span class="token operator">></span>        <span class="token number">9093</span>/TCP,8080/TCP               25halertmanager-operated   ClusterIP   None            <span class="token operator">&lt;</span>none<span class="token operator">></span>        <span class="token number">9093</span>/TCP,9094/TCP,9094/UDP      25hblackbox-exporter       ClusterIP   <span class="token number">10.96</span>.145.255   <span class="token operator">&lt;</span>none<span class="token operator">></span>        <span class="token number">9115</span>/TCP,19115/TCP              25hgrafana                 NodePort    <span class="token number">10.96</span>.20.246    <span class="token operator">&lt;</span>none<span class="token operator">></span>        <span class="token number">3000</span>:30336/TCP                  25hkube-state-metrics      ClusterIP   None            <span class="token operator">&lt;</span>none<span class="token operator">></span>        <span class="token number">8443</span>/TCP,9443/TCP               25hmysql-exporter          ClusterIP   <span class="token number">10.96</span>.74.237    <span class="token operator">&lt;</span>none<span class="token operator">></span>        <span class="token number">9104</span>/TCP                        17hnode-exporter           ClusterIP   None            <span class="token operator">&lt;</span>none<span class="token operator">></span>        <span class="token number">9100</span>/TCP                        25hprometheus-adapter      ClusterIP   <span class="token number">10.96</span>.122.86    <span class="token operator">&lt;</span>none<span class="token operator">></span>        <span class="token number">443</span>/TCP                         25hprometheus-k8s          NodePort    <span class="token number">10.96</span>.206.87    <span class="token operator">&lt;</span>none<span class="token operator">></span>        <span class="token number">9090</span>:32159/TCP,8080:32744/TCP   25hprometheus-operated     ClusterIP   None            <span class="token operator">&lt;</span>none<span class="token operator">></span>        <span class="token number">9090</span>/TCP                        25hprometheus-operator     ClusterIP   None            <span class="token operator">&lt;</span>none<span class="token operator">></span>        <span class="token number">8443</span>/TCP                        25h<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/images/prometheus3.png" alt="image"></p><h5 id="2-1续-数据持久化"><a href="#2-1续-数据持久化" class="headerlink" title="2.1续 数据持久化"></a>2.1续 数据持久化</h5><p>在 Kubernetes 集群中部署 Prometheus Operator 时，需要对某些组件进行持久化处理，以确保在 Pod 重启或迁移时数据不会丢失，我这里用的是root-ceph存储，部署及使用方法可以看这篇文章：<a href="http://dycloud.fun/2024/05/23/%E4%BD%BF%E7%94%A8rook-ceph%E9%83%A8%E7%BD%B2%E9%AB%98%E5%8F%AF%E7%94%A8ceph%E9%9B%86%E7%BE%A4/">搭建rook-ceph</a></p><ol><li>Prometheus<br>Prometheus 是一个时间序列数据库，用于存储监控数据。持久化 Prometheus 数据是非常关键的，因为这些数据用于历史查询、报警和分析。<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 manifests<span class="token punctuation">]</span><span class="token comment"># cat prometheus-prometheus.yaml</span><span class="token comment"># 添加以下内容</span>  storage:    ephemeral:      volumeClaimTemplate:        spec:          storageClassName: rook-ceph-block          accessModes: <span class="token punctuation">[</span><span class="token string">"ReadWriteOnce"</span><span class="token punctuation">]</span>          resources:            requests:              storage: 10Gi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>Alertmanager<br>Alertmanager 负责处理从 Prometheus 发送的警报，并将这些警报路由到适当的接收器（如电子邮件、Slack 等）。持久化 Alertmanager 数据可以保存告警历史和静默规则。<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 manifests<span class="token punctuation">]</span><span class="token comment"># cat alertmanager-alertmanager.yaml </span><span class="token comment"># 添加以下内容</span>  storage:    ephemeral:      volumeClaimTemplate:        spec:          storageClassName: rook-ceph-block          accessModes: <span class="token punctuation">[</span><span class="token string">"ReadWriteOnce"</span><span class="token punctuation">]</span>          resources:            requests:              storage: 10Gi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>Grafana<br>如果集成了 Grafana 用于数据展示，同样需要持久化 Grafana 的配置和仪表板数据。<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 manifests<span class="token punctuation">]</span><span class="token comment"># cat grafana-deployment.yaml </span><span class="token comment"># 修改以下内容</span>      volumes:      - name: grafana-storage        ephemeral:          volumeClaimTemplate:            spec:              accessModes: <span class="token punctuation">[</span><span class="token string">"ReadWriteOnce"</span><span class="token punctuation">]</span>              storageClassName: <span class="token string">"rook-ceph-block"</span>              resources:                requests:                  storage: 1Gi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h5 id="2-2-监控数据来源"><a href="#2-2-监控数据来源" class="headerlink" title="2.2 监控数据来源"></a>2.2 监控数据来源</h5><p>在k8s中prometheus的监控流程是：</p><p>创建<code>ServiceMonitor</code>注册监控目标，通过<code>selector</code>匹配<code>service</code>，然后<code>operator</code>就会自动发现<code>ServiceMonitor</code>，之后解析成prometheus配置</p><p><img src="/images/prometheus4.png" alt="image"></p><p>目前比较常用的Exporter 如下</p><table><thead><tr><th>类型</th><th>Exporter</th></tr></thead><tbody><tr><td>数据库</td><td>MySQL Exporter, Redis Exporter, MongoDB Exporter, MSSQL Exporter</td></tr><tr><td>硬件</td><td>Apcupsd Exporter，IoT Edison Exporter， IPMI Exporter, Node Exporter</td></tr><tr><td>消息队列</td><td>Beanstalkd Exporter, Kafka Exporter, NSQ Exporter, RabbitMQ Exporter</td></tr><tr><td>存储</td><td>Ceph Exporter, Gluster Exporter, HDFS Exporter, ScaleIO Exporter</td></tr><tr><td>HTTP服务</td><td>Apache Exporter, HAProxy Exporter, Nginx Exporter</td></tr><tr><td>API服务</td><td>AWS ECS Exporter， Docker Cloud Exporter, Docker Hub Exporter, GitHub Exporter</td></tr><tr><td>日志</td><td>Fluentd Exporter, Grok Exporter</td></tr><tr><td>监控系统</td><td>Collectd Exporter, Graphite Exporter, InfluxDB Exporter, Nagios Exporter, SNMP Exporter</td></tr><tr><td>其他</td><td>Blackbox Exporter, JIRA Exporter, Jenkins Exporter， Confluence Exporter</td></tr></tbody></table><h5 id="2-3-云原生应用Etcd监控"><a href="#2-3-云原生应用Etcd监控" class="headerlink" title="2.3 云原生应用Etcd监控"></a>2.3 云原生应用Etcd监控</h5><p>测试访问Etcd Metrics接口:</p><p>这里要指定自己的etcd证书还有地址，我这里是用kubeadm安装的k8s集群，有3个master，这里随便找的一台master测试的，</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 manifests<span class="token punctuation">]</span><span class="token comment"># curl -s  --cert /etc/kubernetes/pki/etcd/server.crt  --key /etc/kubernetes/pki/etcd/server.key  https://192.168.31.20:2379/metrics -l -k|tail -5</span><span class="token comment"># HELP promhttp_metric_handler_requests_total Total number of scrapes by HTTP status code.</span><span class="token comment"># TYPE promhttp_metric_handler_requests_total counter</span>promhttp_metric_handler_requests_total<span class="token punctuation">&#123;</span>code<span class="token operator">=</span><span class="token string">"200"</span><span class="token punctuation">&#125;</span> <span class="token number">4728</span>promhttp_metric_handler_requests_total<span class="token punctuation">&#123;</span>code<span class="token operator">=</span><span class="token string">"500"</span><span class="token punctuation">&#125;</span> <span class="token number">0</span>promhttp_metric_handler_requests_total<span class="token punctuation">&#123;</span>code<span class="token operator">=</span><span class="token string">"503"</span><span class="token punctuation">&#125;</span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>证书的位置可以在 Etcd 配置文件中获得（注意配置文件的位置，不同的集群位置可能不同，Kubeadm 安装方式可能会在<code>/etc/kubernetes/manifests/etcd.yml </code>中，二进制可能在<code>/usr/lib/systemd/system/etcd.service</code>中）：</p><p><img src="/images/prometheus5.png" alt="image"></p><p>####### 2.3.1 Etcd Service 创建<br>首先要配置etcd的service和endpoint</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 prometheus<span class="token punctuation">]</span><span class="token comment"># vim etcd-svc.yaml </span>apiVersion: v1kind: Endpointsmetadata:  labels:    app: etcd-prom  name: etcd-prom  namespace: kube-systemsubsets:- addresses:  - ip: <span class="token number">192.168</span>.31.20     - ip: <span class="token number">192.168</span>.31.21  - ip: <span class="token number">192.168</span>.31.22  ports:  - name: https-metrics    port: <span class="token number">2379</span>    protocol: TCP---apiVersion: v1kind: Servicemetadata:  labels:    app: etcd-prom  name: etcd-prom  namespace: kube-systemspec:  ports:  - name: https-metrics    port: <span class="token number">2379</span>    protocol: TCP    targetPort: <span class="token number">2379</span>  type: ClusterIP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>需要修改<code>addresses</code>为自己<code>etcd</code>的集群，另外需要注意port的名称为<code>https-metrics</code>，需要和后面创建的<code>ServiceMonitor</code>中的保持一直。之后创建该资源并查看<code>service</code> 的<code>clusterIP</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 prometheus<span class="token punctuation">]</span><span class="token comment"># kubectl get svc -n kube-system etcd-prom </span>NAME        TYPE        CLUSTER-IP     EXTERNAL-IP   PORT<span class="token punctuation">(</span>S<span class="token punctuation">)</span>    AGEetcd-prom   ClusterIP   <span class="token number">10.96</span>.94.176   <span class="token operator">&lt;</span>none<span class="token operator">></span>        <span class="token number">2379</span>/TCP   20h<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>通过ClusterIP测试，可以看到通过<code>service</code> 的<code>Clusterip</code> 可以访问到etcd指标</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 prometheus<span class="token punctuation">]</span><span class="token comment"># curl -s  --cert /etc/kubernetes/pki/etcd/server.crt  --key /etc/kubernetes/pki/etcd/server.key  https://10.96.94.176:2379/metrics -l -k|tail -5</span><span class="token comment"># HELP promhttp_metric_handler_requests_total Total number of scrapes by HTTP status code.</span><span class="token comment"># TYPE promhttp_metric_handler_requests_total counter</span>promhttp_metric_handler_requests_total<span class="token punctuation">&#123;</span>code<span class="token operator">=</span><span class="token string">"200"</span><span class="token punctuation">&#125;</span> <span class="token number">4760</span>promhttp_metric_handler_requests_total<span class="token punctuation">&#123;</span>code<span class="token operator">=</span><span class="token string">"500"</span><span class="token punctuation">&#125;</span> <span class="token number">0</span>promhttp_metric_handler_requests_total<span class="token punctuation">&#123;</span>code<span class="token operator">=</span><span class="token string">"503"</span><span class="token punctuation">&#125;</span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>因为etcd是需要通过<code>https</code>访问，所以需要把etcd证书文件挂载到<code>prometheus</code>容器（我这里是通过<code>operator</code>部署的，所以只需要修改<code>Promehteus</code>资源即可）</p><p>创建Etcd证书的<code>Secret</code>（证书路径根据实际环境进行更改）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 manifests<span class="token punctuation">]</span><span class="token comment"># kubectl create secret generic  etcd-ssl --from-file=/etc/kubernetes/pki/etcd/ca.crt  --from-file=/etc/kubernetes/pki/etcd/server.crt  --from-file=/etc/kubernetes/pki/etcd/server.key  -n monitoring </span><span class="token punctuation">[</span>root@k8s-master01 manifests<span class="token punctuation">]</span><span class="token comment"># kubectl get secret -n monitoring </span>NAME                             TYPE     DATA   AGEetcd-ssl                         Opaque   <span class="token number">3</span>      20h<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>挂载secret，</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 manifests<span class="token punctuation">]</span><span class="token comment"># kubectl edit  prometheus -n monitoring  k8s </span><span class="token punctuation">..</span>.  secrets:  - etcd-ssl<span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/images/prometheus6.png" alt="image"></p><p>保存退出后，Prometheus 的 Pod 会自动重启，重启完成后，查看证书是否挂载（任意一个Prometheus 的 Pod 均可）：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 manifests<span class="token punctuation">]</span><span class="token comment"># kubectl get pods -n monitoring </span>NAME                                   READY   STATUS    RESTARTS   AGEalertmanager-main-0                    <span class="token number">2</span>/2     Running   <span class="token number">0</span>          25halertmanager-main-1                    <span class="token number">2</span>/2     Running   <span class="token number">0</span>          25halertmanager-main-2                    <span class="token number">2</span>/2     Running   <span class="token number">0</span>          25hblackbox-exporter-597d86cf5c-xd2m7     <span class="token number">3</span>/3     Running   <span class="token number">0</span>          25hgrafana-674557f4bd-sgnbb               <span class="token number">1</span>/1     Running   <span class="token number">0</span>          25hkube-state-metrics-56f84757db-nn66j    <span class="token number">3</span>/3     Running   <span class="token number">0</span>          24hmysql-exporter-65bdf76bb9-klq8f        <span class="token number">1</span>/1     Running   <span class="token number">0</span>          17hnode-exporter-4qbgp                    <span class="token number">2</span>/2     Running   <span class="token number">0</span>          25hnode-exporter-bwqcs                    <span class="token number">2</span>/2     Running   <span class="token number">0</span>          25hnode-exporter-bz9pk                    <span class="token number">2</span>/2     Running   <span class="token number">0</span>          25hnode-exporter-cdzm4                    <span class="token number">2</span>/2     Running   <span class="token number">0</span>          25hnode-exporter-ds4zd                    <span class="token number">2</span>/2     Running   <span class="token number">0</span>          25hnode-exporter-j6kb8                    <span class="token number">2</span>/2     Running   <span class="token number">0</span>          25hnode-exporter-vgdjw                    <span class="token number">2</span>/2     Running   <span class="token number">0</span>          25hnode-exporter-zcfb6                    <span class="token number">2</span>/2     Running   <span class="token number">0</span>          25hnode-exporter-zjjb9                    <span class="token number">2</span>/2     Running   <span class="token number">0</span>          25hprometheus-adapter-7786cd46-6cfhd      <span class="token number">1</span>/1     Running   <span class="token number">0</span>          25hprometheus-adapter-7786cd46-qwrmb      <span class="token number">1</span>/1     Running   <span class="token number">0</span>          25hprometheus-k8s-0                       <span class="token number">2</span>/2     Running   <span class="token number">0</span>          20hprometheus-k8s-1                       <span class="token number">2</span>/2     Running   <span class="token number">0</span>          20hprometheus-operator-74cb44ccf7-t8m25   <span class="token number">2</span>/2     Running   <span class="token number">0</span>          25h<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以通过describe 查看具体prometheus目录，是在<code>/etc/prometheus/</code> 下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 manifests<span class="token punctuation">]</span><span class="token comment"># kubectl describe pods -n monitoring  prometheus-k8s-0 </span><span class="token punctuation">..</span>.    Args:      --watch-interval<span class="token operator">=</span><span class="token number">0</span>      --listen-address<span class="token operator">=</span>:8081      --config-file<span class="token operator">=</span>/etc/prometheus/config/prometheus.yaml.gz      --config-envsubst-file<span class="token operator">=</span>/etc/prometheus/config_out/prometheus.env.yaml      --watched-dir<span class="token operator">=</span>/etc/prometheus/rules/prometheus-k8s-rulefiles-0<span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>所以进到prometheus容器查看，已经成功挂载了</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 manifests<span class="token punctuation">]</span><span class="token comment"># kubectl exec -it prometheus-k8s-0 -n monitoring  sh </span>kubectl <span class="token builtin class-name">exec</span> <span class="token punctuation">[</span>POD<span class="token punctuation">]</span> <span class="token punctuation">[</span>COMMAND<span class="token punctuation">]</span> is DEPRECATED and will be removed <span class="token keyword">in</span> a future version. Use kubectl <span class="token builtin class-name">exec</span> <span class="token punctuation">[</span>POD<span class="token punctuation">]</span> -- <span class="token punctuation">[</span>COMMAND<span class="token punctuation">]</span> instead./prometheus $ /prometheus $ <span class="token function">ls</span> /etc/prometheus/certs              config_out         console_libraries  consoles           prometheus.yml     rules              secrets            web_config/prometheus $ <span class="token function">ls</span> /etc/prometheus/secrets/etcd-ssl/prometheus $ <span class="token function">ls</span> /etc/prometheus/secrets/etcd-ssl/ca.crt      server.crt  server.key<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>####### 2.3.2 Etcd ServiceMonitor 创建<br>之后创建Etcd的<code>ServiceMonitor</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 prometheus<span class="token punctuation">]</span><span class="token comment"># cat etcd-servicemonitors.yaml </span>apiVersion: monitoring.coreos.com/v1kind: ServiceMonitormetadata: name: etcd namespace: monitoring labels:   app: etcdspec: jobLabel: k8s-app endpoints:   - interval: 30s     port: https-metrics <span class="token comment"># 这个 port 对应 Service.spec.ports.name</span>     scheme: https     tlsConfig:       caFile: /etc/prometheus/secrets/etcd-ssl/ca.crt <span class="token comment"># 证书路径</span>       certFile: /etc/prometheus/secrets/etcd-ssl/server.crt       keyFile: /etc/prometheus/secrets/etcd-ssl/server.key       insecureSkipVerify: <span class="token boolean">true</span> <span class="token comment"># 关闭证书校验</span> selector:   matchLabels:     app: etcd-prom <span class="token comment"># 跟 svc 的 lables 保持一致</span> namespaceSelector:   matchNames:    - kube-system<span class="token punctuation">[</span>root@k8s-master01 prometheus<span class="token punctuation">]</span><span class="token comment"># kubectl create -f etcd-servicemonitors.yaml </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>创建完成后，在prometheus的ui界面可以看到相关配置。</p><p><img src="/images/prometheus7.png" alt="image"></p><p>grafana配置就略过了，直接找到合适的模板然后指定数据源就可以展示了</p><p>grafana模板：<a href="https://grafana.com/grafana/dashboards/?dataSource=prometheus&search=schedu">https://grafana.com/grafana/dashboards/?dataSource=prometheus&search=schedu</a></p><h5 id="2-4-非云原生应用Etcd监控"><a href="#2-4-非云原生应用Etcd监控" class="headerlink" title="2.4 非云原生应用Etcd监控"></a>2.4 非云原生应用Etcd监控</h5><p>我这里以mysql为例，大体流程分为k8s集群内和集群外两种方式：</p><ul><li>如果mysql部署在k8s集群内，需要创建mysql 的<code>service</code>，然后创建mysql的<code>exporter</code>，在exporter中指定mysql的信息，然后再创建<code>servicemonitor</code>指定<code>selector</code>为<code>exporter</code>相同，这样prometheus就可以自动发现<code>serviceMonitor</code>了</li><li>如果mysql部署在k8s集群外，则创建mysql的<code>exporter</code>，在exporter中指定mysql的信息，然后再创建<code>servicemonitor</code>指定selector为<code>exporter</code>相同指定集群外部的mysql地址即可。</li></ul><p>我这里演示只以集群外</p><h6 id="2-4-1-部署-mysql-exporter"><a href="#2-4-1-部署-mysql-exporter" class="headerlink" title="2.4.1 部署 mysql exporter"></a>2.4.1 部署 mysql exporter</h6><p>我这里使用prometheus官方的最新版exporter部署</p><p><a href="https://github.com/prometheus/mysqld_exporter">https://github.com/prometheus/mysqld_exporter</a></p><p><strong>使用0.15.0以后版本的exporter：</strong></p><p><img src="/images/prometheus8.png" alt="image"></p><p><strong>已经不支持**<strong>DATA_SOURCE_NAME</strong></strong> 变量了，如果使用最新版部署则需要挂载.my.cnf文件到exporter镜像中，否则会报错**</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mysqld_exporter.go:225 <span class="token assign-left variable">level</span><span class="token operator">=</span>info <span class="token assign-left variable">msg</span><span class="token operator">=</span>“Error parsing <span class="token function">host</span> config“ <span class="token assign-left variable">file</span><span class="token operator">=</span>.my.cnf <span class="token assign-left variable">err</span><span class="token operator">=</span>“no configuration<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/images/prometheus9.png" alt="image"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 prometheus<span class="token punctuation">]</span><span class="token comment"># cat .my.cnf </span><span class="token punctuation">[</span>client<span class="token punctuation">]</span><span class="token assign-left variable">user</span><span class="token operator">=</span>exporter<span class="token assign-left variable">password</span><span class="token operator">=</span>exporter<span class="token assign-left variable">host</span><span class="token operator">=</span><span class="token number">192.168</span>.1.185<span class="token assign-left variable">port</span><span class="token operator">=</span><span class="token number">3306</span><span class="token punctuation">[</span>root@k8s-master01 prometheus<span class="token punctuation">]</span><span class="token comment"># cat mysql-exporter.yaml</span>apiVersion: apps/v1kind: Deploymentmetadata:  creationTimestamp: null  labels:    app: mysql-exporter  name: mysql-exporter  namespace: monitoringspec:  replicas: <span class="token number">1</span>  selector:    matchLabels:      app: mysql-exporter  strategy: <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  template:    metadata:      labels:        app: mysql-exporter    spec:      containers:      - image: harbor.dujie.com/dycloud/mysqld-exporter        name: mysqld-exporter        resources:          requests:            cpu: 100m            memory: 100Mi        ports:        - containerPort: <span class="token number">9104</span>        volumeMounts:        - name: mysql          mountPath: <span class="token string">".my.cnf"</span>          subPath: <span class="token string">".my.cnf"</span>      volumes:      - name: mysql        configMap:          name: mysqlcnf---apiVersion: v1kind: Servicemetadata: name: mysql-exporter namespace: monitoring labels:   app: mysql-exporterspec: type: ClusterIP selector:   app: mysql-exporter ports: - name: api   port: <span class="token number">9104</span>   protocol: TCP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>创建完成之后可以验证svc是否可以成功访问mysql的metrics</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 prometheus<span class="token punctuation">]</span><span class="token comment"># kubectl get svc -n monitoring </span>NAME                    TYPE        CLUSTER-IP      EXTERNAL-IP   PORT<span class="token punctuation">(</span>S<span class="token punctuation">)</span>                         AGEmysql-exporter          ClusterIP   <span class="token number">10.96</span>.74.237    <span class="token operator">&lt;</span>none<span class="token operator">></span>        <span class="token number">9104</span>/TCP                        17h<span class="token punctuation">[</span>root@k8s-master01 prometheus<span class="token punctuation">]</span><span class="token comment"># curl -s  10.96.74.237:9104/metrics |tail -5</span><span class="token comment"># HELP promhttp_metric_handler_requests_total Total number of scrapes by HTTP status code.</span><span class="token comment"># TYPE promhttp_metric_handler_requests_total counter</span>promhttp_metric_handler_requests_total<span class="token punctuation">&#123;</span>code<span class="token operator">=</span><span class="token string">"200"</span><span class="token punctuation">&#125;</span> <span class="token number">4195</span>promhttp_metric_handler_requests_total<span class="token punctuation">&#123;</span>code<span class="token operator">=</span><span class="token string">"500"</span><span class="token punctuation">&#125;</span> <span class="token number">0</span>promhttp_metric_handler_requests_total<span class="token punctuation">&#123;</span>code<span class="token operator">=</span><span class="token string">"503"</span><span class="token punctuation">&#125;</span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>使用0.15.0以前版本的exporter：</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 prometheus<span class="token punctuation">]</span><span class="token comment"># cat mysql-exporter.yaml</span>apiVersion: apps/v1kind: Deploymentmetadata: name: mysql-exporter namespace: monitoringspec: replicas: <span class="token number">1</span> selector:   matchLabels:     app: mysql-exporter template:   metadata:     labels:       app: mysql-exporter   spec:     containers:     - name: mysql-exporter       image: registry.cn-beijing.aliyuncs.com/dotbalo/mysqld-exporter        env:       - name: DATA_SOURCE_NAME         value: <span class="token string">"exporter:exporter@(192.168.1.185:3306)/"</span>       imagePullPolicy: IfNotPresent       ports:       - containerPort: <span class="token number">9104</span>---apiVersion: v1kind: Servicemetadata: name: mysql-exporter namespace: monitoring labels:   app: mysql-exporterspec: type: ClusterIP selector:   app: mysql-exporter ports: - name: api   port: <span class="token number">9104</span>   protocol: TCP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="2-4-2-部署-myslq-serviceMonitor"><a href="#2-4-2-部署-myslq-serviceMonitor" class="headerlink" title="2.4.2 部署 myslq serviceMonitor"></a>2.4.2 部署 myslq serviceMonitor</h6><p>注意selector 要和上面的service一致</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 prometheus<span class="token punctuation">]</span><span class="token comment"># vim mysql-servicemonitor.yaml </span>apiVersion: monitoring.coreos.com/v1kind: ServiceMonitormetadata: name: mysql-exporter namespace: monitoring labels:   app: mysql-exporterspec: jobLabel: k8s-app endpoints: - port: api   interval: 30s   scheme: http selector:   matchLabels:     app: mysql-exporter   <span class="token comment">#</span> namespaceSelector:   matchNames:   - monitoring<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>创建完成后稍等一会可以在prometheus 界面中看到了</p><p><img src="/images/prometheus10.png" alt="image"></p><p>ServiceMonitor 监控失败排查步骤</p><ol><li>确认ServiceMonitor是否成功创建</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 prometheus<span class="token punctuation">]</span><span class="token comment"># kubectl get servicemonitors.monitoring.coreos.com  -n monitoring </span>NAME                      AGEalertmanager-main         26hblackbox-exporter         26hcoredns                   26hetcd                      20hgrafana                   26hkube-apiserver            26hkube-controller-manager   145mkube-scheduler            96mkube-state-metrics        26hkubelet                   26hmysql-exporter            17hnode-exporter             26hprometheus-adapter        26hprometheus-k8s            26hprometheus-operator       26h<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>确认ServiceMonitor标签是否配置正确</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 prometheus<span class="token punctuation">]</span><span class="token comment"># kubectl get servicemonitors.monitoring.coreos.com  -n monitoring  mysql-exporter  -o yaml </span>apiVersion: monitoring.coreos.com/v1kind: ServiceMonitormetadata:  annotations:    kubectl.kubernetes.io/last-applied-configuration: <span class="token operator">|</span>      <span class="token punctuation">&#123;</span><span class="token string">"apiVersion"</span><span class="token builtin class-name">:</span><span class="token string">"monitoring.coreos.com/v1"</span>,<span class="token string">"kind"</span><span class="token builtin class-name">:</span><span class="token string">"ServiceMonitor"</span>,<span class="token string">"metadata"</span>:<span class="token punctuation">&#123;</span><span class="token string">"annotations"</span>:<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>,<span class="token string">"labels"</span>:<span class="token punctuation">&#123;</span><span class="token string">"app"</span><span class="token builtin class-name">:</span><span class="token string">"mysql-exporter"</span><span class="token punctuation">&#125;</span>,<span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"mysql-exporter"</span>,<span class="token string">"namespace"</span><span class="token builtin class-name">:</span><span class="token string">"monitoring"</span><span class="token punctuation">&#125;</span>,<span class="token string">"spec"</span>:<span class="token punctuation">&#123;</span><span class="token string">"endpoints"</span>:<span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token string">"interval"</span><span class="token builtin class-name">:</span><span class="token string">"30s"</span>,<span class="token string">"port"</span><span class="token builtin class-name">:</span><span class="token string">"api"</span>,<span class="token string">"scheme"</span><span class="token builtin class-name">:</span><span class="token string">"http"</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span>,<span class="token string">"jobLabel"</span><span class="token builtin class-name">:</span><span class="token string">"k8s-app"</span>,<span class="token string">"namespaceSelector"</span>:<span class="token punctuation">&#123;</span><span class="token string">"matchNames"</span>:<span class="token punctuation">[</span><span class="token string">"monitoring"</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span>,<span class="token string">"selector"</span>:<span class="token punctuation">&#123;</span><span class="token string">"matchLabels"</span>:<span class="token punctuation">&#123;</span><span class="token string">"app"</span><span class="token builtin class-name">:</span><span class="token string">"mysql-exporter"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>  creationTimestamp: <span class="token string">"2024-07-10T09:33:07Z"</span>  generation: <span class="token number">1</span>  labels:    app: mysql-exporter  name: mysql-exporter  namespace: monitoring  resourceVersion: <span class="token string">"323737"</span>  uid: bbfba7ef-a9f7-46ba-b60a-c3e2b1d31ebcspec:  endpoints:  - interval: 30s    port: api    scheme: http  jobLabel: k8s-app  namespaceSelector:    matchNames:    - monitoring  selector:    matchLabels:      app: mysql-exporter<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>确认Prometheus是否生成了相关配置</li></ol><p><img src="/images/prometheus11.png" alt="image"></p><ol start="4"><li>确认存在<code>ServiceMonitor</code>匹配的Service<br><code>serviceMonitor</code>和service的selector标签保持一致</li></ol><p><img src="/images/prometheus12.png" alt="image"></p><ol start="5"><li>确认通过Service能够访问程序的Metrics接口</li></ol><p>使用serviceip可以成功获取到Metrics接口</p><p><img src="/images/prometheus13.png" alt="image"></p><ol start="6"><li>确认Service的端口和Scheme和ServiceMonitor一致</li></ol><p>这里需要保持一致，servicemonitor也可以直接指定端口，但是推荐使用name匹配，因为如果service端口更改，servicemonitor根据name匹配不需要修改了</p><p><img src="/images/prometheus14.png" alt="image"></p><h5 id="2-5-controller-manager-x2F-scheduler-监控"><a href="#2-5-controller-manager-x2F-scheduler-监控" class="headerlink" title="2.5 controller-manager&#x2F;scheduler 监控"></a>2.5 controller-manager&#x2F;scheduler 监控</h5><p>部署完operator之后可以看到<code>controller-manager</code>和<code>scheduler</code>是没有监控指标的，根据上面的排查步骤之后，可以看到他们两个组件默认并没有部署service，所以需要部署对应的service</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 prometheus<span class="token punctuation">]</span><span class="token comment"># cat controller-manager-svc.yml </span>apiVersion: v1kind: Endpointsmetadata:  labels:    app: controllermanager-prom  name: controllermanager-prom  namespace: kube-systemsubsets:- addresses:  - ip: <span class="token number">192.168</span>.31.20  - ip: <span class="token number">192.168</span>.31.21  - ip: <span class="token number">192.168</span>.31.22  ports:  - name: controllmanager-metrics    port: <span class="token number">10257</span>    protocol: TCP---apiVersion: v1kind: Servicemetadata:  labels:    app: controllermanager-prom  name: controllermanager-prom  namespace: kube-systemspec:  ports:  - name: controllmanager-metrics    port: <span class="token number">10257</span>    protocol: TCP    targetPort: <span class="token number">10257</span>  type: ClusterIP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 prometheus<span class="token punctuation">]</span><span class="token comment"># cat scheduler-svc.yml </span>apiVersion: v1kind: Endpointsmetadata:  labels:    app: scheduler-prom  name: scheduler-prom  namespace: kube-systemsubsets:- addresses:  - ip: <span class="token number">192.168</span>.31.20  - ip: <span class="token number">192.168</span>.31.21  - ip: <span class="token number">192.168</span>.31.22  ports:  - name: scheduler-metrics    port: <span class="token number">10259</span>    protocol: TCP---apiVersion: v1kind: Servicemetadata:  labels:    app: scheduler-prom  name: scheduler-prom  namespace: kube-systemspec:  ports:  - name: scheduler-metrics    port: <span class="token number">10259</span>    protocol: TCP    targetPort: <span class="token number">10259</span>  type: ClusterIP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>创建service后测试Metrics发现会报403</p><p><img src="/images/prometheus15.png" alt="image"></p><p>创建role和rolebind之后就可以访问到了</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 prometheus<span class="token punctuation">]</span><span class="token comment"># cat role.yaml </span>apiVersion: rbac.authorization.k8s.io/v1kind: ClusterRolemetadata:  name: metrics-readerrules:- nonResourceURLs: <span class="token punctuation">[</span><span class="token string">"/metrics"</span><span class="token punctuation">]</span>  verbs: <span class="token punctuation">[</span><span class="token string">"get"</span><span class="token punctuation">]</span><span class="token punctuation">[</span>root@k8s-master01 prometheus<span class="token punctuation">]</span><span class="token comment"># cat rolebind.yaml </span>apiVersion: rbac.authorization.k8s.io/v1kind: ClusterRoleBindingmetadata:  name: metrics-reader-bindingsubjects:- kind: User  name: kubernetes  apiGroup: rbac.authorization.k8s.ioroleRef:  kind: ClusterRole  name: metrics-reader  apiGroup: rbac.authorization.k8s.io<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后需要修改他两个组件的绑定ip，kubeadm默认是127.0.0.1，prometheus访问不到，<strong>每台master都需要更改</strong></p><p><img src="/images/prometheus16.png" alt="image"></p><p><img src="/images/prometheus17.png" alt="image"></p><p>然后修改他俩的servicemonitor的selector，让他们和刚才创建的service的selector对应</p><p><img src="/images/prometheus18.png" alt="image"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 prometheus<span class="token punctuation">]</span><span class="token comment"># kubectl edit servicemonitors.monitoring.coreos.com  -n monitoring kube-controller-manager </span><span class="token punctuation">..</span>.  selector:    matchLabels:      app: controllermanager-prom<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改完成后prometheus就会自动发现他们的指标了</p><p><img src="/images/prometheus19.png" alt="image"></p><h5 id="2-5-blackbox-监控域名"><a href="#2-5-blackbox-监控域名" class="headerlink" title="2.5 blackbox 监控域名"></a>2.5 blackbox 监控域名</h5><p><a href="https://github.com/prometheus/blackbox_exporter">https://github.com/prometheus/blackbox_exporter</a></p><p>新版<code>PrometheusStack</code>已经默认安装了<code>BlackboxExoporter</code>，可以通过下面命令查看</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 manifests<span class="token punctuation">]</span><span class="token comment"># kubectl get pods -n monitoring  -l app.kubernetes.io/name=blackbox-exporter</span>NAME                                 READY   STATUS    RESTARTS   AGEblackbox-exporter-597d86cf5c-xd2m7   <span class="token number">3</span>/3     Running   <span class="token number">0</span>          5d3h<span class="token comment"># 同时也会创建一个 Service，可以通过该 Service 访问 Blackbox Exporter 并传递一些参数：</span><span class="token punctuation">[</span>root@k8s-master01 manifests<span class="token punctuation">]</span><span class="token comment"># kubectl get svc -n monitoring  -l app.kubernetes.io/name=blackbox-exporter</span>NAME                TYPE        CLUSTER-IP      EXTERNAL-IP   PORT<span class="token punctuation">(</span>S<span class="token punctuation">)</span>              AGEblackbox-exporter   ClusterIP   <span class="token number">10.96</span>.145.255   <span class="token operator">&lt;</span>none<span class="token operator">></span>        <span class="token number">9115</span>/TCP,19115/TCP   5d3h<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>比如检测下 dycloud.fun（使用任何一个公网域名或者公司内的域名探测即可）网站的状态，可以通过如下命令进行检查：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 manifests<span class="token punctuation">]</span><span class="token comment"># curl -s "http://10.96.145.255:19115/probe?target=dycloud.fun&amp;module=http_2xx" |tail -5</span><span class="token comment"># TYPE probe_ip_protocol gauge</span>probe_ip_protocol <span class="token number">4</span><span class="token comment"># HELP probe_success Displays whether or not the probe was a success</span><span class="token comment"># TYPE probe_success gauge</span>probe_success <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>probe是接口地址，taget是检测的目标，module是使用哪个模块进行探测。如果集群中没有配置<code>BlackboxExporter</code>，可以参考：</p><p><a href="https://github.com/prometheus/blackbox_exporter">https://github.com/prometheus/blackbox_exporter</a>  进行安装</p><h5 id="2-6-Prometheus-静态配置"><a href="#2-6-Prometheus-静态配置" class="headerlink" title="2.6 Prometheus 静态配置"></a>2.6 Prometheus 静态配置</h5><p>首先创建一个空文件，然后通过该文件创建一个Secret，那么这个Secret就可以作为Prometheus的静态配置：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 prometheus<span class="token punctuation">]</span><span class="token comment"># touch  prometheus-additional.yaml </span><span class="token punctuation">[</span>root@k8s-master01 prometheus<span class="token punctuation">]</span><span class="token comment"># kubectl create secret generic  additional-configs --from-file=prometheus-additional.yaml  -n monitoring </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>创建完，需要添加相关配置：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 prometheus<span class="token punctuation">]</span><span class="token comment"># kubectl edit prometheus -n monitoring  k8s </span>  additionalScrapeConfigs:    key: prometheus-additional.yaml    name: additional-configs    optional: <span class="token boolean">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/images/prometheus20.png" alt="image"></p><p>添加完之后不需要重启prometheus，然后再<code>prometheus-additional.yaml</code>文件内编辑一些静态配置，</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 prometheus<span class="token punctuation">]</span><span class="token comment"># cat prometheus-additional.yaml </span>- job_name: <span class="token string">'blackbox'</span>  metrics_path: /probe  params:    module: <span class="token punctuation">[</span>http_2xx<span class="token punctuation">]</span> <span class="token comment"># Look for a HTTP 200 response.</span>  static_configs:    - targets:      - https://dycloud.fun <span class="token comment"># Target to probe with http.</span>  relabel_configs:    - source_labels: <span class="token punctuation">[</span>__address__<span class="token punctuation">]</span>      target_label: __param_target    - source_labels: <span class="token punctuation">[</span>__param_target<span class="token punctuation">]</span>      target_label: instance    - target_label: __address__      replacement: blackbox-exporter:19115 <span class="token comment"># The blackbox exporter's real hostname:port.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>targets</code>：探测的目标</li><li><code>params</code>：使用哪个模块进行探测</li><li><code>replacement：</code>Blackbox Exporter的地址</li></ul><p>可以看到此处的内容，和传统配置的内容一致，只需要添加对应的 job 即可。之后通过该文件更新该 Secret。之后通过该文件更新secret</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 prometheus<span class="token punctuation">]</span><span class="token comment"># kubectl create secret generic  additional-configs --from-file=prometheus-additional.yaml  --dry-run=client -o yaml |kubectl  apply -f  - -nmonitoring </span>secret/additional-configs configured<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>更新完成后，稍等一分钟即可在 Prometheus Web UI 看到该配置：</p><p><img src="/images/prometheus21.png" alt="image"></p><p>然后就可以在grafana中导入黑盒监控的模板(模板id：13659)：</p><p><img src="/images/prometheus22.png" alt="image"></p><h5 id="2-7-Prometheus-监控windows（外部）主机"><a href="#2-7-Prometheus-监控windows（外部）主机" class="headerlink" title="2.7 Prometheus 监控windows（外部）主机"></a>2.7 Prometheus 监控windows（外部）主机</h5><p>监控 Linux 的 Exporter 是：<a href="https://github.com/prometheus/node_exporter">https://github.com/prometheus/node_exporter</a> ，监控 Windows主机的 Exporter 是：<a href="https://github.com/prometheus-community/windows_exporter">https://github.com/prometheus-community/windows_exporter</a></p><p>首 先 下 载 对 应 的 Exporter 至 Windows 主 机 （ MSI 文 件 下 载 地 址 ：<a href="https://github.com/prometheus-community/windows_exporter/releases">https://github.com/prometheus-community/windows_exporter&#x2F;releases</a> ）：</p><p><img src="/images/prometheus23.png" alt="image"></p><p>下载完成后，双击打开即可完成安装，之后可以在任务管理器上看到对应的进程：</p><p><img src="/images/prometheus24.png" alt="image"></p><p>Windows Exporter 会暴露一个 9182 端口，可以通过该端口访问到 Windows 的监控数据。</p><p>接下来在静态配置文件中添加以下配置：</p><pre class="line-numbers language-Plain" data-language="Plain"><div class="caption"><span>Text</span></div><code class="language-Plain">- job_name: &#39;WindowsServerMonitor&#39;  static_configs:    - targets:      - &quot;1.1.1.1:9182&quot;      labels:        server_type: &#39;windows&#39;  relabel_configs:    - source_labels: [__address__]      target_label: instance<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Targets 配置的是监控主机，如果是多台 Windows 主机，配置多行即可，当然每台主机都需要配置 Exporter。之后可以在 Prometheus Web UI 看到监控数据</p><p><img src="/images/prometheus25.png" alt="image"></p><p>之后导入模板（地址：<a href="https://grafana.com/grafana/dashboards/12566%EF%BC%89%E5%8D%B3%E5%8F%AF%EF%BC%9A">https://grafana.com/grafana/dashboards/12566）即可：</a></p><p><img src="/images/prometheus26.png" alt="image"></p><h3 id="三、使用PrometheusAlert实现钉钉告警"><a href="#三、使用PrometheusAlert实现钉钉告警" class="headerlink" title="三、使用PrometheusAlert实现钉钉告警"></a>三、使用PrometheusAlert实现钉钉告警</h3><p>官网：<a href="https://github.com/feiyu563/PrometheusAlert">https://github.com/feiyu563/PrometheusAlert</a></p><p>PrometheusAlert是开源的运维告警中心消息转发系统，支持主流的监控系统Prometheus、Zabbix，日志系统Graylog2，Graylog3、数据可视化系统Grafana、SonarQube。阿里云-云监控，以及所有支持WebHook接口的系统发出的预警消息，支持将收到的这些消息发送到钉钉，微信，email，飞书，腾讯短信，腾讯电话，阿里云短信，阿里云电话，华为短信，百度云短信，容联云电话，七陌短信，七陌语音，TeleGram，百度Hi(如流)，Kafka等。</p><p><img src="/images/prometheus27.png" alt="image"></p><p>项目架构：</p><p>PrometheusAlert 后端使用了 <a href="https://github.com/beego/beego">beego</a> 框架，前端使用了 <a href="https://github.com/ColorlibHQ/AdminLTE">AdminLTE</a> （基于 Bootstrap 和 Jquery）模板。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">├── cmd: 脚本├── conf： 配置├── controllers：控制器├── db：默认的 sqlite 数据├── doc：文档├── docker-entrypoint.sh：容器运行入口文件├── Dockerfile├── example：示例文件├── go.mod├── go.sum├── LICENSE├── main.go├── Makefile├── models：模型├── PrometheusAlert：二进制文件├── PrometheusAlertVoicePlugin├── README.MD├── routers：路由├── static：静态资源├── swagger├── tests：测试├── views：前端模板└── zabbixclient<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在k8s中安装</p><pre class="line-numbers language-Plain" data-language="Plain"><div class="caption"><span>Text</span></div><code class="language-Plain">#Kubernetes中运行可以直接执行以下命令行即可(注意默认的部署模版中未挂载模版数据库文件 db&#x2F;PrometheusAlertDB.db，为防止模版数据丢失，请自行增加挂载配置 )kubectl apply -n monitoring -f https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;feiyu563&#x2F;PrometheusAlert&#x2F;master&#x2F;example&#x2F;kubernetes&#x2F;PrometheusAlert-Deployment.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 prometheus<span class="token punctuation">]</span><span class="token comment"># cat PrometheusAlert-Deployment.yaml </span><span class="token comment"># apiVersion: v1</span><span class="token comment"># kind: Namespace</span><span class="token comment"># metadata:</span><span class="token comment">#   name: monitoring</span>---  apiVersion: v1data:  app.conf: <span class="token operator">|</span>    <span class="token comment">#---------------------↓全局配置-----------------------</span>    appname <span class="token operator">=</span> PrometheusAlert    <span class="token comment">#登录用户名</span>    <span class="token assign-left variable">login_user</span><span class="token operator">=</span>prometheusalert    <span class="token comment">#登录密码</span>    <span class="token assign-left variable">login_password</span><span class="token operator">=</span>prometheusalert    <span class="token comment">#监听地址</span>    httpaddr <span class="token operator">=</span> <span class="token string">"0.0.0.0"</span>    <span class="token comment">#监听端口</span>    httpport <span class="token operator">=</span> <span class="token number">8080</span>    runmode <span class="token operator">=</span> dev    <span class="token comment">#设置代理 proxy = http://123.123.123.123:8080</span>    proxy <span class="token operator">=</span>    <span class="token comment">#开启JSON请求</span>    copyrequestbody <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token comment">#告警消息标题</span>    <span class="token assign-left variable">title</span><span class="token operator">=</span>PrometheusAlert    <span class="token comment">#链接到告警平台地址</span>    <span class="token assign-left variable">GraylogAlerturl</span><span class="token operator">=</span>http://graylog.org    <span class="token comment">#钉钉告警 告警logo图标地址</span>    <span class="token assign-left variable">logourl</span><span class="token operator">=</span>https://raw.githubusercontent.com/feiyu563/PrometheusAlert/master/doc/alert-center.png    <span class="token comment">#钉钉告警 恢复logo图标地址</span>    <span class="token assign-left variable">rlogourl</span><span class="token operator">=</span>https://raw.githubusercontent.com/feiyu563/PrometheusAlert/master/doc/alert-center.png    <span class="token comment">#短信告警级别(等于3就进行短信告警) 告警级别定义 0 信息,1 警告,2 一般严重,3 严重,4 灾难</span>    <span class="token assign-left variable">messagelevel</span><span class="token operator">=</span><span class="token number">3</span>    <span class="token comment">#电话告警级别(等于4就进行语音告警) 告警级别定义 0 信息,1 警告,2 一般严重,3 严重,4 灾难</span>    <span class="token assign-left variable">phonecalllevel</span><span class="token operator">=</span><span class="token number">4</span>    <span class="token comment">#默认拨打号码(页面测试短信和电话功能需要配置此项)</span>    <span class="token assign-left variable">defaultphone</span><span class="token operator">=</span>xxxxxxxx    <span class="token comment">#故障恢复是否启用电话通知0为关闭,1为开启</span>    <span class="token assign-left variable">phonecallresolved</span><span class="token operator">=</span><span class="token number">0</span>    <span class="token comment">#是否前台输出file or console</span>    <span class="token assign-left variable">logtype</span><span class="token operator">=</span>file    <span class="token comment">#日志文件路径</span>    <span class="token assign-left variable">logpath</span><span class="token operator">=</span>logs/prometheusalertcenter.log    <span class="token comment">#转换Prometheus,graylog告警消息的时区为CST时区(如默认已经是CST时区，请勿开启)</span>    <span class="token assign-left variable">prometheus_cst_time</span><span class="token operator">=</span><span class="token number">0</span>    <span class="token comment">#数据库驱动，支持sqlite3，mysql,postgres如使用mysql或postgres，请开启db_host,db_port,db_user,db_password,db_name的注释</span>    <span class="token assign-left variable">db_driver</span><span class="token operator">=</span>sqlite3    <span class="token comment">#db_host=127.0.0.1</span>    <span class="token comment">#db_port=3306</span>    <span class="token comment">#db_user=root</span>    <span class="token comment">#db_password=root</span>    <span class="token comment">#db_name=prometheusalert</span>    <span class="token comment">#是否开启告警记录 0为关闭,1为开启</span>    <span class="token assign-left variable">AlertRecord</span><span class="token operator">=</span><span class="token number">0</span>    <span class="token comment">#是否开启告警记录定时删除 0为关闭,1为开启</span>    <span class="token assign-left variable">RecordLive</span><span class="token operator">=</span><span class="token number">0</span>    <span class="token comment">#告警记录定时删除周期，单位天</span>    <span class="token assign-left variable">RecordLiveDay</span><span class="token operator">=</span><span class="token number">7</span>    <span class="token comment"># 是否将告警记录写入es7，0为关闭，1为开启</span>    <span class="token assign-left variable">alert_to_es</span><span class="token operator">=</span><span class="token number">0</span>    <span class="token comment"># es地址，是[]string</span>    <span class="token comment"># beego.Appconfig.Strings读取配置为[]string，使用";"而不是","</span>    <span class="token assign-left variable">to_es_url</span><span class="token operator">=</span>http://localhost:9200    <span class="token comment"># to_es_url=http://es1:9200;http://es2:9200;http://es3:9200</span>    <span class="token comment"># es用户和密码</span>    <span class="token comment"># to_es_user=username</span>    <span class="token comment"># to_es_pwd=password</span>    <span class="token comment"># 长连接最大空闲数</span>    <span class="token assign-left variable">maxIdleConns</span><span class="token operator">=</span><span class="token number">100</span>    <span class="token comment"># 热更新配置文件</span>    open-hotreload<span class="token operator">=</span><span class="token number">0</span>        <span class="token comment">#---------------------↓webhook-----------------------</span>    <span class="token comment">#是否开启钉钉告警通道,可同时开始多个通道0为关闭,1为开启</span>    open-dingding<span class="token operator">=</span><span class="token number">1</span>    <span class="token comment">#默认钉钉机器人地址</span>    <span class="token comment">#ddurl=https://oapi.dingtalk.com/robot/send?access_token=cf7a7becfb3889c1d75b31be7fa100e14576d6730a9634752692c098b81a93b1&amp;secret=SEC30cfb8f6cfc8565251a90ec14afbed005c3b84b1a75ccfa16cf1fcf736a4a48f&amp;at=15811047166</span>    <span class="token assign-left variable">ddurl</span><span class="token operator">=</span>https://oapi.dingtalk.com/robot/send?access_token<span class="token operator">=</span>cf7a7becfb3889c1d75b31be7fa100e14576d6730a9634752692c098b81a93b1    <span class="token comment">#是否开启 @所有人(0为关闭,1为开启)</span>    <span class="token assign-left variable">dd_isatall</span><span class="token operator">=</span><span class="token number">1</span>    <span class="token comment">#是否开启钉钉机器人加签，0为关闭,1为开启</span>    <span class="token comment"># 使用方法：https://oapi.dingtalk.com/robot/send?access_token=XXXXXX&amp;secret=mysecret</span>    open-dingding-secret<span class="token operator">=</span><span class="token number">0</span>        <span class="token comment">#是否开启微信告警通道,可同时开始多个通道0为关闭,1为开启</span>    open-weixin<span class="token operator">=</span><span class="token number">1</span>    <span class="token comment">#默认企业微信机器人地址</span>    <span class="token assign-left variable">wxurl</span><span class="token operator">=</span>https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key<span class="token operator">=</span>xxxxx        <span class="token comment">#是否开启飞书告警通道,可同时开始多个通道0为关闭,1为开启</span>    open-feishu<span class="token operator">=</span><span class="token number">1</span>    <span class="token comment">#默认飞书机器人地址</span>    <span class="token assign-left variable">fsurl</span><span class="token operator">=</span>https://open.feishu.cn/open-apis/bot/v2/hook/61132219-e82a-4aae-9186-3664efa9d8c1    <span class="token comment"># webhook 发送 http 请求的 contentType, 如 application/json, application/x-www-form-urlencoded，不配置默认 application/json</span>    <span class="token assign-left variable">wh_contenttype</span><span class="token operator">=</span>application/json        <span class="token comment">#---------------------↓腾讯云接口-----------------------</span>    <span class="token comment">#是否开启腾讯云短信告警通道,可同时开始多个通道0为关闭,1为开启</span>    open-txdx<span class="token operator">=</span><span class="token number">0</span>    <span class="token comment">#腾讯云短信接口key</span>    <span class="token assign-left variable">TXY_DX_appkey</span><span class="token operator">=</span>xxxxx    <span class="token comment">#腾讯云短信模版ID 腾讯云短信模版配置可参考 prometheus告警:&#123;1&#125;</span>    <span class="token assign-left variable">TXY_DX_tpl_id</span><span class="token operator">=</span>xxxxx    <span class="token comment">#腾讯云短信sdk app id</span>    <span class="token assign-left variable">TXY_DX_sdkappid</span><span class="token operator">=</span>xxxxx    <span class="token comment">#腾讯云短信签名 根据自己审核通过的签名来填写</span>    <span class="token assign-left variable">TXY_DX_sign</span><span class="token operator">=</span>腾讯云        <span class="token comment">#是否开启腾讯云电话告警通道,可同时开始多个通道0为关闭,1为开启</span>    open-txdh<span class="token operator">=</span><span class="token number">0</span>    <span class="token comment">#腾讯云电话接口key</span>    <span class="token assign-left variable">TXY_DH_phonecallappkey</span><span class="token operator">=</span>xxxxx    <span class="token comment">#腾讯云电话模版ID</span>    <span class="token assign-left variable">TXY_DH_phonecalltpl_id</span><span class="token operator">=</span>xxxxx    <span class="token comment">#腾讯云电话sdk app id</span>    <span class="token assign-left variable">TXY_DH_phonecallsdkappid</span><span class="token operator">=</span>xxxxx        <span class="token comment">#---------------------↓华为云接口-----------------------</span>    <span class="token comment">#是否开启华为云短信告警通道,可同时开始多个通道0为关闭,1为开启</span>    open-hwdx<span class="token operator">=</span><span class="token number">0</span>    <span class="token comment">#华为云短信接口key</span>    <span class="token assign-left variable">HWY_DX_APP_Key</span><span class="token operator">=</span>xxxxxxxxxxxxxxxxxxxxxx    <span class="token comment">#华为云短信接口Secret</span>    <span class="token assign-left variable">HWY_DX_APP_Secret</span><span class="token operator">=</span>xxxxxxxxxxxxxxxxxxxxxx    <span class="token comment">#华为云APP接入地址(端口接口地址)</span>    <span class="token assign-left variable">HWY_DX_APP_Url</span><span class="token operator">=</span>https://rtcsms.cn-north-1.myhuaweicloud.com:10743    <span class="token comment">#华为云短信模板ID</span>    <span class="token assign-left variable">HWY_DX_Templateid</span><span class="token operator">=</span>xxxxxxxxxxxxxxxxxxxxxx    <span class="token comment">#华为云签名名称，必须是已审核通过的，与模板类型一致的签名名称,按照自己的实际签名填写</span>    <span class="token assign-left variable">HWY_DX_Signature</span><span class="token operator">=</span>华为云    <span class="token comment">#华为云签名通道号</span>    <span class="token assign-left variable">HWY_DX_Sender</span><span class="token operator">=</span>xxxxxxxxxx        <span class="token comment">#---------------------↓阿里云接口-----------------------</span>    <span class="token comment">#是否开启阿里云短信告警通道,可同时开始多个通道0为关闭,1为开启</span>    open-alydx<span class="token operator">=</span><span class="token number">0</span>    <span class="token comment">#阿里云短信主账号AccessKey的ID</span>    <span class="token assign-left variable">ALY_DX_AccessKeyId</span><span class="token operator">=</span>xxxxxxxxxxxxxxxxxxxxxx    <span class="token comment">#阿里云短信接口密钥</span>    <span class="token assign-left variable">ALY_DX_AccessSecret</span><span class="token operator">=</span>xxxxxxxxxxxxxxxxxxxxxx    <span class="token comment">#阿里云短信签名名称</span>    <span class="token assign-left variable">ALY_DX_SignName</span><span class="token operator">=</span>阿里云    <span class="token comment">#阿里云短信模板ID</span>    <span class="token assign-left variable">ALY_DX_Template</span><span class="token operator">=</span>xxxxxxxxxxxxxxxxxxxxxx        <span class="token comment">#是否开启阿里云电话告警通道,可同时开始多个通道0为关闭,1为开启</span>    open-alydh<span class="token operator">=</span><span class="token number">0</span>    <span class="token comment">#阿里云电话主账号AccessKey的ID</span>    <span class="token assign-left variable">ALY_DH_AccessKeyId</span><span class="token operator">=</span>xxxxxxxxxxxxxxxxxxxxxx    <span class="token comment">#阿里云电话接口密钥</span>    <span class="token assign-left variable">ALY_DH_AccessSecret</span><span class="token operator">=</span>xxxxxxxxxxxxxxxxxxxxxx    <span class="token comment">#阿里云电话被叫显号，必须是已购买的号码</span>    <span class="token assign-left variable">ALY_DX_CalledShowNumber</span><span class="token operator">=</span>xxxxxxxxx    <span class="token comment">#阿里云电话文本转语音（TTS）模板ID</span>    <span class="token assign-left variable">ALY_DH_TtsCode</span><span class="token operator">=</span>xxxxxxxx        <span class="token comment">#---------------------↓容联云接口-----------------------</span>    <span class="token comment">#是否开启容联云电话告警通道,可同时开始多个通道0为关闭,1为开启</span>    open-rlydh<span class="token operator">=</span><span class="token number">0</span>    <span class="token comment">#容联云基础接口地址</span>    <span class="token assign-left variable">RLY_URL</span><span class="token operator">=</span>https://app.cloopen.com:8883/2013-12-26/Accounts/    <span class="token comment">#容联云后台SID</span>    <span class="token assign-left variable">RLY_ACCOUNT_SID</span><span class="token operator">=</span>xxxxxxxxxxx    <span class="token comment">#容联云api-token</span>    <span class="token assign-left variable">RLY_ACCOUNT_TOKEN</span><span class="token operator">=</span>xxxxxxxxxx    <span class="token comment">#容联云app_id</span>    <span class="token assign-left variable">RLY_APP_ID</span><span class="token operator">=</span>xxxxxxxxxxxxx        <span class="token comment">#---------------------↓邮件配置-----------------------</span>    <span class="token comment">#是否开启邮件</span>    open-email<span class="token operator">=</span><span class="token number">0</span>    <span class="token comment">#邮件发件服务器地址</span>    <span class="token assign-left variable">Email_host</span><span class="token operator">=</span>smtp.qq.com    <span class="token comment">#邮件发件服务器端口</span>    <span class="token assign-left variable">Email_port</span><span class="token operator">=</span><span class="token number">465</span>    <span class="token comment">#邮件帐号</span>    <span class="token assign-left variable">Email_user</span><span class="token operator">=</span>xxxxxxx@qq.com    <span class="token comment">#邮件密码</span>    <span class="token assign-left variable">Email_password</span><span class="token operator">=</span>xxxxxx    <span class="token comment">#邮件标题</span>    <span class="token assign-left variable">Email_title</span><span class="token operator">=</span>运维告警    <span class="token comment">#默认发送邮箱</span>    <span class="token assign-left variable">Default_emails</span><span class="token operator">=</span>xxxxx@qq.com,xxxxx@qq.com        <span class="token comment">#---------------------↓七陌云接口-----------------------</span>    <span class="token comment">#是否开启七陌短信告警通道,可同时开始多个通道0为关闭,1为开启</span>    open-7moordx<span class="token operator">=</span><span class="token number">0</span>    <span class="token comment">#七陌账户ID</span>    <span class="token assign-left variable">7MOOR_ACCOUNT_ID</span><span class="token operator">=</span>Nxxx    <span class="token comment">#七陌账户APISecret</span>    <span class="token assign-left variable">7MOOR_ACCOUNT_APISECRET</span><span class="token operator">=</span>xxx    <span class="token comment">#七陌账户短信模板编号</span>    <span class="token assign-left variable">7MOOR_DX_TEMPLATENUM</span><span class="token operator">=</span>n    <span class="token comment">#注意：七陌短信变量这里只用一个var1，在代码里写死了。</span>    <span class="token comment">#-----------</span>    <span class="token comment">#是否开启七陌webcall语音通知告警通道,可同时开始多个通道0为关闭,1为开启</span>    open-7moordh<span class="token operator">=</span><span class="token number">0</span>    <span class="token comment">#请在七陌平台添加虚拟服务号、文本节点</span>    <span class="token comment">#七陌账户webcall的虚拟服务号</span>    <span class="token assign-left variable">7MOOR_WEBCALL_SERVICENO</span><span class="token operator">=</span>xxx    <span class="token comment"># 文本节点里被替换的变量，我配置的是text。如果被替换的变量不是text，请修改此配置</span>    <span class="token assign-left variable">7MOOR_WEBCALL_VOICE_VAR</span><span class="token operator">=</span>text        <span class="token comment">#---------------------↓telegram接口-----------------------</span>    <span class="token comment">#是否开启telegram告警通道,可同时开始多个通道0为关闭,1为开启</span>    open-tg<span class="token operator">=</span><span class="token number">0</span>    <span class="token comment">#tg机器人token</span>    <span class="token assign-left variable">TG_TOKEN</span><span class="token operator">=</span>xxxxx    <span class="token comment">#tg消息模式 个人消息或者频道消息 0为关闭(推送给个人)，1为开启(推送给频道)</span>    <span class="token assign-left variable">TG_MODE_CHAN</span><span class="token operator">=</span><span class="token number">0</span>    <span class="token comment">#tg用户ID</span>    <span class="token assign-left variable">TG_USERID</span><span class="token operator">=</span>xxxxx    <span class="token comment">#tg频道name或者id, 频道name需要以@开始</span>    <span class="token assign-left variable">TG_CHANNAME</span><span class="token operator">=</span>xxxxx    <span class="token comment">#tg api地址, 可以配置为代理地址</span>    <span class="token comment">#TG_API_PROXY="https://api.telegram.org/bot%s/%s"</span>        <span class="token comment">#---------------------↓workwechat接口-----------------------</span>    <span class="token comment">#是否开启workwechat告警通道,可同时开始多个通道0为关闭,1为开启</span>    open-workwechat<span class="token operator">=</span><span class="token number">0</span>    <span class="token comment"># 企业ID</span>    <span class="token assign-left variable">WorkWechat_CropID</span><span class="token operator">=</span>xxxxx    <span class="token comment"># 应用ID</span>    <span class="token assign-left variable">WorkWechat_AgentID</span><span class="token operator">=</span>xxxx    <span class="token comment"># 应用secret</span>    <span class="token assign-left variable">WorkWechat_AgentSecret</span><span class="token operator">=</span>xxxx    <span class="token comment"># 接受用户</span>    <span class="token assign-left variable">WorkWechat_ToUser</span><span class="token operator">=</span><span class="token string">"zhangsan|lisi"</span>    <span class="token comment"># 接受部门</span>    <span class="token assign-left variable">WorkWechat_ToParty</span><span class="token operator">=</span><span class="token string">"ops|dev"</span>    <span class="token comment"># 接受标签</span>    <span class="token assign-left variable">WorkWechat_ToTag</span><span class="token operator">=</span><span class="token string">""</span>    <span class="token comment"># 消息类型, 暂时只支持markdown</span>    <span class="token comment"># WorkWechat_Msgtype = "markdown"</span>        <span class="token comment">#---------------------↓百度云接口-----------------------</span>    <span class="token comment">#是否开启百度云短信告警通道,可同时开始多个通道0为关闭,1为开启</span>    open-baidudx<span class="token operator">=</span><span class="token number">0</span>    <span class="token comment">#百度云短信接口AK(ACCESS_KEY_ID)</span>    <span class="token assign-left variable">BDY_DX_AK</span><span class="token operator">=</span>xxxxx    <span class="token comment">#百度云短信接口SK(SECRET_ACCESS_KEY)</span>    <span class="token assign-left variable">BDY_DX_SK</span><span class="token operator">=</span>xxxxx    <span class="token comment">#百度云短信ENDPOINT（ENDPOINT参数需要用指定区域的域名来进行定义，如服务所在区域为北京，则为）</span>    <span class="token assign-left variable">BDY_DX_ENDPOINT</span><span class="token operator">=</span>http://smsv3.bj.baidubce.com    <span class="token comment">#百度云短信模版ID,根据自己审核通过的模版来填写(模版支持一个参数code：如prometheus告警:&#123;code&#125;)</span>    <span class="token assign-left variable">BDY_DX_TEMPLATE_ID</span><span class="token operator">=</span>xxxxx    <span class="token comment">#百度云短信签名ID，根据自己审核通过的签名来填写</span>    <span class="token assign-left variable">TXY_DX_SIGNATURE_ID</span><span class="token operator">=</span>xxxxx        <span class="token comment">#---------------------↓百度Hi(如流)-----------------------</span>    <span class="token comment">#是否开启百度Hi(如流)告警通道,可同时开始多个通道0为关闭,1为开启</span>    open-ruliu<span class="token operator">=</span><span class="token number">0</span>    <span class="token comment">#默认百度Hi(如流)机器人地址</span>    <span class="token assign-left variable">BDRL_URL</span><span class="token operator">=</span>https://api.im.baidu.com/api/msg/groupmsgsend?access_token<span class="token operator">=</span>xxxxxxxxxxxxxx    <span class="token comment">#百度Hi(如流)群ID</span>    <span class="token assign-left variable">BDRL_ID</span><span class="token operator">=</span><span class="token number">123456</span>    <span class="token comment">#---------------------↓bark接口-----------------------</span>    <span class="token comment">#是否开启telegram告警通道,可同时开始多个通道0为关闭,1为开启</span>    open-bark<span class="token operator">=</span><span class="token number">0</span>    <span class="token comment">#bark默认地址, 建议自行部署bark-server</span>    <span class="token assign-left variable">BARK_URL</span><span class="token operator">=</span>https://api.day.app    <span class="token comment">#bark key, 多个key使用分割</span>    <span class="token assign-left variable">BARK_KEYS</span><span class="token operator">=</span>xxxxx    <span class="token comment"># 复制, 推荐开启</span>    <span class="token assign-left variable">BARK_COPY</span><span class="token operator">=</span><span class="token number">1</span>    <span class="token comment"># 历史记录保存,推荐开启</span>    <span class="token assign-left variable">BARK_ARCHIVE</span><span class="token operator">=</span><span class="token number">1</span>    <span class="token comment"># 消息分组</span>    <span class="token assign-left variable">BARK_GROUP</span><span class="token operator">=</span>PrometheusAlert        <span class="token comment">#---------------------↓语音播报-----------------------</span>    <span class="token comment">#语音播报需要配合语音播报插件才能使用</span>    <span class="token comment">#是否开启语音播报通道,0为关闭,1为开启</span>    open-voice<span class="token operator">=</span><span class="token number">1</span>    <span class="token assign-left variable">VOICE_IP</span><span class="token operator">=</span><span class="token number">127.0</span>.0.1    <span class="token assign-left variable">VOICE_PORT</span><span class="token operator">=</span><span class="token number">9999</span>        <span class="token comment">#---------------------↓飞书机器人应用-----------------------</span>    <span class="token comment">#是否开启feishuapp告警通道,可同时开始多个通道0为关闭,1为开启</span>    open-feishuapp<span class="token operator">=</span><span class="token number">1</span>    <span class="token comment"># APPID</span>    <span class="token assign-left variable">FEISHU_APPID</span><span class="token operator">=</span>cli_xxxxxxxxxxxxx    <span class="token comment"># APPSECRET</span>    <span class="token assign-left variable">FEISHU_APPSECRET</span><span class="token operator">=</span>xxxxxxxxxxxxxxxxxxxxxx    <span class="token comment"># 可填飞书 用户open_id、user_id、union_ids、部门open_department_id</span>    <span class="token assign-left variable">AT_USER_ID</span><span class="token operator">=</span><span class="token string">"xxxxxxxx"</span>            <span class="token comment">#---------------------↓告警组-----------------------</span>    <span class="token comment"># 有其他新增的配置段，请放在告警组的上面</span>    <span class="token comment"># 暂时仅针对 PrometheusContronller 中的 /prometheus/alert 路由</span>    <span class="token comment"># 告警组如果放在了 wx, dd... 那部分的上分，beego section 取 url 值不太对。</span>    <span class="token comment"># 所以这里使用 include 来包含另告警组配置</span>        <span class="token comment"># 是否启用告警组功能</span>    open-alertgroup<span class="token operator">=</span><span class="token number">0</span>        <span class="token comment"># 自定义的告警组既可以写在这里，也可以写在单独的文件里。</span>    <span class="token comment"># 写在单独的告警组配置里更便于修改。</span>    <span class="token comment"># include "alertgroup.conf"</span>        <span class="token comment">#---------------------↓kafka地址-----------------------</span>    <span class="token comment"># kafka服务器的地址</span>    open-kafka<span class="token operator">=</span><span class="token number">1</span>    kafka_server <span class="token operator">=</span> <span class="token number">127.0</span>.0.1:9092    <span class="token comment"># 写入消息的kafka topic</span>    kafka_topic <span class="token operator">=</span> devops    <span class="token comment"># 用户标记该消息是来自PrometheusAlert,一般无需修改</span>    kafka_key <span class="token operator">=</span> PrometheusAlert  user.csv: <span class="token operator">|</span>    <span class="token number">2019</span>年4月10日,15888888881,小张,15999999999,备用联系人小陈,15999999998,备用联系人小赵    <span class="token number">2019</span>年4月11日,15888888882,小李,15999999999,备用联系人小陈,15999999998,备用联系人小赵    <span class="token number">2019</span>年4月12日,15888888883,小王,15999999999,备用联系人小陈,15999999998,备用联系人小赵    <span class="token number">2019</span>年4月13日,15888888884,小宋,15999999999,备用联系人小陈,15999999998,备用联系人小赵kind: ConfigMapmetadata:  name: prometheus-alert-center-conf  namespace: monitoring---apiVersion: apps/v1kind: Deploymentmetadata:  labels:    app: prometheus-alert-center    alertname: prometheus-alert-center  name: prometheus-alert-center  namespace: monitoring  spec:  replicas: <span class="token number">1</span>  selector:    matchLabels:      app: prometheus-alert-center      alertname: prometheus-alert-center  template:    metadata:      labels:        app: prometheus-alert-center        alertname: prometheus-alert-center    spec:      initContainers:      - name: init-time-sync        image: harbor.dujie.com/dycloud/ntpdate        command:        - <span class="token function">sh</span>        - -c        - <span class="token string">"ntpdate ntp.aliyun.com"</span>        securityContext:          privileged: <span class="token boolean">true</span>      containers:      - image: harbor.dujie.com/dycloud/prometheus-alert:v4.9.1        name: prometheus-alert-center        env:        - name: TZ          value: <span class="token string">"Asia/Shanghai"</span>        ports:        - containerPort: <span class="token number">8080</span>          name: http        resources:          limits:            cpu: 200m            memory: 200Mi          requests:            cpu: 100m            memory: 100Mi        volumeMounts:        - name: prometheus-alert-center-conf-map          mountPath: /app/conf/app.conf          subPath: app.conf        - name: prometheus-alert-center-conf-map          mountPath: /app/user.csv          subPath: user.csv        - name: prometheus-alert-volume          mountPath: /app/db      volumes:      - name: prometheus-alert-volume        ephemeral:          volumeClaimTemplate:            spec:              accessModes: <span class="token punctuation">[</span><span class="token string">"ReadWriteOnce"</span><span class="token punctuation">]</span>              storageClassName: <span class="token string">"rook-ceph-block"</span>              resources:                requests:                  storage: 1Gi      - name: prometheus-alert-center-conf-map        configMap:          name: prometheus-alert-center-conf          items:          - key: app.conf            path: app.conf          - key: user.csv            path: user.csv---apiVersion: v1kind: Servicemetadata:  labels:    alertname: prometheus-alert-center  name: prometheus-alert-center  namespace: monitoring    annotations:    prometheus.io/scrape: <span class="token string">'true'</span>    prometheus.io/port: <span class="token string">'8080'</span>  spec:  ports:  - name: http    port: <span class="token number">8080</span>    targetPort: http  selector:    app: prometheus-alert-center  type: NodePort---<span class="token comment"># apiVersion: networking.k8s.io/v1beta1</span><span class="token comment"># kind: Ingress</span><span class="token comment"># metadata:</span><span class="token comment">#   annotations:</span><span class="token comment">#     kubernetes.io/ingress.class: nginx</span><span class="token comment">#   name: prometheus-alert-center</span><span class="token comment">#   namespace: monitoring</span><span class="token comment"># spec:</span><span class="token comment">#   rules:</span><span class="token comment">#     - host: alert-center.local</span><span class="token comment">#       http:</span><span class="token comment">#         paths:</span><span class="token comment">#           - backend:</span><span class="token comment">#               serviceName: prometheus-alert-center</span><span class="token comment">#               servicePort: 8080</span><span class="token comment">#             path: /    </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-Plain" data-language="Plain"><div class="caption"><span>Text</span></div><code class="language-Plain">#启动后可使用浏览器打开以下地址查看：http:&#x2F;&#x2F;[YOUR-PrometheusAlert-URL]:8080#默认登录帐号和密码在app.conf中有配置<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>打开钉钉,进入钉钉群中,选择群设置–&gt;智能群助手–&gt;添加机器人–&gt;自定义，可参下图：</p><p><img src="/images/prometheus28.png" alt="image"></p><p><img src="/images/prometheus29.png" alt="image"></p><p>新版本的钉钉加了安全设置,只需选择安全设置中的 自定义关键词 即可,并将关键词设置为 Prometheus或者app.conf中设置的title值均可,参考下图</p><p><img src="/images/prometheus30.png" alt="image"></p><p><img src="/images/prometheus31.png" alt="image"></p><p>复制图中的Webhook地址，并填入PrometheusAlert配置文件app.conf中对应配置项即可。</p><p><strong>PS: 钉钉机器人目前已经支持 <strong><strong>@某人</strong></strong> ,使用该功能需要取得对应用户的钉钉关联手机号码，如下图：</strong></p><p><img src="/images/prometheus32.png" alt="image"></p><p>钉钉相关配置</p><p>** PrometheusAlert-Deployment.yaml**</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#---------------------↓全局配置-----------------------</span><span class="token comment">#告警消息标题</span><span class="token assign-left variable">title</span><span class="token operator">=</span>PrometheusAlert<span class="token comment">#钉钉告警 告警logo图标地址</span><span class="token assign-left variable">logourl</span><span class="token operator">=</span>https://raw.githubusercontent.com/feiyu563/PrometheusAlert/master/doc/alert-center.png<span class="token comment">#钉钉告警 恢复logo图标地址</span><span class="token assign-left variable">rlogourl</span><span class="token operator">=</span>https://raw.githubusercontent.com/feiyu563/PrometheusAlert/master/doc/alert-center.png<span class="token comment">#---------------------↓webhook-----------------------</span><span class="token comment">#是否开启钉钉告警通道,可同时开始多个通道0为关闭,1为开启</span>open-dingding<span class="token operator">=</span><span class="token number">1</span><span class="token comment">#默认钉钉机器人地址</span><span class="token assign-left variable">ddurl</span><span class="token operator">=</span>https://oapi.dingtalk.com/robot/send?access_token<span class="token operator">=</span>xxxxx<span class="token comment">#是否开启 @所有人(0为关闭,1为开启)</span><span class="token assign-left variable">dd_isatall</span><span class="token operator">=</span><span class="token number">1</span><span class="token comment">#是否开启钉钉机器人加签，0为关闭,1为开启</span><span class="token comment"># 使用方法：https://oapi.dingtalk.com/robot/send?access_token=XXXXXX&amp;secret=mysecret</span>open-dingding-secret<span class="token operator">=</span><span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改完之后需要apply此文件，然后修改alertmanager-secret.yaml</p><p>先查看下prometheusalert的svc地址和端口</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 manifests<span class="token punctuation">]</span><span class="token comment"># kubectl get svc -n monitoring </span>NAME                          TYPE        CLUSTER-IP      EXTERNAL-IP   PORT<span class="token punctuation">(</span>S<span class="token punctuation">)</span>                         AGEprometheus-alert-center       NodePort    <span class="token number">10.96</span>.167.90    <span class="token operator">&lt;</span>none<span class="token operator">></span>        <span class="token number">8080</span>:30621/TCP                  3d20h<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 manifests<span class="token punctuation">]</span><span class="token comment"># cat alertmanager-secret.yaml</span>apiVersion: v1kind: Secretmetadata:  labels:    app.kubernetes.io/component: alert-router    app.kubernetes.io/instance: main    app.kubernetes.io/name: alertmanager    app.kubernetes.io/part-of: kube-prometheus    app.kubernetes.io/version: <span class="token number">0.27</span>.0  name: alertmanager-main  namespace: monitoringstringData:  alertmanager.yaml: <span class="token operator">|</span>-    <span class="token string">"global"</span><span class="token builtin class-name">:</span>      <span class="token string">"resolve_timeout"</span><span class="token builtin class-name">:</span> <span class="token string">"5m"</span>      smtp_from: <span class="token string">"15811047166@163.com"</span>      smtp_smarthost: <span class="token string">"smtp.163.com:465"</span>      smtp_hello: <span class="token string">"163.com"</span>      smtp_auth_username: <span class="token string">"15811047166@163.com"</span>      smtp_auth_password: <span class="token string">"KWLDKEYTJSMWYDRV"</span>      smtp_require_tls: <span class="token boolean">false</span>       <span class="token string">"inhibit_rules"</span><span class="token builtin class-name">:</span>    - <span class="token string">"equal"</span><span class="token builtin class-name">:</span>      - <span class="token string">"alertname"</span>      <span class="token string">"source_matchers"</span><span class="token builtin class-name">:</span>      - <span class="token string">"severity = critical"</span>      <span class="token string">"target_matchers"</span><span class="token builtin class-name">:</span>      - <span class="token string">"severity =~ warning|info"</span>    - <span class="token string">"equal"</span><span class="token builtin class-name">:</span>      - <span class="token string">"alertname"</span>      <span class="token string">"source_matchers"</span><span class="token builtin class-name">:</span>      - <span class="token string">"severity = warning"</span>      <span class="token string">"target_matchers"</span><span class="token builtin class-name">:</span>      - <span class="token string">"severity = info"</span>    - <span class="token string">"equal"</span><span class="token builtin class-name">:</span>      - <span class="token string">"namespace"</span>      <span class="token string">"source_matchers"</span><span class="token builtin class-name">:</span>      - <span class="token string">"alertname = InfoInhibitor"</span>      <span class="token string">"target_matchers"</span><span class="token builtin class-name">:</span>      - <span class="token string">"severity = info"</span>    <span class="token string">"receivers"</span><span class="token builtin class-name">:</span>    - <span class="token string">"name"</span><span class="token builtin class-name">:</span> <span class="token string">"Default"</span>      <span class="token string">"email_configs"</span><span class="token builtin class-name">:</span>       - <span class="token string">"to"</span><span class="token builtin class-name">:</span> <span class="token string">"15811047166@163.com"</span>        <span class="token string">"send_resolved"</span><span class="token builtin class-name">:</span> <span class="token boolean">true</span>    - <span class="token string">"name"</span><span class="token builtin class-name">:</span> <span class="token string">"webhook"</span>      webhook_configs: <span class="token comment"># 此url填写prometheusalert svc地址和端口,后面是固定格式type是媒介类型，fs表示飞书，dd表示钉钉,tpl是模板名，后面的url是飞书机器人的webhook连接</span>      - url: <span class="token string">"http://10.96.167.90:8080/prometheusalert?type=fs&amp;tpl=prometheus-fs&amp;fsurl=https://open.feishu.cn/open-apis/bot/v2/hook/xxxxxx"</span>    - <span class="token string">"name"</span><span class="token builtin class-name">:</span> <span class="token string">"Watchdog"</span>    - <span class="token string">"name"</span><span class="token builtin class-name">:</span> <span class="token string">"dingding"</span>      webhook_configs: <span class="token comment"># 此url填写prometheusalert svc地址和端口,后面是固定格式type是媒介类型，fs表示飞书，dd表示钉钉,tpl是模板名，后面的url是钉钉机器人的webhook连接</span>      - url: <span class="token string">"http://10.96.167.90:8080/prometheusalert?type=dd&amp;tpl=prometheus-dd&amp;ddurl=https://oapi.dingtalk.com/robot/send?access_token=xxxxx"</span>    - <span class="token string">"name"</span><span class="token builtin class-name">:</span> <span class="token string">"Critical"</span>    - <span class="token string">"name"</span><span class="token builtin class-name">:</span> <span class="token string">"null"</span>    <span class="token string">"route"</span><span class="token builtin class-name">:</span>      <span class="token string">"group_by"</span><span class="token builtin class-name">:</span>      - <span class="token string">"alertname"</span>      <span class="token string">"group_interval"</span><span class="token builtin class-name">:</span> <span class="token string">"2m"</span>      <span class="token string">"group_wait"</span><span class="token builtin class-name">:</span> <span class="token string">"10s"</span>      <span class="token string">"receiver"</span><span class="token builtin class-name">:</span> <span class="token string">"Default"</span>      <span class="token string">"repeat_interval"</span><span class="token builtin class-name">:</span> <span class="token string">"2m"</span>      <span class="token string">"routes"</span><span class="token builtin class-name">:</span>      - <span class="token string">"matchers"</span><span class="token builtin class-name">:</span>        - <span class="token string">"alertname = Watchdog"</span>        <span class="token string">"receiver"</span><span class="token builtin class-name">:</span> <span class="token string">"Watchdog"</span>      - <span class="token string">"matchers"</span><span class="token builtin class-name">:</span>        - <span class="token string">"alertname = InfoInhibitor"</span>        <span class="token string">"receiver"</span><span class="token builtin class-name">:</span> <span class="token string">"null"</span>      - <span class="token string">"matchers"</span><span class="token builtin class-name">:</span>        - <span class="token string">"severity = critical"</span>        <span class="token string">"receiver"</span><span class="token builtin class-name">:</span> <span class="token string">"dingding"</span>      - <span class="token string">"matchers"</span><span class="token builtin class-name">:</span>        - <span class="token string">"severity = warning"</span>        <span class="token string">"receiver"</span><span class="token builtin class-name">:</span> <span class="token string">"dingding"</span>type: Opaque<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改完成后可以查看alertmanager和 prometheusalert的日志</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 manifests<span class="token punctuation">]</span><span class="token comment"># kubectl logs -f -n monitoring  alertmanager-main-0</span><span class="token assign-left variable">ts</span><span class="token operator">=</span><span class="token number">2024</span>-07-15T02:25:59.706Z <span class="token assign-left variable">caller</span><span class="token operator">=</span>coordinator.go:113 <span class="token assign-left variable">level</span><span class="token operator">=</span>info <span class="token assign-left variable">component</span><span class="token operator">=</span>configuration <span class="token assign-left variable">msg</span><span class="token operator">=</span><span class="token string">"Loading configuration file"</span> <span class="token assign-left variable">file</span><span class="token operator">=</span>/etc/alertmanager/config_out/alertmanager.env.yaml<span class="token assign-left variable">ts</span><span class="token operator">=</span><span class="token number">2024</span>-07-15T02:25:59.707Z <span class="token assign-left variable">caller</span><span class="token operator">=</span>coordinator.go:126 <span class="token assign-left variable">level</span><span class="token operator">=</span>info <span class="token assign-left variable">component</span><span class="token operator">=</span>configuration <span class="token assign-left variable">msg</span><span class="token operator">=</span><span class="token string">"Completed loading of configuration file"</span> <span class="token assign-left variable">file</span><span class="token operator">=</span>/etc/alertmanager/config_out/alertmanager.env.yaml出现此日志表示加载配置成功<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>可以到prometheusalert页面</p><p>填写自定义模板，可以用下面的模板，很好看</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> <span class="token variable">$var</span> :<span class="token operator">=</span> .externalURL<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> <span class="token variable">$status</span> :<span class="token operator">=</span> .status<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> range <span class="token variable">$k</span>,<span class="token variable">$v</span>:<span class="token operator">=</span>.alerts <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>if eq <span class="token variable">$status</span> <span class="token string">"resolved"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">## [告警恢复-通知](&#123;&#123;$var&#125;&#125;)</span><span class="token comment">#### 监控指标: &#123;&#123;$v.labels.alertname&#125;&#125;</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> <span class="token keyword">if</span> eq <span class="token variable">$v</span>.labels.severity <span class="token string">"warning"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">#### 告警级别: **&lt;font color="#E6A23C">&#123;&#123;$v.labels.severity&#125;&#125;&lt;/font>**</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> eq <span class="token variable">$v</span>.labels.severity <span class="token string">"critical"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">#### 告警级别: **&lt;font color="#F56C6C">&#123;&#123;$v.labels.severity&#125;&#125;&lt;/font>**</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> end <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">#### 当前状态: **&lt;font color="#67C23A" size=4>已恢复&lt;/font>**</span><span class="token comment">#### 故障主机: &#123;&#123;$v.labels.instance&#125;&#125;</span>* <span class="token comment">###### 告警阈值: &#123;&#123;$v.labels.threshold&#125;&#125;</span>* <span class="token comment">###### 开始时间: &#123;&#123;GetCSTtime $v.startsAt&#125;&#125;</span>* <span class="token comment">###### 恢复时间: &#123;&#123;GetCSTtime $v.endsAt&#125;&#125;</span><span class="token comment">#### 告警恢复: &lt;font color="#67C23A">已恢复,&#123;&#123;$v.annotations.description&#125;&#125;&lt;/font></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> <span class="token keyword">else</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">## [监控告警-通知](&#123;&#123;$var&#125;&#125;)</span><span class="token comment">#### 监控指标: &#123;&#123;$v.labels.alertname&#125;&#125;</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> <span class="token keyword">if</span> eq <span class="token variable">$v</span>.labels.severity <span class="token string">"warning"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">#### 告警级别: **&lt;font color="#E6A23C" size=4>&#123;&#123;$v.labels.severity&#125;&#125;&lt;/font>**</span><span class="token comment">#### 当前状态: **&lt;font color="#E6A23C">需要处理&lt;/font>**</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> eq <span class="token variable">$v</span>.labels.severity <span class="token string">"critical"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">#### 告警级别: **&lt;font color="#F56C6C" size=4>&#123;&#123;$v.labels.severity&#125;&#125;&lt;/font>**</span><span class="token comment">#### 当前状态: **&lt;font color="#F56C6C">需要处理&lt;/font>**</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> end <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">#### 故障主机: &#123;&#123;$v.labels.instance&#125;&#125;</span>* <span class="token comment">###### 告警阈值: &#123;&#123;$v.labels.threshold&#125;&#125;</span>* <span class="token comment">###### 持续时间: &#123;&#123;$v.labels.for_time&#125;&#125;</span>* <span class="token comment">###### 触发时间: &#123;&#123;GetCSTtime $v.startsAt&#125;&#125;</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> <span class="token keyword">if</span> eq <span class="token variable">$v</span>.labels.severity <span class="token string">"warning"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">#### 告警触发: &lt;font color="#E6A23C">&#123;&#123;$v.annotations.description&#125;&#125;&lt;/font></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> eq <span class="token variable">$v</span>.labels.severity <span class="token string">"critical"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">#### 告警触发: &lt;font color="#F56C6C">&#123;&#123;$v.annotations.description&#125;&#125;&lt;/font></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> end <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> end <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> end <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>填写钉钉机器人地址后点击保存模板，然后点击模板测试</p><p><img src="/images/prometheus33.png" alt="image"></p><p>查看日志</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">2024</span>/07/15 03:48:13.583 <span class="token punctuation">[</span>D<span class="token punctuation">]</span> <span class="token punctuation">[</span>value.go:586<span class="token punctuation">]</span>  <span class="token punctuation">[</span><span class="token number">1721015293583397817</span><span class="token punctuation">]</span> sss<span class="token number">2024</span>/07/15 03:48:13.583 <span class="token punctuation">[</span>D<span class="token punctuation">]</span> <span class="token punctuation">[</span>server.go:2936<span class="token punctuation">]</span>  <span class="token operator">|</span>  <span class="token number">172.16</span>.32.128<span class="token operator">|</span> <span class="token number">200</span> <span class="token operator">|</span>    <span class="token number">456.082</span>µs<span class="token operator">|</span>   match<span class="token operator">|</span> POST     /prometheusalert   r:/prometheusalert如果没有错误表示成功了<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>此时可以根据一个监控指标验证是否可以成功报警，我这里用kubelet来演示，首先查看所有Rule文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 manifests<span class="token punctuation">]</span><span class="token comment"># pwd </span>/root/yaml/prometheus/kube-prometheus-main/manifests<span class="token punctuation">[</span>root@k8s-master01 manifests<span class="token punctuation">]</span><span class="token comment"># ll *Rule*</span>-rw-r--r-- <span class="token number">1</span> root root  <span class="token number">6979</span> <span class="token number">7</span>月   <span class="token number">9</span> 01:29 alertmanager-prometheusRule.yaml-rw-r--r-- <span class="token number">1</span> root root  <span class="token number">1418</span> <span class="token number">7</span>月   <span class="token number">9</span> 01:29 grafana-prometheusRule.yaml-rw-r--r-- <span class="token number">1</span> root root  <span class="token number">4301</span> <span class="token number">7</span>月   <span class="token number">9</span> 01:29 kubePrometheus-prometheusRule.yaml-rw-r--r-- <span class="token number">1</span> root root <span class="token number">73239</span> <span class="token number">7</span>月   <span class="token number">9</span> 01:29 kubernetesControlPlane-prometheusRule.yaml-rw-r--r-- <span class="token number">1</span> root root  <span class="token number">3830</span> <span class="token number">7</span>月  <span class="token number">12</span> <span class="token number">16</span>:39 kubeStateMetrics-prometheusRule.yaml-rw-r--r-- <span class="token number">1</span> root root <span class="token number">19720</span> <span class="token number">7</span>月   <span class="token number">9</span> 01:29 nodeExporter-prometheusRule.yaml-rw-r--r-- <span class="token number">1</span> root root  <span class="token number">6591</span> <span class="token number">7</span>月   <span class="token number">9</span> 01:29 prometheusOperator-prometheusRule.yaml-rw-r--r-- <span class="token number">1</span> root root <span class="token number">17256</span> <span class="token number">7</span>月   <span class="token number">9</span> 01:29 prometheus-prometheusRule.yaml<span class="token comment"># 或者通过这个方式查询</span><span class="token punctuation">[</span>root@k8s-master01 prometheus<span class="token punctuation">]</span><span class="token comment"># kubectl get prometheusrule -n monitoring </span>NAME                              AGEalertmanager-main-rules           5d3hgrafana-rules                     5d3hkube-prometheus-rules             5d3hkube-state-metrics-rules          2d20hkubernetes-monitoring-rules       5d3hnode-exporter-rules               5d3hprometheus-k8s-prometheus-rules   5d3hprometheus-operator-rules         5d3hlabels：告警的标签，用于告警的路由<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后根据文件名，去添加你需要的指标，我这里在<code>kubeStateMetrics-prometheusRule.yaml </code>文件添加了（不固定，想在哪个文件添加都可以，前提你的监控指标要和文件名相对应最好），在文件最后面添加</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 manifests<span class="token punctuation">]</span><span class="token comment"># vim kubeStateMetrics-prometheusRule.yaml</span>    - alert: K8S Node节点状态NotReady      expr: kube_node_status_condition<span class="token punctuation">&#123;</span>condition<span class="token operator">=</span><span class="token string">"Ready"</span>,status<span class="token operator">=</span><span class="token string">"true"</span><span class="token punctuation">&#125;</span> <span class="token operator">==</span> <span class="token number">0</span>      for: 1m      labels:        severity: critical        level: <span class="token string">"高"</span>      annotations:        summary: K8s节点状态异常 <span class="token punctuation">(</span>instance <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> <span class="token variable">$labels</span>.instance <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        description: <span class="token string">"节点 &#123;&#123; <span class="token variable">$labels</span>.node &#125;&#125; NotReady，请尽快处理！ <span class="token entity" title="\n">\n</span> "</span>        owner: <span class="token string">"运维工程师-杜杰"</span>        panelURL: <span class="token string">"http://192.168.31.21:32159/alerts?search="</span>        alertURL: <span class="token string">"http://192.168.31.20:30336/d/3138fa155d5915769fbded898ac09fd9/kubernetes-kubelet?orgId=1&amp;refresh=10s&amp;var-datasource=default&amp;var-cluster=&amp;var-instance=All"</span><span class="token punctuation">[</span>root@k8s-master01 manifests<span class="token punctuation">]</span><span class="token comment"># kubectl apply -f kubeStateMetrics-prometheusRule.yaml</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>alert</code>：告警策略的名称</li><li><code>annotations</code>：告警注释信息，一般写为告警信息</li><li><code>expr</code>：告警表达式</li><li><code>for</code>：评估等待时间，告警持续多久才会发送告警数据</li></ul><p>以上的值都可以在模板中进行调用。</p><p>更新完成之后依然可以查看日志，等待更新之后就可以进行测试</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 manifests<span class="token punctuation">]</span><span class="token comment"># kubectl logs -f -n monitoring  alertmanager-main-0</span><span class="token assign-left variable">ts</span><span class="token operator">=</span><span class="token number">2024</span>-07-15T02:25:59.706Z <span class="token assign-left variable">caller</span><span class="token operator">=</span>coordinator.go:113 <span class="token assign-left variable">level</span><span class="token operator">=</span>info <span class="token assign-left variable">component</span><span class="token operator">=</span>configuration <span class="token assign-left variable">msg</span><span class="token operator">=</span><span class="token string">"Loading configuration file"</span> <span class="token assign-left variable">file</span><span class="token operator">=</span>/etc/alertmanager/config_out/alertmanager.env.yaml<span class="token assign-left variable">ts</span><span class="token operator">=</span><span class="token number">2024</span>-07-15T02:25:59.707Z <span class="token assign-left variable">caller</span><span class="token operator">=</span>coordinator.go:126 <span class="token assign-left variable">level</span><span class="token operator">=</span>info <span class="token assign-left variable">component</span><span class="token operator">=</span>configuration <span class="token assign-left variable">msg</span><span class="token operator">=</span><span class="token string">"Completed loading of configuration file"</span> <span class="token assign-left variable">file</span><span class="token operator">=</span>/etc/alertmanager/config_out/alertmanager.env.yaml出现此日志表示加载配置成功<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="告警测试"><a href="#告警测试" class="headerlink" title="告警测试"></a>告警测试</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get nodes </span>NAME           STATUS   ROLES           AGE     VERSIONk8s-master01   Ready    control-plane   5d23h   v1.30.2k8s-master02   Ready    control-plane   5d23h   v1.30.2k8s-master03   Ready    control-plane   5d23h   v1.30.2k8s-node01     Ready    <span class="token operator">&lt;</span>none<span class="token operator">></span>          5d23h   v1.30.2k8s-node02     Ready    <span class="token operator">&lt;</span>none<span class="token operator">></span>          5d23h   v1.30.2k8s-node03     Ready    <span class="token operator">&lt;</span>none<span class="token operator">></span>          5d23h   v1.30.2k8s-node04     Ready    <span class="token operator">&lt;</span>none<span class="token operator">></span>          5d23h   v1.30.2k8s-node05     Ready    <span class="token operator">&lt;</span>none<span class="token operator">></span>          5d23h   v1.30.2k8s-node06     Ready    <span class="token operator">&lt;</span>none<span class="token operator">></span>          5d23h   v1.30.2<span class="token comment"># 关掉其中一台节点的kubelet，我这里关掉node06节点，稍等一会后等待状态为Not_Ready</span><span class="token punctuation">[</span>root@k8s-node06 ~<span class="token punctuation">]</span><span class="token comment"># systemctl stop kubelet </span><span class="token punctuation">[</span>root@k8s-master01 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get nodes </span>NAME           STATUS     ROLES           AGE     VERSIONk8s-master01   Ready      control-plane   5d23h   v1.30.2k8s-master02   Ready      control-plane   5d23h   v1.30.2k8s-master03   Ready      control-plane   5d23h   v1.30.2k8s-node01     Ready      <span class="token operator">&lt;</span>none<span class="token operator">></span>          5d23h   v1.30.2k8s-node02     Ready      <span class="token operator">&lt;</span>none<span class="token operator">></span>          5d23h   v1.30.2k8s-node03     Ready      <span class="token operator">&lt;</span>none<span class="token operator">></span>          5d23h   v1.30.2k8s-node04     Ready      <span class="token operator">&lt;</span>none<span class="token operator">></span>          5d23h   v1.30.2k8s-node05     Ready      <span class="token operator">&lt;</span>none<span class="token operator">></span>          5d23h   v1.30.2k8s-node06     NotReady   <span class="token operator">&lt;</span>none<span class="token operator">></span>          5d23h   v1.30.2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>稍等一会可以查看钉钉已经收到报警了，这个时间是根据你alertmanager 和Rule里面的for时间来报警的，我上面for的时间设置为1分钟，表示查询表达式的值必须持续1分钟都为真才会报警，目的是为了防止偶发的短暂问题而触发报警。</p><p><img src="/images/prometheus34.png" alt="image"></p><h3 id="四、使用prometheus-Alert实现飞书告警"><a href="#四、使用prometheus-Alert实现飞书告警" class="headerlink" title="四、使用prometheus Alert实现飞书告警"></a>四、使用prometheus Alert实现飞书告警</h3><p>和钉钉实现类似，这里只写修改的内容</p><h5 id="4-1-修改PromethesuAlert配置"><a href="#4-1-修改PromethesuAlert配置" class="headerlink" title="4.1 修改PromethesuAlert配置"></a>4.1 修改PromethesuAlert配置</h5><p> fsurl请填自己飞书机器人的webhook地址</p><p><img src="/images/prometheus35.png" alt="image"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 prometheus<span class="token punctuation">]</span><span class="token comment"># vim PrometheusAlert-Deployment.yaml </span>    <span class="token comment">#是否开启飞书告警通道,可同时开始多个通道0为关闭,1为开启</span>    open-feishu<span class="token operator">=</span><span class="token number">1</span>    <span class="token comment">#默认飞书机器人地址</span>    <span class="token assign-left variable">fsurl</span><span class="token operator">=</span>https://open.feishu.cn/open-apis/bot/v2/hook/61xxxxx    <span class="token comment"># webhook 发送 http 请求的 contentType, 如 application/json, application/x-www-form-urlencoded，不配置默认 application/json</span>    <span class="token assign-left variable">wh_contenttype</span><span class="token operator">=</span>application/json<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="4-2-修改alertmanger配置"><a href="#4-2-修改alertmanger配置" class="headerlink" title="4.2 修改alertmanger配置"></a>4.2 修改alertmanger配置</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 manifests<span class="token punctuation">]</span><span class="token comment"># vim alertmanager-secret.yaml</span><span class="token punctuation">..</span>.    <span class="token string">"receivers"</span><span class="token builtin class-name">:</span>    - <span class="token string">"name"</span><span class="token builtin class-name">:</span> <span class="token string">"Default"</span>      <span class="token string">"email_configs"</span><span class="token builtin class-name">:</span>      - <span class="token string">"to"</span><span class="token builtin class-name">:</span> <span class="token string">"15811047166@163.com"</span>        <span class="token string">"send_resolved"</span><span class="token builtin class-name">:</span> <span class="token boolean">true</span>    - <span class="token string">"name"</span><span class="token builtin class-name">:</span> <span class="token string">"webhook"</span>      webhook_configs:      - url: <span class="token string">"http://10.96.167.90:8080/prometheusalert?type=fs&amp;tpl=prometheus-fs&amp;fsurl=https://open.feishu.cn/open-apis/bot/v2/hook/61132219-e82a-4aae-9186-3664efa9d8c1"</span><span class="token punctuation">..</span>.    <span class="token string">"route"</span><span class="token builtin class-name">:</span>      <span class="token string">"group_by"</span><span class="token builtin class-name">:</span>      - <span class="token string">"alertname"</span>      <span class="token string">"group_interval"</span><span class="token builtin class-name">:</span> <span class="token string">"2m"</span>      <span class="token string">"group_wait"</span><span class="token builtin class-name">:</span> <span class="token string">"10s"</span>      <span class="token string">"receiver"</span><span class="token builtin class-name">:</span> <span class="token string">"Default"</span>      <span class="token string">"repeat_interval"</span><span class="token builtin class-name">:</span> <span class="token string">"2m"</span>      <span class="token string">"routes"</span><span class="token builtin class-name">:</span>      - <span class="token string">"matchers"</span><span class="token builtin class-name">:</span>        - <span class="token string">"alertname = Watchdog"</span>        <span class="token string">"receiver"</span><span class="token builtin class-name">:</span> <span class="token string">"Watchdog"</span>      - <span class="token string">"matchers"</span><span class="token builtin class-name">:</span>        - <span class="token string">"alertname = InfoInhibitor"</span>        <span class="token string">"receiver"</span><span class="token builtin class-name">:</span> <span class="token string">"null"</span>      - <span class="token string">"matchers"</span><span class="token builtin class-name">:</span>        - <span class="token string">"severity = critical"</span>        <span class="token string">"receiver"</span><span class="token builtin class-name">:</span> <span class="token string">"webhook"</span><span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>重启他们之后即可发送</p><h1 id="五、域名访问延迟告警"><a href="#五、域名访问延迟告警" class="headerlink" title="五、域名访问延迟告警"></a>五、域名访问延迟告警</h1><p>域名访问延迟告警：</p><p>假设需要对域名访问延迟进行监控，访问延迟大于 0.01 秒进行告警（我这里是测试才用的0.01，生产环境需要按照各自业务设置），此时可以创建一个PrometheusRule 如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 manifests<span class="token punctuation">]</span><span class="token comment"># cat blackbox.yaml </span>apiVersion: monitoring.coreos.com/v1kind: PrometheusRulemetadata: labels:   app.kubernetes.io/component: exporter   app.kubernetes.io/name: blackbox-exporter   prometheus: k8s   role: alert-rules name: blackbox  namespace: monitoringspec: groups: - name: blackbox-exporter   rules:   - alert: DomainAccessDelayExceeds1s     annotations:       description: 域名：<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> <span class="token variable">$labels</span>.instance <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> 探测延迟大于 <span class="token number">0.01</span> 秒，当前延迟为：<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> <span class="token variable">$value</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>       summary: 域名探测，访问延迟超过 <span class="token number">0.01</span> 秒     expr: sum<span class="token punctuation">(</span>probe_http_duration_seconds<span class="token punctuation">&#123;</span>job<span class="token operator">=~</span><span class="token string">"blackbox"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> by <span class="token punctuation">(</span>instance<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0.01</span>     for: 1m     labels:       severity: warning       type: blackbox<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>创建并查看该 PrometheusRule：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 manifests<span class="token punctuation">]</span><span class="token comment"># kubectl create -f blackbox.yaml </span>prometheusrule.monitoring.coreos.com/blackbox created<span class="token punctuation">[</span>root@k8s-master01 manifests<span class="token punctuation">]</span><span class="token comment"># kubectl get -f blackbox.yaml </span>NAME AGEblackbox 65s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>之后也可以在 Prometheus 的 Web UI 看到此规则：</p><p><img src="/images/prometheus36.png" alt="image"></p><p>然后可以看到刚才配置的钉钉已经收到告警了</p><p><img src="/images/prometheus37.png" alt="image"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;prometheus-operator&quot;&gt;&lt;a href=&quot;#prometheus-operator&quot; class=&quot;headerlink&quot; title=&quot;prometheus operator&quot;&gt;&lt;/a&gt;prometheus operator&lt;/h1&gt;&lt;p&gt;此文</summary>
      
    
    
    
    <category term="prometheus" scheme="http://dycloud.fun/categories/prometheus/"/>
    
    
    <category term="prometheus" scheme="http://dycloud.fun/tags/prometheus/"/>
    
  </entry>
  
  <entry>
    <title>使用rook-ceph部署高可用ceph集群</title>
    <link href="http://dycloud.fun/2024/05/23/%E4%BD%BF%E7%94%A8rook-ceph%E9%83%A8%E7%BD%B2%E9%AB%98%E5%8F%AF%E7%94%A8ceph%E9%9B%86%E7%BE%A4/"/>
    <id>http://dycloud.fun/2024/05/23/%E4%BD%BF%E7%94%A8rook-ceph%E9%83%A8%E7%BD%B2%E9%AB%98%E5%8F%AF%E7%94%A8ceph%E9%9B%86%E7%BE%A4/</id>
    <published>2024-05-23T07:51:23.000Z</published>
    <updated>2024-07-15T05:56:41.540Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用rook-ceph部署高可用ceph集群"><a href="#使用rook-ceph部署高可用ceph集群" class="headerlink" title="使用rook-ceph部署高可用ceph集群"></a>使用rook-ceph部署高可用ceph集群</h1><h3 id="一、Rook介绍及安装"><a href="#一、Rook介绍及安装" class="headerlink" title="一、Rook介绍及安装"></a>一、Rook介绍及安装</h3><p>注意 1：rook 的版本大于 1.3，不要使用目录创建集群，要使用单独的裸盘进行创建，也就是创建一个新的磁盘，挂载到宿主机，不进行格式化，直接使用即可。对于的磁盘节点配置如下：</p><p><img src="/images/ceph1.png" alt="image"></p><p>注意 2：做这个实验需要高配置，每个节点配置不能低于 2 核 4G</p><p>注意 3：k8s 1.19 以上版本，快照功能需要单独安装 snapshot 控制器</p><h5 id="1-1-Rook介绍"><a href="#1-1-Rook介绍" class="headerlink" title="1.1 Rook介绍"></a>1.1 Rook介绍</h5><p>Rook是一种开源的、云原生存储的编排器，可以为各种存储服务在云原生的环境中实现无缝先和，提供了所必须的平台、框架和服务；而Ceph是Rook所支持的众多存储的一种，在k8s环境中，Ceph基于Rook能够为应用提供块存储（Block Storage），对象存储（Object Storage）以及共享文件系统服务。</p><p><a href="https://rook.io/docs/rook/v1.14/Getting-Started/quickstart/#prerequisites">https://rook.io/docs/rook/v1.14/Getting-Started/quickstart/#prerequisites</a></p><h5 id="1-2-下载Rook安装文件"><a href="#1-2-下载Rook安装文件" class="headerlink" title="1.2 下载Rook安装文件"></a>1.2 下载Rook安装文件</h5><p>下载指定版本Rook</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> clone --single-branch --branch v1.14.7 https://github.com/rook/rook.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="1-3-配置更改"><a href="#1-3-配置更改" class="headerlink" title="1.3 配置更改"></a>1.3 配置更改</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 examples<span class="token punctuation">]</span><span class="token comment"># cd /root/yaml/rook/rook/deploy/examples</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改Rook CSI镜像地址，原本的地址可能是gcr的进行，国内无法访问，所以我这边是通过一台香港节点的机器pull然后推送到我本地镜像仓库进行下载。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 examples<span class="token punctuation">]</span><span class="token comment"># egrep -v "#|^$" operator.yaml</span><span class="token comment"># 定义了Rook Ceph Operator 的配置参数</span>kind: ConfigMap apiVersion: v1metadata:  name: rook-ceph-operator-configdata:  <span class="token comment"># 日志级别</span>  ROOK_LOG_LEVEL: <span class="token string">"INFO"</span>  <span class="token comment"># 是否允许使用循环设备</span>  ROOK_CEPH_ALLOW_LOOP_DEVICES: <span class="token string">"false"</span>  <span class="token comment"># 是否使用CephFS CSI插件</span>  ROOK_CSI_ENABLE_CEPHFS: <span class="token string">"true"</span>  <span class="token comment"># 是否启用RBD 插件</span>  ROOK_CSI_ENABLE_RBD: <span class="token string">"true"</span>  <span class="token comment"># 是否使用NFS插件</span>  ROOK_CSI_ENABLE_NFS: <span class="token string">"false"</span>  <span class="token comment"># 是否禁用CSI 驱动</span>  ROOK_CSI_DISABLE_DRIVER: <span class="token string">"false"</span>  <span class="token comment"># 是否开启CSI 加密</span>  CSI_ENABLE_ENCRYPTION: <span class="token string">"false"</span>  <span class="token comment"># 是否禁用持有者Pod</span>  CSI_DISABLE_HOLDER_PODS: <span class="token string">"true"</span>  <span class="token comment"># CSI 供应者副本数</span>  CSI_PROVISIONER_REPLICAS: <span class="token string">"2"</span>  <span class="token comment"># 是否启用CephFS 快照功能</span>  CSI_ENABLE_CEPHFS_SNAPSHOTTER: <span class="token string">"true"</span>  <span class="token comment"># 是否启用NFS 快照功能</span>  CSI_ENABLE_NFS_SNAPSHOTTER: <span class="token string">"true"</span>  <span class="token comment"># 是否启用RBD 快照功能</span>  CSI_ENABLE_RBD_SNAPSHOTTER: <span class="token string">"true"</span>  <span class="token comment"># 是否启用卷组快照</span>  CSI_ENABLE_VOLUME_GROUP_SNAPSHOT: <span class="token string">"true"</span>  <span class="token comment"># 是否强制使用 CephFS 内核客户端</span>  CSI_FORCE_CEPHFS_KERNEL_CLIENT: <span class="token string">"true"</span>  <span class="token comment"># RBD CSI 插件的 FSGroup 策略</span>  CSI_RBD_FSGROUPPOLICY: <span class="token string">"File"</span>  <span class="token comment"># CephFS CSI 插件的 FSGroup 策略</span>  CSI_CEPHFS_FSGROUPPOLICY: <span class="token string">"File"</span>  <span class="token comment"># NFS CSI 插件的 FSGroup 策略</span>  CSI_NFS_FSGROUPPOLICY: <span class="token string">"File"</span>  <span class="token comment"># 是否允许使用不受支持的 Ceph 版本</span>  ROOK_CSI_ALLOW_UNSUPPORTED_VERSION: <span class="token string">"false"</span>  <span class="token comment"># 是否启用 SELinux 主机挂载</span>  CSI_PLUGIN_ENABLE_SELINUX_HOST_MOUNT: <span class="token string">"false"</span>  <span class="token comment"># Ceph CSI 插件的镜像</span>  ROOK_CSI_CEPH_IMAGE: <span class="token string">"harbor.dujie.com/dujie/cephcsi:v3.11.0"</span>  <span class="token comment"># CSI 节点驱动注册器镜像</span>  ROOK_CSI_REGISTRAR_IMAGE: <span class="token string">"harbor.dujie.com/dujie/csi-node-driver-registrar:v2.10.1"</span>  <span class="token comment"># CSI 调整器镜像</span>  ROOK_CSI_RESIZER_IMAGE: <span class="token string">"harbor.dujie.com/dujie/csi-resizer:v1.10.1"</span>  <span class="token comment"># CSI 供应者镜像</span>  ROOK_CSI_PROVISIONER_IMAGE: <span class="token string">"harbor.dujie.com/dujie/csi-provisioner:v4.0.1"</span>  <span class="token comment"># CSI 快照管理器镜像</span>  ROOK_CSI_SNAPSHOTTER_IMAGE: <span class="token string">"harbor.dujie.com/dujie/csi-snapshotter:v7.0.2"</span>  <span class="token comment"># CSI 附件管理器镜像</span>  ROOK_CSI_ATTACHER_IMAGE: <span class="token string">"harbor.dujie.com/dujie/csi-attacher:v4.5.1"</span>  <span class="token comment"># CSI 插件的优先级类名称</span>  CSI_PLUGIN_PRIORITY_CLASSNAME: <span class="token string">"system-node-critical"</span>  <span class="token comment"># CSI 供应者的优先级类名称</span>  CSI_PROVISIONER_PRIORITY_CLASSNAME: <span class="token string">"system-cluster-critical"</span>  <span class="token comment"># CSI 供应者的容忍度</span>  CSI_PROVISIONER_TOLERATIONS: <span class="token operator">|</span>    - effect: NoSchedule      key: node-role.kubernetes.io/control-plane      operator: Exists    - effect: NoExecute      key: node-role.kubernetes.io/etcd      operator: Exists  <span class="token comment"># 是否启用 CSI 活性检测</span>  CSI_ENABLE_LIVENESS: <span class="token string">"false"</span>  <span class="token comment"># 是否监视 Operator 命名空间</span>  ROOK_OBC_WATCH_OPERATOR_NAMESPACE: <span class="token string">"true"</span>  <span class="token comment"># 是否启用发现守护进程</span>  ROOK_ENABLE_DISCOVERY_DAEMON: <span class="token string">"true"</span>  <span class="token comment"># Ceph 命令超时时间</span>  ROOK_CEPH_COMMANDS_TIMEOUT_SECONDS: <span class="token string">"15"</span>  <span class="token comment"># 是否启用 CSI 插件</span>  CSI_ENABLE_CSIADDONS: <span class="token string">"false"</span>  <span class="token comment"># 是否监视节点故障</span>  ROOK_WATCH_FOR_NODE_FAILURE: <span class="token string">"true"</span>  <span class="token comment"># CSI gRPC 超时时间</span>  CSI_GRPC_TIMEOUT_SECONDS: <span class="token string">"150"</span>  <span class="token comment"># 是否启用拓扑管理</span>  CSI_ENABLE_TOPOLOGY: <span class="token string">"false"</span>  <span class="token comment"># 是否需要 CephFS 附件</span>  CSI_CEPHFS_ATTACH_REQUIRED: <span class="token string">"true"</span>  <span class="token comment"># 是否需要 RBD 附件</span>  CSI_RBD_ATTACH_REQUIRED: <span class="token string">"true"</span>  <span class="token comment"># 是否需要 NFS 附件</span>  CSI_NFS_ATTACH_REQUIRED: <span class="token string">"true"</span>  <span class="token comment"># 是否禁用设备热插拔</span>  ROOK_DISABLE_DEVICE_HOTPLUG: <span class="token string">"false"</span>  <span class="token comment"># 设备发现间隔</span>  ROOK_DISCOVER_DEVICES_INTERVAL: <span class="token string">"60m"</span><span class="token comment"># Deployment 定义了 Rook Ceph Operator 的部署设置</span>apiVersion: apps/v1kind: Deploymentmetadata:  name: rook-ceph-operator <span class="token comment"># Deployment 的名称</span>  labels:    operator: rook <span class="token comment"># 标签，用于标识 Operator</span>    storage-backend: ceph <span class="token comment"># 存储后端类型</span>    app.kubernetes.io/name: rook-ceph <span class="token comment"># 应用名称</span>    app.kubernetes.io/instance: rook-ceph <span class="token comment"># 应用实例名称</span>    app.kubernetes.io/component: rook-ceph-operator <span class="token comment"># 组件名称</span>    app.kubernetes.io/part-of: rook-ceph-operator <span class="token comment"># 所属部分</span>spec:  selector:    matchLabels:      app: rook-ceph-operator <span class="token comment"># 选择器，用于匹配 Pod</span>  strategy:    type: Recreate <span class="token comment"># 更新策略类型</span>  replicas: <span class="token number">1</span> <span class="token comment"># 副本数</span>  template:    metadata:      labels:        app: rook-ceph-operator <span class="token comment"># Pod 的标签</span>    spec:      tolerations:        - effect: NoExecute          key: node.kubernetes.io/unreachable          operator: Exists          tolerationSeconds: <span class="token number">5</span>      serviceAccountName: rook-ceph-system <span class="token comment"># 使用的服务账户</span>      containers:        - name: rook-ceph-operator <span class="token comment"># 容器名称</span>          image: harbor.dujie.com/dujie/ceph:v1.14.7 <span class="token comment"># 使用的镜像</span>          args: <span class="token punctuation">[</span><span class="token string">"ceph"</span>, <span class="token string">"operator"</span><span class="token punctuation">]</span> <span class="token comment"># 启动参数</span>          securityContext:            runAsNonRoot: <span class="token boolean">true</span> <span class="token comment"># 非 root 用户运行</span>            runAsUser: <span class="token number">2016</span> <span class="token comment"># 运行用户 ID</span>            runAsGroup: <span class="token number">2016</span> <span class="token comment"># 运行用户组 ID</span>            capabilities:              drop: <span class="token punctuation">[</span><span class="token string">"ALL"</span><span class="token punctuation">]</span> <span class="token comment"># 丢弃所有能力</span>          volumeMounts:            - mountPath: /var/lib/rook <span class="token comment"># 挂载路径</span>              name: rook-config <span class="token comment"># 挂载的卷名称</span>            - mountPath: /etc/ceph <span class="token comment"># 挂载路径</span>              name: default-config-dir <span class="token comment"># 挂载的卷名称</span>          env:            - name: ROOK_CURRENT_NAMESPACE_ONLY              value: <span class="token string">"true"</span>            - name: ROOK_HOSTPATH_REQUIRES_PRIVILEGED              value: <span class="token string">"false"</span>            - name: DISCOVER_DAEMON_UDEV_BLACKLIST              value: <span class="token string">"(?i)dm-[0-9]+,(?i)rbd[0-9]+,(?i)nbd[0-9]+"</span>            - name: ROOK_UNREACHABLE_NODE_TOLERATION_SECONDS              value: <span class="token string">"5"</span>            - name: NODE_NAME              valueFrom:                fieldRef:                  fieldPath: spec.nodeName            - name: POD_NAME              valueFrom:                fieldRef:                  fieldPath: metadata.name            - name: POD_NAMESPACE              valueFrom:                fieldRef:                  fieldPath: metadata.namespace      volumes:        - name: rook-config          emptyDir: <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span> <span class="token comment"># 空目录卷</span>        - name: default-config-dir          emptyDir: <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span> <span class="token comment"># 空目录卷</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面所需镜像需要自行同步，并且新版本rook默认关闭了自动发现容器的部署，可以找到<code>ROOK_CURRENT_NAMESPACE_ONLY</code> 改成<code>true</code>即可</p><p><img src="/images/ceph2.png" alt="image"></p><h5 id="1-4-部署rook"><a href="#1-4-部署rook" class="headerlink" title="1.4 部署rook"></a>1.4 部署rook</h5><p>我这边部署的是v1.14版本，</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 examples<span class="token punctuation">]</span><span class="token comment"># cd /root/yaml/rook/rook/deploy/examples</span><span class="token comment"># 执行这个命令（crds.yaml和common.yaml无需更改内容）</span><span class="token punctuation">[</span>root@k8s-master01 examples<span class="token punctuation">]</span><span class="token comment"># kubectl create -f crds.yaml -f common.yaml -f operator.yaml</span><span class="token punctuation">[</span>root@k8s-master01 rook<span class="token punctuation">]</span><span class="token comment"># kubectl get pods -n rook-ceph </span>NAME                                                   READY   STATUS                  RESTARTS   AGErook-ceph-operator-7c566fbc4f-64f89                    <span class="token number">1</span>/1     Running                 <span class="token number">0</span>          3m50srook-discover-4cjmw                                    <span class="token number">1</span>/1     Running                 <span class="token number">0</span>          49mrook-discover-6skl9                                    <span class="token number">1</span>/1     Running                 <span class="token number">0</span>          45mrook-discover-pxj94                                    <span class="token number">1</span>/1     Running                 <span class="token number">0</span>          49mrook-discover-qwqkf                                    <span class="token number">1</span>/1     Running                 <span class="token number">0</span>          49mrook-discover-wl4tn                                    <span class="token number">1</span>/1     Running                 <span class="token number">0</span>          49m<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>全部变成1&#x2F;1， Running 才可以创建Ceph集群</p><h3 id="二、创建ceph集群"><a href="#二、创建ceph集群" class="headerlink" title="二、创建ceph集群"></a>二、创建ceph集群</h3><h5 id="2-1-配置更改"><a href="#2-1-配置更改" class="headerlink" title="2.1 配置更改"></a>2.1 配置更改</h5><p>修改cluster.yaml文件，更改osd节点，新版必须采用裸盘，即未格式化的磁盘。我这里选了3个节点，可以通过lsblk查看</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-node01 ~<span class="token punctuation">]</span><span class="token comment"># lsblk</span>NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTsda      <span class="token number">8</span>:0    <span class="token number">0</span>  100G  <span class="token number">0</span> disk ├─sda1   <span class="token number">8</span>:1    <span class="token number">0</span>  300M  <span class="token number">0</span> part /boot├─sda2   <span class="token number">8</span>:2    <span class="token number">0</span>  <span class="token number">7</span>.9G  <span class="token number">0</span> part └─sda3   <span class="token number">8</span>:3    <span class="token number">0</span> <span class="token number">91</span>.9G  <span class="token number">0</span> part /sdb      <span class="token number">8</span>:16   <span class="token number">0</span>  100G  <span class="token number">0</span> disk sr0     <span class="token number">11</span>:0    <span class="token number">1</span> 1024M  <span class="token number">0</span> rom   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">  storage: <span class="token comment"># cluster level storage configuration and selection</span>    useAllNodes: <span class="token boolean">false</span>    useAllDevices: <span class="token boolean">false</span><span class="token punctuation">..</span>.    nodes:      - name: <span class="token string">"k8s-node01"</span>        devices:        - name: <span class="token string">"sdb"</span>      - name: <span class="token string">"k8s-node02"</span>        devices:        - name: <span class="token string">"sdb"</span>      - name: <span class="token string">"k8s-node03"</span>        devices:        - name: <span class="token string">"sdb"</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2-2-创建Ceph集群"><a href="#2-2-创建Ceph集群" class="headerlink" title="2.2 创建Ceph集群"></a>2.2 创建Ceph集群</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 examples<span class="token punctuation">]</span><span class="token comment"># kubectl apply -f cluster.yaml </span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>创建完成可以查看pod的状态</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get pods -n rook-ceph </span>NAME                                                   READY   STATUS      RESTARTS   AGEcsi-cephfsplugin-5g28z                                 <span class="token number">2</span>/2     Running     <span class="token number">0</span>          62mcsi-cephfsplugin-6qdzp                                 <span class="token number">2</span>/2     Running     <span class="token number">0</span>          62mcsi-cephfsplugin-7fkpb                                 <span class="token number">2</span>/2     Running     <span class="token number">0</span>          62mcsi-cephfsplugin-h6jmn                                 <span class="token number">2</span>/2     Running     <span class="token number">0</span>          62mcsi-cephfsplugin-provisioner-cc7987fb7-52mgq           <span class="token number">5</span>/5     Running     <span class="token number">0</span>          62mcsi-cephfsplugin-provisioner-cc7987fb7-mhsjs           <span class="token number">5</span>/5     Running     <span class="token number">0</span>          62mcsi-cephfsplugin-qv4cx                                 <span class="token number">2</span>/2     Running     <span class="token number">0</span>          62mcsi-rbdplugin-552l5                                    <span class="token number">2</span>/2     Running     <span class="token number">0</span>          62mcsi-rbdplugin-hs79b                                    <span class="token number">2</span>/2     Running     <span class="token number">0</span>          62mcsi-rbdplugin-jrfd5                                    <span class="token number">2</span>/2     Running     <span class="token number">0</span>          62mcsi-rbdplugin-n6kkx                                    <span class="token number">2</span>/2     Running     <span class="token number">0</span>          62mcsi-rbdplugin-provisioner-85c667b47b-tjl5s             <span class="token number">5</span>/5     Running     <span class="token number">0</span>          62mcsi-rbdplugin-provisioner-85c667b47b-xrbbz             <span class="token number">5</span>/5     Running     <span class="token number">0</span>          62mcsi-rbdplugin-qk6ln                                    <span class="token number">2</span>/2     Running     <span class="token number">0</span>          62mrook-ceph-crashcollector-k8s-node02-7fcbff9677-qbghz   <span class="token number">1</span>/1     Running     <span class="token number">0</span>          61mrook-ceph-crashcollector-k8s-node03-849b95bd-b55pq     <span class="token number">1</span>/1     Running     <span class="token number">0</span>          61mrook-ceph-crashcollector-k8s-node04-6b759cd7dc-tlq2v   <span class="token number">1</span>/1     Running     <span class="token number">0</span>          61mrook-ceph-exporter-k8s-node02-6ddc75ddb8-7fm7d         <span class="token number">1</span>/1     Running     <span class="token number">0</span>          61mrook-ceph-exporter-k8s-node03-585c554f77-2ggt2         <span class="token number">1</span>/1     Running     <span class="token number">0</span>          61mrook-ceph-exporter-k8s-node04-6898d69454-lncs2         <span class="token number">1</span>/1     Running     <span class="token number">0</span>          61mrook-ceph-mgr-a-55bcdd48bd-zf8mr                       <span class="token number">3</span>/3     Running     <span class="token number">0</span>          61mrook-ceph-mgr-b-65444cc96f-bwsh5                       <span class="token number">3</span>/3     Running     <span class="token number">0</span>          61mrook-ceph-mon-a-66fcf4fdf7-242sp                       <span class="token number">2</span>/2     Running     <span class="token number">0</span>          62mrook-ceph-mon-b-55f9d8cf8-tcq7r                        <span class="token number">2</span>/2     Running     <span class="token number">0</span>          61mrook-ceph-mon-c-7d8c78b9dd-tq6c5                       <span class="token number">2</span>/2     Running     <span class="token number">0</span>          61mrook-ceph-operator-7c566fbc4f-vkn29                    <span class="token number">1</span>/1     Running     <span class="token number">0</span>          62mrook-ceph-osd-prepare-k8s-node01-dsnb9                 <span class="token number">0</span>/1     Completed   <span class="token number">0</span>          59mrook-ceph-osd-prepare-k8s-node02-jxpxv                 <span class="token number">0</span>/1     Completed   <span class="token number">0</span>          59mrook-ceph-osd-prepare-k8s-node03-mzgdd                 <span class="token number">0</span>/1     Completed   <span class="token number">0</span>          59mrook-discover-bgt9d                                    <span class="token number">1</span>/1     Running     <span class="token number">0</span>          62mrook-discover-gjxvl                                    <span class="token number">1</span>/1     Running     <span class="token number">0</span>          62mrook-discover-kvmff                                    <span class="token number">1</span>/1     Running     <span class="token number">0</span>          62mrook-discover-rjfh7                                    <span class="token number">1</span>/1     Running     <span class="token number">0</span>          62mrook-discover-t4z4s                                    <span class="token number">1</span>/1     Running     <span class="token number">0</span>          62m<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>osd-x 的容器必须存在且状态正常则集群安装成功过</p><p>更多配置：<a href="https://rook.io/docs/rook/v1.6/ceph-cluster-crd.html">https://rook.io/docs/rook/v1.6/ceph-cluster-crd.html</a> </p><h5 id="2-3-安装ceph-snapshot-控制器"><a href="#2-3-安装ceph-snapshot-控制器" class="headerlink" title="2.3 安装ceph snapshot 控制器"></a>2.3 安装ceph snapshot 控制器</h5><p>k8s 1.19 版本以上需要单独安装 snapshot 控制器，才能完成 pvc 的快照功能，所以在此提前安装下，如果是 1.19 以下版本，不需要单独安装</p><p>snapshot 控制器的部署在集群安装时的 k8s-ha-install 项目中，</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 切换分支，根据自己k8s版本安装</span><span class="token builtin class-name">cd</span> /root/k8s-ha-install/<span class="token function">git</span> checkout manual-installation-v1.20.x<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>创建snapshot controller</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 ~<span class="token punctuation">]</span><span class="token comment"># kubectl create -f snapshotter/ -n kube-system</span><span class="token punctuation">[</span>root@k8s-master01 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get pods -n kube-system -l app=snapshot-controller</span>NAME                    READY   STATUS    RESTARTS      AGEsnapshot-controller-0   <span class="token number">1</span>/1     Running   <span class="token number">1</span> <span class="token punctuation">(</span>17h ago<span class="token punctuation">)</span>   21h<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>具体文档：<a href="https://rook.io/docs/rook/latest-release/Storage-Configuration/Ceph-CSI/ceph-csi-snapshot/#restore-the-rbd-snapshot-to-a-new-pvc">https://rook.io/docs/rook/latest-release/Storage-Configuration/Ceph-CSI/ceph-csi-snapshot/#restore-the-rbd-snapshot-to-a-new-pvc</a></p><h3 id="三、安装ceph客户端工具"><a href="#三、安装ceph客户端工具" class="headerlink" title="三、安装ceph客户端工具"></a>三、安装ceph客户端工具</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 examples<span class="token punctuation">]</span><span class="token comment"># pwd </span>/root/yaml/rook/rook/deploy/examples<span class="token punctuation">[</span>root@k8s-master01 examples<span class="token punctuation">]</span><span class="token comment"># kubectl create -f toolbox.yaml  -n rook-ceph </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>安装完成之后查看pod状态</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 examples<span class="token punctuation">]</span><span class="token comment"># kubectl get pods -n rook-ceph  -l app=rook-ceph-tools</span>NAME                               READY   STATUS    RESTARTS   AGErook-ceph-tools-5b54d6cd97-nr9xt   <span class="token number">1</span>/1     Running   <span class="token number">0</span>          12s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 examples<span class="token punctuation">]</span><span class="token comment"># kubectl exec -it rook-ceph-tools-5b54d6cd97-w84mm bash  -n rook-ceph </span>kubectl <span class="token builtin class-name">exec</span> <span class="token punctuation">[</span>POD<span class="token punctuation">]</span> <span class="token punctuation">[</span>COMMAND<span class="token punctuation">]</span> is DEPRECATED and will be removed <span class="token keyword">in</span> a future version. Use kubectl <span class="token builtin class-name">exec</span> <span class="token punctuation">[</span>POD<span class="token punctuation">]</span> -- <span class="token punctuation">[</span>COMMAND<span class="token punctuation">]</span> instead.bash-4.4$ bash-4.4$ ceph status   cluster:    id:     cbe7a89d-8755-4c42-b1d0-89f2c8776845    health: HEALTH_WARN            clock skew detected on mon.b, mon.c   services:    mon: <span class="token number">3</span> daemons, quorum a,b,c <span class="token punctuation">(</span>age 3m<span class="token punctuation">)</span>    mgr: a<span class="token punctuation">(</span>active, since 74s<span class="token punctuation">)</span>, standbys: b    osd: <span class="token number">3</span> osds: <span class="token number">3</span> up <span class="token punctuation">(</span>since 2m<span class="token punctuation">)</span>, <span class="token number">3</span> <span class="token keyword">in</span> <span class="token punctuation">(</span>since 3m<span class="token punctuation">)</span>   data:    pools:   <span class="token number">1</span> pools, <span class="token number">1</span> pgs    objects: <span class="token number">2</span> objects, <span class="token number">449</span> KiB    usage:   <span class="token number">80</span> MiB used, <span class="token number">300</span> GiB / <span class="token number">300</span> GiB avail    pgs:     <span class="token number">1</span> active+clean bash-4.4$ bash-4.4$ ceph osd status ID  HOST         USED  AVAIL  WR OPS  WR DATA  RD OPS  RD DATA  STATE       <span class="token number">0</span>  k8s-node02  <span class="token number">26</span>.7M  <span class="token number">99</span>.9G      <span class="token number">0</span>        <span class="token number">0</span>       <span class="token number">0</span>        <span class="token number">0</span>   exists,up   <span class="token number">1</span>  k8s-node01  <span class="token number">26</span>.7M  <span class="token number">99</span>.9G      <span class="token number">0</span>        <span class="token number">0</span>       <span class="token number">0</span>        <span class="token number">0</span>   exists,up   <span class="token number">2</span>  k8s-node03  <span class="token number">26</span>.7M  <span class="token number">99</span>.9G      <span class="token number">0</span>        <span class="token number">0</span>       <span class="token number">0</span>        <span class="token number">0</span>   exists,up  bash-4.4$ ceph <span class="token function">df</span> --- RAW STORAGE ---CLASS     SIZE    AVAIL    USED  RAW USED  %RAW USEDhdd    <span class="token number">300</span> GiB  <span class="token number">300</span> GiB  <span class="token number">80</span> MiB    <span class="token number">80</span> MiB       <span class="token number">0.03</span>TOTAL  <span class="token number">300</span> GiB  <span class="token number">300</span> GiB  <span class="token number">80</span> MiB    <span class="token number">80</span> MiB       <span class="token number">0.03</span> --- POOLS ---POOL  ID  PGS   STORED  OBJECTS     USED  %USED  MAX AVAIL.mgr   <span class="token number">1</span>    <span class="token number">1</span>  <span class="token number">449</span> KiB        <span class="token number">2</span>  <span class="token number">1.3</span> MiB      <span class="token number">0</span>     <span class="token number">95</span> GiB<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="四、Ceph-Dashboard"><a href="#四、Ceph-Dashboard" class="headerlink" title="四、Ceph Dashboard"></a>四、Ceph Dashboard</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 examples<span class="token punctuation">]</span><span class="token comment"># kubectl get svc  -n rook-ceph </span>NAME                      TYPE        CLUSTER-IP      EXTERNAL-IP   PORT<span class="token punctuation">(</span>S<span class="token punctuation">)</span>             AGErook-ceph-exporter        ClusterIP   <span class="token number">10.96</span>.41.29     <span class="token operator">&lt;</span>none<span class="token operator">></span>        <span class="token number">9926</span>/TCP            5m17srook-ceph-mgr             ClusterIP   <span class="token number">10.96</span>.76.115    <span class="token operator">&lt;</span>none<span class="token operator">></span>        <span class="token number">9283</span>/TCP            4m58srook-ceph-mgr-dashboard   ClusterIP   <span class="token number">10.96</span>.163.161   <span class="token operator">&lt;</span>none<span class="token operator">></span>        <span class="token number">8443</span>/TCP            4m58srook-ceph-mon-a           ClusterIP   <span class="token number">10.96</span>.233.150   <span class="token operator">&lt;</span>none<span class="token operator">></span>        <span class="token number">6789</span>/TCP,3300/TCP   6m10srook-ceph-mon-b           ClusterIP   <span class="token number">10.96</span>.236.149   <span class="token operator">&lt;</span>none<span class="token operator">></span>        <span class="token number">6789</span>/TCP,3300/TCP   5m43srook-ceph-mon-c           ClusterIP   <span class="token number">10.96</span>.6.244     <span class="token operator">&lt;</span>none<span class="token operator">></span>        <span class="token number">6789</span>/TCP,3300/TCP   5m33s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>默认ceph dashboard是打开的，但是类型是clusterIP，可以建一个nodeport类型的service暴露出来</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 examples<span class="token punctuation">]</span><span class="token comment"># kubectl get svc  -n rook-ceph  rook-ceph-mgr-dashboard  -o yaml  > dashboard-test.yaml</span><span class="token comment"># 把导出的文件该删除的删除，更换service的名字和type </span><span class="token punctuation">[</span>root@k8s-master01 examples<span class="token punctuation">]</span><span class="token comment"># vim dashboard-test.yaml  </span>apiVersion: v1kind: Servicemetadata:  labels:    app: rook-ceph-mgr    rook_cluster: rook-ceph  name: rook-ceph-mgr-dashboard-np  namespace: rook-cephspec:  ports:  - name: https-dashboard    port: <span class="token number">8443</span>    protocol: TCP    targetPort: <span class="token number">8443</span>  selector:    app: rook-ceph-mgr    mgr_role: active    rook_cluster: rook-ceph  type: NodePort<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>创建之后查看svc，就可以使用任意一台节点+nodeport端口号访问，如：<a href="https://192.168.31.70:24210/#/login?returnUrl=%2Fdashboard">https://192.168.31.70:24210/#/login?returnUrl=%2Fdashboard</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 examples<span class="token punctuation">]</span><span class="token comment"># kubectl get svc -n rook-ceph </span>NAME                         TYPE        CLUSTER-IP      EXTERNAL-IP   PORT<span class="token punctuation">(</span>S<span class="token punctuation">)</span>             AGErook-ceph-exporter           ClusterIP   <span class="token number">10.96</span>.41.29     <span class="token operator">&lt;</span>none<span class="token operator">></span>        <span class="token number">9926</span>/TCP            8m56srook-ceph-mgr                ClusterIP   <span class="token number">10.96</span>.76.115    <span class="token operator">&lt;</span>none<span class="token operator">></span>        <span class="token number">9283</span>/TCP            8m37srook-ceph-mgr-dashboard      ClusterIP   <span class="token number">10.96</span>.163.161   <span class="token operator">&lt;</span>none<span class="token operator">></span>        <span class="token number">8443</span>/TCP            8m37srook-ceph-mgr-dashboard-np   NodePort    <span class="token number">10.96</span>.164.239   <span class="token operator">&lt;</span>none<span class="token operator">></span>        <span class="token number">8443</span>:24210/TCP      81srook-ceph-mon-a              ClusterIP   <span class="token number">10.96</span>.233.150   <span class="token operator">&lt;</span>none<span class="token operator">></span>        <span class="token number">6789</span>/TCP,3300/TCP   9m49srook-ceph-mon-b              ClusterIP   <span class="token number">10.96</span>.236.149   <span class="token operator">&lt;</span>none<span class="token operator">></span>        <span class="token number">6789</span>/TCP,3300/TCP   9m22srook-ceph-mon-c              ClusterIP   <span class="token number">10.96</span>.6.244     <span class="token operator">&lt;</span>none<span class="token operator">></span>        <span class="token number">6789</span>/TCP,3300/TCP   9m12s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>dashboard的密码存放在secret中</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 examples<span class="token punctuation">]</span><span class="token comment"># kubectl get secret -n rook-ceph  rook-ceph-dashboard-password  -o jsonpath=&#123;'.data.password'&#125; |base64 --decode </span>+1vafV<span class="token string">"-w"</span><span class="token punctuation">(</span>,_BGvq<span class="token punctuation">]</span><span class="token punctuation">(</span>l<span class="token punctuation">[</span>root@k8s-master01 examples<span class="token punctuation">]</span><span class="token comment"># </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>登录到<code>dashboard</code> 后主页可能会显示<code>MON_CLOCK_SKEW: clock skew detected on mon.b, mon.c</code>时钟误差问题 ，解决办法：</p><ol><li>使用ntp同步时间</li><li>修改<code>configmap</code>中的<code>mon clock drift allowed</code>默认参数</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 examples<span class="token punctuation">]</span><span class="token comment"># kubectl get configmaps -n rook-ceph  rook-config-override </span>NAME                   DATA   AGErook-config-override   <span class="token number">1</span>      14m<span class="token punctuation">[</span>root@k8s-master01 examples<span class="token punctuation">]</span><span class="token comment"># kubectl edit  configmaps -n rook-ceph  rook-config-override</span><span class="token comment"># Please edit the object below. Lines beginning with a '#' will be ignored,</span><span class="token comment"># and an empty file will abort the edit. If an error occurs while saving this file will be</span><span class="token comment"># reopened with the relevant failures.</span><span class="token comment">#</span>apiVersion: v1data:  config: <span class="token operator">|</span>    <span class="token punctuation">[</span>global<span class="token punctuation">]</span>    mon clock drift allowed <span class="token operator">=</span> <span class="token number">1</span>kind: ConfigMapmetadata:  creationTimestamp: <span class="token string">"2024-06-26T03:09:36Z"</span>  name: rook-config-override  namespace: rook-ceph  ownerReferences:  - apiVersion: ceph.rook.io/v1    blockOwnerDeletion: <span class="token boolean">true</span>    controller: <span class="token boolean">true</span>    kind: CephCluster    name: rook-ceph    uid: 5ddfcfb5-48db-4fd9-92c3-ece3af796125  resourceVersion: <span class="token string">"2068535"</span>  uid: e9b35b14-108c-412a-b84b-3fec3529057c<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>添加了以下内容：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">config: <span class="token operator">|</span>    <span class="token punctuation">[</span>global<span class="token punctuation">]</span>    mon clock drift allowed <span class="token operator">=</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>此处的时间可随自身的时间差设置，在0.5到1s之间，不建议设置过大的值，修改过后删除mon pod 使其载入新的配置</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 examples<span class="token punctuation">]</span><span class="token comment"># kubectl delete pods -n rook-ceph  rook-ceph-mon-a-6c6b5cdf78-wbv4r rook-ceph-mon-b-df4ffdc4c-hbf6t rook-ceph-mon-c-5c66c69c94-rw446 </span>pod <span class="token string">"rook-ceph-mon-a-6c6b5cdf78-wbv4r"</span> deletedpod <span class="token string">"rook-ceph-mon-b-df4ffdc4c-hbf6t"</span> deletedpod <span class="token string">"rook-ceph-mon-c-5c66c69c94-rw446"</span> deleted<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>查看状态已恢复健康值</p><p><img src="/images/ceph3.png" alt="image"></p><h3 id="五、ceph块存储的使用"><a href="#五、ceph块存储的使用" class="headerlink" title="五、ceph块存储的使用"></a>五、ceph块存储的使用</h3><h5 id="5-1-创建StorageClass和Ceph的存储池"><a href="#5-1-创建StorageClass和Ceph的存储池" class="headerlink" title="5.1 创建StorageClass和Ceph的存储池"></a>5.1 创建StorageClass和Ceph的存储池</h5><p>块存储一般用于一个pod挂载一块存储使用，相当于一个服务器新挂了一个盘，只给一个应用使用。</p><p>官方文档：<a href="https://rook.io/docs/rook/latest-release/Storage-Configuration/Block-Storage-RBD/block-storage/#provision-storage">https://rook.io/docs/rook/latest-release/Storage-Configuration/Block-Storage-RBD/block-storage/#provision-storage</a></p><p>size生产环境最少为3个，并且要小于等于osd的数量</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 rbd<span class="token punctuation">]</span><span class="token comment"># pwd </span>/root/yaml/rook/rook/deploy/examples/csi/rbd<span class="token punctuation">[</span>root@k8s-master01 rbd<span class="token punctuation">]</span><span class="token comment"># vim storageclass.yaml </span>apiVersion: ceph.rook.io/v1kind: CephBlockPoolmetadata:  name: replicapool  namespace: rook-ceph <span class="token comment"># namespace:cluster</span>spec:  failureDomain: <span class="token function">host</span>  replicated:    size: <span class="token number">3</span>    <span class="token comment"># Disallow setting pool with replica 1, this could lead to data loss without recovery.</span>    <span class="token comment"># Make sure you're *ABSOLUTELY CERTAIN* that is what you want</span>    requireSafeReplicaSize: <span class="token boolean">true</span>    <span class="token comment"># gives a hint (%) to Ceph in terms of expected consumption of the total cluster capacity of a given pool</span>    <span class="token comment"># for more info: https://docs.ceph.com/docs/master/rados/operations/placement-groups/#specifying-expected-pool-size</span>    <span class="token comment">#targetSizeRatio: .5</span>---apiVersion: storage.k8s.io/v1kind: StorageClassmetadata:  name: rook-ceph-blockprovisioner: rook-ceph.rbd.csi.ceph.com <span class="token comment"># csi-provisioner-name</span>parameters:  <span class="token comment"># clusterID is the namespace where the rook cluster is running</span>  <span class="token comment"># If you change this namespace, also change the namespace below where the secret namespaces are defined</span>  clusterID: rook-ceph <span class="token comment"># namespace:cluster</span>  <span class="token comment"># If you want to use erasure coded pool with RBD, you need to create</span>  <span class="token comment"># two pools. one erasure coded and one replicated.</span>  <span class="token comment"># You need to specify the replicated pool here in the `pool` parameter, it is</span>  <span class="token comment"># used for the metadata of the images.</span>  <span class="token comment"># The erasure coded pool must be set as the `dataPool` parameter below.</span>  <span class="token comment">#dataPool: ec-data-pool</span>  pool: replicapool  <span class="token comment"># (optional) mapOptions is a comma-separated list of map options.</span>  <span class="token comment"># For krbd options refer</span>  <span class="token comment"># https://docs.ceph.com/docs/master/man/8/rbd/#kernel-rbd-krbd-options</span>  <span class="token comment"># For nbd options refer</span>  <span class="token comment"># https://docs.ceph.com/docs/master/man/8/rbd-nbd/#options</span>  <span class="token comment"># mapOptions: lock_on_read,queue_depth=1024</span>  <span class="token comment"># (optional) unmapOptions is a comma-separated list of unmap options.</span>  <span class="token comment"># For krbd options refer</span>  <span class="token comment"># https://docs.ceph.com/docs/master/man/8/rbd/#kernel-rbd-krbd-options</span>  <span class="token comment"># For nbd options refer</span>  <span class="token comment"># https://docs.ceph.com/docs/master/man/8/rbd-nbd/#options</span>  <span class="token comment"># unmapOptions: force</span>  <span class="token comment"># (optional) Set it to true to encrypt each volume with encryption keys</span>  <span class="token comment"># from a key management system (KMS)</span>  <span class="token comment"># encrypted: "true"</span>  <span class="token comment"># (optional) Use external key management system (KMS) for encryption key by</span>  <span class="token comment"># specifying a unique ID matching a KMS ConfigMap. The ID is only used for</span>  <span class="token comment"># correlation to configmap entry.</span>  <span class="token comment"># encryptionKMSID: &lt;kms-config-id></span>  <span class="token comment"># RBD image format. Defaults to "2".</span>  imageFormat: <span class="token string">"2"</span>  <span class="token comment"># RBD image features</span>  <span class="token comment"># Available for imageFormat: "2". Older releases of CSI RBD</span>  <span class="token comment"># support only the `layering` feature. The Linux kernel (KRBD) supports the</span>  <span class="token comment"># full complement of features as of 5.4</span>  <span class="token comment"># `layering` alone corresponds to Ceph's bitfield value of "2" ;</span>  <span class="token comment"># `layering` + `fast-diff` + `object-map` + `deep-flatten` + `exclusive-lock` together</span>  <span class="token comment"># correspond to Ceph's OR'd bitfield value of "63". Here we use</span>  <span class="token comment"># a symbolic, comma-separated format:</span>  <span class="token comment"># For 5.4 or later kernels:</span>  <span class="token comment">#imageFeatures: layering,fast-diff,object-map,deep-flatten,exclusive-lock</span>  <span class="token comment"># For 5.3 or earlier kernels:</span>  imageFeatures: layering  <span class="token comment"># The secrets contain Ceph admin credentials. These are generated automatically by the operator</span>  <span class="token comment"># in the same namespace as the cluster.</span>  csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner  csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph <span class="token comment"># namespace:cluster</span>  csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner  csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph <span class="token comment"># namespace:cluster</span>  csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node  csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph <span class="token comment"># namespace:cluster</span>  <span class="token comment"># Specify the filesystem type of the volume. If not specified, csi-provisioner</span>  <span class="token comment"># will set default as `ext4`. Note that `xfs` is not recommended due to potential deadlock</span>  <span class="token comment"># in hyperconverged settings where the volume is mounted on the same node as the osds.</span>  csi.storage.k8s.io/fstype: ext4<span class="token comment"># uncomment the following to use rbd-nbd as mounter on supported nodes</span><span class="token comment"># **IMPORTANT**: CephCSI v3.4.0 onwards a volume healer functionality is added to reattach</span><span class="token comment"># the PVC to application pod if nodeplugin pod restart.</span><span class="token comment"># Its still in Alpha support. Therefore, this option is not recommended for production use.</span><span class="token comment">#mounter: rbd-nbd</span>allowVolumeExpansion: <span class="token boolean">true</span>  <span class="token comment"># 是否允许扩容</span>reclaimPolicy: Delete  <span class="token comment"># 回收策略</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>创建storageclass和存储池</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 rbd<span class="token punctuation">]</span><span class="token comment"># kubectl apply -f  storageclass.yaml </span>cephblockpool.ceph.rook.io/replicapool createdstorageclass.storage.k8s.io/rook-ceph-block created<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 rbd<span class="token punctuation">]</span><span class="token comment"># kubectl get cephblockpool -n rook-ceph </span>NAME          PHASE   TYPE         FAILUREDOMAIN   AGEreplicapool   Ready   Replicated   <span class="token function">host</span>            22s<span class="token punctuation">[</span>root@k8s-master01 rbd<span class="token punctuation">]</span><span class="token comment"># </span><span class="token punctuation">[</span>root@k8s-master01 rbd<span class="token punctuation">]</span><span class="token comment"># kubectl get sc </span>NAME              PROVISIONER                  RECLAIMPOLICY   VOLUMEBINDINGMODE   ALLOWVOLUMEEXPANSION   AGErook-ceph-block   rook-ceph.rbd.csi.ceph.com   Delete          Immediate           <span class="token boolean">true</span>                   27s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>此时可以在 ceph dashboard 查看到改 Pool，如果没有显示说明没有创建成功</p><p><img src="/images/ceph4.png" alt="image"></p><h5 id="5-2-挂载测试"><a href="#5-2-挂载测试" class="headerlink" title="5.2 挂载测试"></a>5.2 挂载测试</h5><p>创建一个mysql服务测试</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 examples<span class="token punctuation">]</span><span class="token comment"># pwd </span>/root/yaml/rook/rook/deploy/examples<span class="token punctuation">[</span>root@k8s-master01 examples<span class="token punctuation">]</span><span class="token comment"># kubectl apply -f  mysql.yaml </span>service/wordpress-mysql createdpersistentvolumeclaim/mysql-pv-claim createddeployment.apps/wordpress-mysql created<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/images/ceph5.png" alt="image"></p><p>这里会连接到刚才创建的storageclass，然后动态创建pv，然后连接到ceph创建对应的存储，之后创建pvc只需要指定storageClassName为刚才创建的storageclass名称就可以连接到rook的ceph。如果是statefulset，只需要将volumeTemplateClaim里面的Claim名称改为对应的storageClass名称就可以动态创建pod。</p><p>mysql deployment的volumes挂载了该pvc</p><p><img src="/images/ceph6.png" alt="image"></p><p>因为mysql的数据不能多个实例连接一个存储，所以一般只能用块存储。相当于新加了一块盘给mysql使用</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 examples<span class="token punctuation">]</span><span class="token comment"># kubectl get pv </span>NAME                                       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM                    STORAGECLASS      REASON   AGEpvc-1a205d15-3d0b-441f-9811-31e974aff4aa   20Gi       RWO            Delete           Bound    default/mysql-pv-claim   rook-ceph-block            4m21s<span class="token punctuation">[</span>root@k8s-master01 examples<span class="token punctuation">]</span><span class="token comment"># </span><span class="token punctuation">[</span>root@k8s-master01 examples<span class="token punctuation">]</span><span class="token comment"># kubectl get pvc </span>NAME             STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS      AGEmysql-pv-claim   Bound    pvc-1a205d15-3d0b-441f-9811-31e974aff4aa   20Gi       RWO            rook-ceph-block   4m24s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到通过storageclass动态创建了对应的pv，此时在dashboard上可以看到对应的image</p><p><img src="/images/ceph7.png" alt="image"></p><p>此时每个副本的存储都是独立的</p><p>下面是statefulset的演示</p><p>只需要在statefulset中添加volumeClaimTemplates，并指定storageclass为刚才创建的名称就可以自动生成pv和pvc</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 examples<span class="token punctuation">]</span><span class="token comment"># cat statefu.yaml</span>apiVersion: v1kind: Servicemetadata:  name: nginx  labels:    app: nginxspec:  ports:  - port: <span class="token number">80</span>    name: web  clusterIP: None  selector:    app: nginx---apiVersion: apps/v1kind: StatefulSetmetadata:  name: webspec:  selector:    matchLabels:      app: nginx <span class="token comment"># has to match .spec.template.metadata.labels</span>  serviceName: <span class="token string">"nginx"</span>  replicas: <span class="token number">3</span> <span class="token comment"># by default is 1</span>  template:    metadata:      labels:        app: nginx <span class="token comment"># has to match .spec.selector.matchLabels</span>    spec:      terminationGracePeriodSeconds: <span class="token number">10</span>      containers:      - name: web        image: harbor.dujie.com/dujie/nginx:1.15.12        imagePullPolicy: IfNotPresent        ports:        - containerPort: <span class="token number">80</span>          name: web        volumeMounts:        - name: www          mountPath: /usr/share/nginx/html  volumeClaimTemplates:  - metadata:      name: www    spec:      accessModes: <span class="token punctuation">[</span> <span class="token string">"ReadWriteOnce"</span> <span class="token punctuation">]</span>      storageClassName: <span class="token string">"rook-ceph-block"</span>      resources:        requests:          storage: 20Gi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="六、共享文件系统使用"><a href="#六、共享文件系统使用" class="headerlink" title="六、共享文件系统使用"></a>六、共享文件系统使用</h3><p>共享文件系统一般用于多个pod共享一个存储</p><p>官方文档：<a href="https://rook.io/docs/rook/v1.14/Storage-Configuration/Shared-Filesystem-CephFS/filesystem-storage/#prerequisites">https://rook.io/docs/rook/v1.14/Storage-Configuration/Shared-Filesystem-CephFS/filesystem-storage/#prerequisites</a></p><h5 id="6-1-创建共享类型的文件系统"><a href="#6-1-创建共享类型的文件系统" class="headerlink" title="6.1 创建共享类型的文件系统"></a>6.1 创建共享类型的文件系统</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 examples<span class="token punctuation">]</span><span class="token comment"># pwd </span>/root/yaml/rook/rook/deploy/examples<span class="token punctuation">[</span>root@k8s-master01 examples<span class="token punctuation">]</span><span class="token comment"># kubectl apply -f filesystem.yaml</span>cephfilesystem.ceph.rook.io/myfs createdcephfilesystemsubvolumegroup.ceph.rook.io/myfs-csi created<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>创建完成会启动mds容器，需要等待启动后才可进行创建pv</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 examples<span class="token punctuation">]</span><span class="token comment"># kubectl get pod -n rook-ceph  -l app=rook-ceph-mds</span>NAME                                    READY   STATUS    RESTARTS   AGErook-ceph-mds-myfs-a-5d4fb7bdd5-4n2tg   <span class="token number">2</span>/2     Running   <span class="token number">0</span>          59srook-ceph-mds-myfs-b-6774796659-wn8qd   <span class="token number">2</span>/2     Running   <span class="token number">0</span>          57s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/images/ceph8.png" alt="image"></p><h5 id="6-2-创建共享类型文件系统的StorageClass"><a href="#6-2-创建共享类型文件系统的StorageClass" class="headerlink" title="6.2 创建共享类型文件系统的StorageClass"></a>6.2 创建共享类型文件系统的StorageClass</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 cephfs<span class="token punctuation">]</span><span class="token comment"># pwd </span>/root/yaml/rook/rook/deploy/examples/csi/cephfs<span class="token punctuation">[</span>root@k8s-master01 cephfs<span class="token punctuation">]</span><span class="token comment"># kubectl apply -f  storageclass.yaml </span>storageclass.storage.k8s.io/rook-cephfs configured<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>之后将pvc的StorageClassName设置成root-cephfs 即可创建共享文件类型的存储，类似与NFS，可以给多个Pod共享数据。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 cephfs<span class="token punctuation">]</span><span class="token comment"># kubectl get sc </span>NAME              PROVISIONER                     RECLAIMPOLICY   VOLUMEBINDINGMODE   ALLOWVOLUMEEXPANSION   AGErook-ceph-block   rook-ceph.rbd.csi.ceph.com      Delete          Immediate           <span class="token boolean">true</span>                   99mrook-cephfs       rook-ceph.cephfs.csi.ceph.com   Delete          Immediate           <span class="token boolean">true</span>                   21m<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h5 id="6-3-挂载测试"><a href="#6-3-挂载测试" class="headerlink" title="6.3 挂载测试"></a>6.3 挂载测试</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 cephfs<span class="token punctuation">]</span><span class="token comment"># cat fstest.yaml </span>apiVersion: v1kind: PersistentVolumeClaimmetadata:  name: cephfs-pvcspec:  accessModes:    - ReadWriteMany  resources:    requests:      storage: 15Gi  storageClassName: rook-cephfs--- apiVersion: apps/v1kind: Deploymentmetadata:  annotations:    deployment.kubernetes.io/revision: <span class="token string">"2"</span>  labels:    app: fstest  name: fstest  namespace: defaultspec:  progressDeadlineSeconds: <span class="token number">600</span>  replicas: <span class="token number">5</span>  revisionHistoryLimit: <span class="token number">10</span>  selector:    matchLabels:      app: fstest  strategy:    rollingUpdate:      maxSurge: <span class="token number">25</span>%      maxUnavailable: <span class="token number">25</span>%    type: RollingUpdate  template:    metadata:      creationTimestamp: null      labels:        app: fstest    spec:      containers:      - image: harbor.dujie.com/dujie/nginx:1.15.12        imagePullPolicy: IfNotPresent        name: nginx        resources: <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>        terminationMessagePath: /dev/termination-log        terminationMessagePolicy: File        volumeMounts:          - name: fstest-volume            mountPath: /data/test      dnsPolicy: ClusterFirst      imagePullSecrets:      - name: registry-secret      restartPolicy: Always      schedulerName: default-scheduler      securityContext: <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>      terminationGracePeriodSeconds: <span class="token number">30</span>      volumes:      - name: fstest-volume        persistentVolumeClaim:           claimName: cephfs-pvc          readOnly: <span class="token boolean">false</span><span class="token punctuation">[</span>root@k8s-master01 cephfs<span class="token punctuation">]</span><span class="token comment"># kubectl apply -f fstest.yaml </span><span class="token punctuation">[</span>root@k8s-master01 cephfs<span class="token punctuation">]</span><span class="token comment"># kubectl get pods </span>NAME                               READY   STATUS    RESTARTS   AGEfstest-544bbcb957-4dcfj            <span class="token number">1</span>/1     Running   <span class="token number">0</span>          2m26sfstest-544bbcb957-6fztb            <span class="token number">1</span>/1     Running   <span class="token number">0</span>          2m26sfstest-544bbcb957-l5b7l            <span class="token number">1</span>/1     Running   <span class="token number">0</span>          2m26sfstest-544bbcb957-tsjtb            <span class="token number">1</span>/1     Running   <span class="token number">0</span>          2m26sfstest-544bbcb957-wfqq4            <span class="token number">1</span>/1     Running   <span class="token number">0</span>          2m26s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以进入第一个pod查看挂载目录是否存在，并在挂载目录中创建一个文件，然后再到另一个pod中看看能不能看到刚才创建的文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 cephfs<span class="token punctuation">]</span><span class="token comment"># kubectl exec -it fstest-544bbcb957-4dcfj bash </span>kubectl <span class="token builtin class-name">exec</span> <span class="token punctuation">[</span>POD<span class="token punctuation">]</span> <span class="token punctuation">[</span>COMMAND<span class="token punctuation">]</span> is DEPRECATED and will be removed <span class="token keyword">in</span> a future version. Use kubectl <span class="token builtin class-name">exec</span> <span class="token punctuation">[</span>POD<span class="token punctuation">]</span> -- <span class="token punctuation">[</span>COMMAND<span class="token punctuation">]</span> instead.root@fstest-544bbcb957-4dcfj:/<span class="token comment"># </span>root@fstest-544bbcb957-4dcfj:/<span class="token comment"># ls /data/</span><span class="token builtin class-name">test</span>root@fstest-544bbcb957-4dcfj:/<span class="token comment"># touch /data/test/hahah.txt </span>root@fstest-544bbcb957-4dcfj:/<span class="token comment"># ls /data/test/</span>hahah.txtroot@fstest-544bbcb957-4dcfj:/<span class="token comment"># exit </span><span class="token builtin class-name">exit</span><span class="token punctuation">[</span>root@k8s-master01 cephfs<span class="token punctuation">]</span><span class="token comment"># kubectl exec -it fstest-544bbcb957-wfqq4 bash </span>kubectl <span class="token builtin class-name">exec</span> <span class="token punctuation">[</span>POD<span class="token punctuation">]</span> <span class="token punctuation">[</span>COMMAND<span class="token punctuation">]</span> is DEPRECATED and will be removed <span class="token keyword">in</span> a future version. Use kubectl <span class="token builtin class-name">exec</span> <span class="token punctuation">[</span>POD<span class="token punctuation">]</span> -- <span class="token punctuation">[</span>COMMAND<span class="token punctuation">]</span> instead.root@fstest-544bbcb957-wfqq4:/<span class="token comment"># ls /data/test/</span>hahah.txtroot@fstest-544bbcb957-wfqq4:/<span class="token comment"># exit </span><span class="token builtin class-name">exit</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意 <code>claimName</code> 为 pvc 的名称。</p><p>此时一共创建了5个 Pod，这5个 Pod 共用了一个存储，挂载到了&#x2F;data&#x2F;test，该目录三个容器共享数据。</p><h3 id="七、PVC扩容"><a href="#七、PVC扩容" class="headerlink" title="七、PVC扩容"></a>七、PVC扩容</h3><p>文件共享类型的 PVC 扩容需要 k8s 1.15+</p><p>块存储类型的 PVC 扩容需要 k8s 1.16+</p><p>PVC 扩容需要开启 <code>ExpandCSIVolumes</code>，新版本的 k8s 已经默认打开了这个功能，可以</p><h5 id="7-1-扩容文件共享型PVC"><a href="#7-1-扩容文件共享型PVC" class="headerlink" title="7.1 扩容文件共享型PVC"></a>7.1 扩容文件共享型PVC</h5><p>找到刚才创建文件共享型<code>StorageClass</code>，将<code>allowVolumeExpansion</code>设置为true（新版默认为true，如果不为true更改后执行<code>kubectl apply</code>即可）</p><p><img src="/images/ceph9.png" alt="image"></p><p>修改一个已存在的pvc</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 cephfs<span class="token punctuation">]</span><span class="token comment"># kubectl get pvc </span>NAME             STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS      AGEcephfs-pvc       Bound    pvc-65327259-0add-4d22-a178-9021a4287442   15Gi       RWX            rook-cephfs       10mmysql-pv-claim   Bound    pvc-1a205d15-3d0b-441f-9811-31e974aff4aa   20Gi       RWO            rook-ceph-block   104mwww-web-0        Bound    pvc-017ff95d-4c9b-4502-bfba-67c407a959c9   20Gi       RWO            rook-ceph-block   97mwww-web-1        Bound    pvc-84edb236-2940-4297-86f9-b0a9ea9b9390   20Gi       RWO            rook-ceph-block   97mwww-web-2        Bound    pvc-a2740af1-065d-44fa-b2e6-9f407c306b9b   20Gi       RWO            rook-ceph-block   92m<span class="token punctuation">[</span>root@k8s-master01 cephfs<span class="token punctuation">]</span><span class="token comment"># </span><span class="token punctuation">[</span>root@k8s-master01 cephfs<span class="token punctuation">]</span><span class="token comment"># kubectl edit pvc cephfs-pvc </span><span class="token comment"># Please edit the object below. Lines beginning with a '#' will be ignored,</span><span class="token comment"># and an empty file will abort the edit. If an error occurs while saving this file will be</span><span class="token comment"># reopened with the relevant failures.</span><span class="token comment">#</span>apiVersion: v1kind: PersistentVolumeClaimmetadata:  annotations:    kubectl.kubernetes.io/last-applied-configuration: <span class="token operator">|</span>      <span class="token punctuation">&#123;</span><span class="token string">"apiVersion"</span><span class="token builtin class-name">:</span><span class="token string">"v1"</span>,<span class="token string">"kind"</span><span class="token builtin class-name">:</span><span class="token string">"PersistentVolumeClaim"</span>,<span class="token string">"metadata"</span>:<span class="token punctuation">&#123;</span><span class="token string">"annotations"</span>:<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>,<span class="token string">"name"</span><span class="token builtin class-name">:</span><span class="token string">"cephfs-pvc"</span>,<span class="token string">"namespace"</span><span class="token builtin class-name">:</span><span class="token string">"default"</span><span class="token punctuation">&#125;</span>,<span class="token string">"spec"</span>:<span class="token punctuation">&#123;</span><span class="token string">"accessModes"</span>:<span class="token punctuation">[</span><span class="token string">"ReadWriteMany"</span><span class="token punctuation">]</span>,<span class="token string">"resources"</span>:<span class="token punctuation">&#123;</span><span class="token string">"requests"</span>:<span class="token punctuation">&#123;</span><span class="token string">"storage"</span><span class="token builtin class-name">:</span><span class="token string">"15Gi"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>,<span class="token string">"storageClassName"</span><span class="token builtin class-name">:</span><span class="token string">"rook-cephfs"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>    pv.kubernetes.io/bind-completed: <span class="token string">"yes"</span>    pv.kubernetes.io/bound-by-controller: <span class="token string">"yes"</span>    volume.beta.kubernetes.io/storage-provisioner: rook-ceph.cephfs.csi.ceph.com    volume.kubernetes.io/storage-provisioner: rook-ceph.cephfs.csi.ceph.com  creationTimestamp: <span class="token string">"2024-06-26T05:12:23Z"</span>  finalizers:  - kubernetes.io/pvc-protection  name: cephfs-pvc  namespace: default  resourceVersion: <span class="token string">"2095326"</span>  uid: <span class="token number">65327259</span>-0add-4d22-a178-9021a4287442spec:  accessModes:  - ReadWriteMany  resources:    requests:      storage: 20Gi  storageClassName: rook-cephfs  volumeMode: Filesystem  volumeName: pvc-65327259-0add-4d22-a178-9021a4287442status:  accessModes:  - ReadWriteMany  capacity:    storage: 15Gi  phase: Bound                                                                                                                                                             <span class="token string">"/tmp/kubectl-edit-2357678919.yaml"</span> 36L, 1315C writtenpersistentvolumeclaim/cephfs-pvc edited<span class="token punctuation">[</span>root@k8s-master01 cephfs<span class="token punctuation">]</span><span class="token comment"># kubectl get pvc </span>NAME             STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS      AGEcephfs-pvc       Bound    pvc-65327259-0add-4d22-a178-9021a4287442   25Gi       RWX            rook-cephfs       11m<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="八、PVC快照"><a href="#八、PVC快照" class="headerlink" title="八、PVC快照"></a>八、PVC快照</h3><p>pvc快照功能需要k8s 1.17</p><h5 id="8-1-块存储快照"><a href="#8-1-块存储快照" class="headerlink" title="8.1 块存储快照"></a>8.1 块存储快照</h5><h6 id="8-1-1-创建snapshotClass"><a href="#8-1-1-创建snapshotClass" class="headerlink" title="8.1.1 创建snapshotClass"></a>8.1.1 创建snapshotClass</h6><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 rbd<span class="token punctuation">]</span><span class="token comment"># pwd </span>/root/yaml/rook/rook/deploy/examples/csi/rbd<span class="token punctuation">[</span>root@k8s-master01 rbd<span class="token punctuation">]</span><span class="token comment"># kubectl apply -f  snapshotclass.yaml </span>volumesnapshotclass.snapshot.storage.k8s.io/csi-rbdplugin-snapclass created<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h6 id="8-1-2-创建快照"><a href="#8-1-2-创建快照" class="headerlink" title="8.1.2 创建快照"></a>8.1.2 创建快照</h6><p>首先在之前创建的web容器中创建一个文件夹并创建一个文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 rbd<span class="token punctuation">]</span><span class="token comment"># kubectl get pods </span>NAME                               READY   STATUS    RESTARTS   AGEweb-0                              <span class="token number">1</span>/1     Running   <span class="token number">0</span>          101mweb-1                              <span class="token number">1</span>/1     Running   <span class="token number">0</span>          101mweb-2                              <span class="token number">1</span>/1     Running   <span class="token number">0</span>          101m<span class="token punctuation">[</span>root@k8s-master01 rbd<span class="token punctuation">]</span><span class="token comment"># kubectl exec -it web-0 bash </span>kubectl <span class="token builtin class-name">exec</span> <span class="token punctuation">[</span>POD<span class="token punctuation">]</span> <span class="token punctuation">[</span>COMMAND<span class="token punctuation">]</span> is DEPRECATED and will be removed <span class="token keyword">in</span> a future version. Use kubectl <span class="token builtin class-name">exec</span> <span class="token punctuation">[</span>POD<span class="token punctuation">]</span> -- <span class="token punctuation">[</span>COMMAND<span class="token punctuation">]</span> instead.root@web-0:/<span class="token comment"># </span>root@web-0:/<span class="token comment"># cd /usr/share/nginx/html</span>root@web-0:/usr/share/nginx/html<span class="token comment"># touch haha.txt</span>root@web-0:/usr/share/nginx/html<span class="token comment"># mkdir mltest</span>root@web-0:/usr/share/nginx/html<span class="token comment"># </span>root@web-0:/usr/share/nginx/html<span class="token comment"># ls </span>haha.txt  lost+found  mltestroot@web-0:/usr/share/nginx/html<span class="token comment"># ls -l</span>total <span class="token number">20</span>-rw-r--r-- <span class="token number">1</span> root root     <span class="token number">0</span> Jun <span class="token number">26</span> 05:41 haha.txtdrwx------ <span class="token number">2</span> root root <span class="token number">16384</span> Jun <span class="token number">26</span> 03:45 lost+founddrwxr-xr-x <span class="token number">2</span> root root  <span class="token number">4096</span> Jun <span class="token number">26</span> 05:41 mltest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改source，persistentVolumeClaimName 为需要做快照的pvc</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 rbd<span class="token punctuation">]</span><span class="token comment"># pwd </span>/root/yaml/rook/rook/deploy/examples/csi/rbd<span class="token punctuation">[</span>root@k8s-master01 rbd<span class="token punctuation">]</span><span class="token comment"># </span><span class="token punctuation">[</span>root@k8s-master01 rbd<span class="token punctuation">]</span><span class="token comment"># cat snapshot.yaml </span>---apiVersion: snapshot.storage.k8s.io/v1kind: VolumeSnapshotmetadata:  name: rbd-pvc-snapshotspec:  volumeSnapshotClassName: csi-rbdplugin-snapclass  source:    persistentVolumeClaimName: www-web-0<span class="token punctuation">[</span>root@k8s-master01 rbd<span class="token punctuation">]</span><span class="token comment"># kubectl apply -f snapshot.yaml</span>volumesnapshot.snapshot.storage.k8s.io/rbd-pvc-snapshot created<span class="token punctuation">[</span>root@k8s-master01 rbd<span class="token punctuation">]</span><span class="token comment"># kubectl get volumesnapshot</span>NAME               READYTOUSE   SOURCEPVC   SOURCESNAPSHOTCONTENT   RESTORESIZE   SNAPSHOTCLASS             SNAPSHOTCONTENT                                    CREATIONTIME   AGErbd-pvc-snapshot   <span class="token boolean">true</span>         www-web-0                           20Gi          csi-rbdplugin-snapclass   snapcontent-53ec9a13-354f-4dcd-9a5d-9dfa13ed4430   10s            10s<span class="token punctuation">[</span>root@k8s-master01 rbd<span class="token punctuation">]</span><span class="token comment"># kubectl get volumesnapshotclasses.snapshot.storage.k8s.io </span>NAME                      DRIVER                       DELETIONPOLICY   AGEcsi-rbdplugin-snapclass   rook-ceph.rbd.csi.ceph.com   Delete           14m<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="8-1-3-指定快照创建pvc"><a href="#8-1-3-指定快照创建pvc" class="headerlink" title="8.1.3 指定快照创建pvc"></a>8.1.3 指定快照创建pvc</h5><p>如果想要创建一个具有某个数据的pvc，可以从某个快照恢复</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 rbd<span class="token punctuation">]</span><span class="token comment"># pwd </span>/root/yaml/rook/rook/deploy/examples/csi/rbd<span class="token punctuation">[</span>root@k8s-master01 rbd<span class="token punctuation">]</span><span class="token comment"># cat pvc-restore.yaml </span>---apiVersion: v1kind: PersistentVolumeClaimmetadata:  name: rbd-pvc-restorespec:  storageClassName: rook-ceph-block  dataSource:    name: rbd-pvc-snapshot    kind: VolumeSnapshot    apiGroup: snapshot.storage.k8s.io  accessModes:    - ReadWriteOnce  resources:    requests:      storage: 21Gi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意：dataSource为快照名，storageClassName为新建的pvc的storageClass，storage的大小不能低于原pvc的大小</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 rbd<span class="token punctuation">]</span><span class="token comment"># kubectl apply -f pvc-restore.yaml</span>persistentvolumeclaim/rbd-pvc-restore created<span class="token punctuation">[</span>root@k8s-master01 rbd<span class="token punctuation">]</span><span class="token comment"># </span><span class="token punctuation">[</span>root@k8s-master01 rbd<span class="token punctuation">]</span><span class="token comment"># </span><span class="token punctuation">[</span>root@k8s-master01 rbd<span class="token punctuation">]</span><span class="token comment"># kubectl get pvc </span>NAME              STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS      AGEcephfs-pvc        Bound    pvc-65327259-0add-4d22-a178-9021a4287442   25Gi       RWX            rook-cephfs       44mmysql-pv-claim    Bound    pvc-1a205d15-3d0b-441f-9811-31e974aff4aa   20Gi       RWO            rook-ceph-block   139mrbd-pvc-restore   Bound    pvc-38c4048f-b799-4e73-9678-73f261f5d882   21Gi       RWO            rook-ceph-block   6swww-web-0         Bound    pvc-017ff95d-4c9b-4502-bfba-67c407a959c9   20Gi       RWO            rook-ceph-block   131mwww-web-1         Bound    pvc-84edb236-2940-4297-86f9-b0a9ea9b9390   20Gi       RWO            rook-ceph-block   131mwww-web-2         Bound    pvc-a2740af1-065d-44fa-b2e6-9f407c306b9b   20Gi       RWO            rook-ceph-block   127m<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="8-1-4-数据校验"><a href="#8-1-4-数据校验" class="headerlink" title="8.1.4 数据校验"></a>8.1.4 数据校验</h5><p>创建一个容器，挂载该pvc，查看是否含有创建的目录和文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 rbd<span class="token punctuation">]</span><span class="token comment"># cat pod.yaml </span>---apiVersion: v1kind: Podmetadata:  name: csirbd-demo-podspec:  containers:    - name: web-server      image: registry.cn-hangzhou.aliyuncs.com/dyclouds/nginx:1.15.12      volumeMounts:        - name: mypvc          mountPath: /var/lib/www/html  volumes:    - name: mypvc      persistentVolumeClaim:        claimName: rbd-pvc-restore        readOnly: <span class="token boolean">false</span><span class="token punctuation">[</span>root@k8s-master01 rbd<span class="token punctuation">]</span><span class="token comment"># kubectl apply -f  pod.yaml</span>pod/csirbd-demo-pod created<span class="token comment"># 可以看到该容器有之前创建的目录和文件了</span><span class="token punctuation">[</span>root@k8s-master01 rbd<span class="token punctuation">]</span><span class="token comment"># kubectl get pods </span>NAME                               READY   STATUS    RESTARTS   AGEcsirbd-demo-pod                    <span class="token number">1</span>/1     Running   <span class="token number">0</span>          9m10sfstest-544bbcb957-4dcfj            <span class="token number">1</span>/1     Running   <span class="token number">0</span>          56mfstest-544bbcb957-6fztb            <span class="token number">1</span>/1     Running   <span class="token number">0</span>          56mfstest-544bbcb957-l5b7l            <span class="token number">1</span>/1     Running   <span class="token number">0</span>          56mfstest-544bbcb957-tsjtb            <span class="token number">1</span>/1     Running   <span class="token number">0</span>          56mfstest-544bbcb957-wfqq4            <span class="token number">1</span>/1     Running   <span class="token number">0</span>          56mweb-0                              <span class="token number">1</span>/1     Running   <span class="token number">0</span>          127mweb-1                              <span class="token number">1</span>/1     Running   <span class="token number">0</span>          126mweb-2                              <span class="token number">1</span>/1     Running   <span class="token number">0</span>          126mwordpress-mysql-59d6d7c875-s9n2g   <span class="token number">1</span>/1     Running   <span class="token number">0</span>          150m<span class="token punctuation">[</span>root@k8s-master01 rbd<span class="token punctuation">]</span><span class="token comment"># kubectl exec -it csirbd-demo-pod bash </span>kubectl <span class="token builtin class-name">exec</span> <span class="token punctuation">[</span>POD<span class="token punctuation">]</span> <span class="token punctuation">[</span>COMMAND<span class="token punctuation">]</span> is DEPRECATED and will be removed <span class="token keyword">in</span> a future version. Use kubectl <span class="token builtin class-name">exec</span> <span class="token punctuation">[</span>POD<span class="token punctuation">]</span> -- <span class="token punctuation">[</span>COMMAND<span class="token punctuation">]</span> instead.root@csirbd-demo-pod:/<span class="token comment"># ls /var/lib/www/html</span>haha.txt  lost+found  mltest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="九、PVC克隆"><a href="#九、PVC克隆" class="headerlink" title="九、PVC克隆"></a>九、PVC克隆</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 rbd<span class="token punctuation">]</span><span class="token comment"># pwd </span>/root/yaml/rook/rook/deploy/examples/csi/rbd<span class="token punctuation">[</span>root@k8s-master01 rbd<span class="token punctuation">]</span><span class="token comment"># cat pvc-clone.yaml</span>---apiVersion: v1kind: PersistentVolumeClaimmetadata:  name: rbd-pvc-clonespec:  storageClassName: rook-ceph-block  dataSource:    name: www-web-0    kind: PersistentVolumeClaim  accessModes:    - ReadWriteOnce  resources:    requests:      storage: 21Gi<span class="token punctuation">[</span>root@k8s-master01 rbd<span class="token punctuation">]</span><span class="token comment"># kubectl get pvc </span>NAME              STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS      AGEcephfs-pvc        Bound    pvc-65327259-0add-4d22-a178-9021a4287442   25Gi       RWX            rook-cephfs       67mmysql-pv-claim    Bound    pvc-1a205d15-3d0b-441f-9811-31e974aff4aa   20Gi       RWO            rook-ceph-block   162mrbd-pvc-clone     Bound    pvc-c5f7d985-8582-41cc-94d6-3c9fc5c2987f   21Gi       RWO            rook-ceph-block   2srbd-pvc-restore   Bound    pvc-38c4048f-b799-4e73-9678-73f261f5d882   21Gi       RWO            rook-ceph-block   23mwww-web-0         Bound    pvc-017ff95d-4c9b-4502-bfba-67c407a959c9   20Gi       RWO            rook-ceph-block   155mwww-web-1         Bound    pvc-84edb236-2940-4297-86f9-b0a9ea9b9390   20Gi       RWO            rook-ceph-block   155mwww-web-2         Bound    pvc-a2740af1-065d-44fa-b2e6-9f407c306b9b   20Gi       RWO            rook-ceph-block   150m<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>需要注意的是 pvc-clone.yaml 的 dataSource 的 name 是被克隆的 pvc 名称，在此是 www-web-0，storageClassName 为新建 pvc 的 storageClass 名称，storage 不能小于之前 pvc 的大小。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;使用rook-ceph部署高可用ceph集群&quot;&gt;&lt;a href=&quot;#使用rook-ceph部署高可用ceph集群&quot; class=&quot;headerlink&quot; title=&quot;使用rook-ceph部署高可用ceph集群&quot;&gt;&lt;/a&gt;使用rook-ceph部署高可用ceph</summary>
      
    
    
    
    <category term="ceph" scheme="http://dycloud.fun/categories/ceph/"/>
    
    
    <category term="ceph" scheme="http://dycloud.fun/tags/ceph/"/>
    
  </entry>
  
  <entry>
    <title>记录AWS Oracle实例数据迁移的艰辛过程</title>
    <link href="http://dycloud.fun/2024/03/12/%E8%AE%B0%E5%BD%95AWS%20Oracle%E5%AE%9E%E4%BE%8B%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB%E7%9A%84%E8%89%B0%E8%BE%9B%E8%BF%87%E7%A8%8B/"/>
    <id>http://dycloud.fun/2024/03/12/%E8%AE%B0%E5%BD%95AWS%20Oracle%E5%AE%9E%E4%BE%8B%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB%E7%9A%84%E8%89%B0%E8%BE%9B%E8%BF%87%E7%A8%8B/</id>
    <published>2024-03-12T04:12:23.000Z</published>
    <updated>2024-03-12T07:49:41.769Z</updated>
    
    <content type="html"><![CDATA[<p>最近公司在aws的项目要迁移到我们公司云平台，需要将aws上面的rds（oracle）实例迁移到本地云平台，遇到各种各样的问题，下面总结下遇到的所有问题及解决方法。<br>我这边用了各种各样的方法进行迁移，最终才成功将数据迁回</p><h3 id="方法1（失败）：navicat-工具，因对oracle数据库不太熟悉，所以首先选择用工具直接同步，此过程步骤简单，只需要在工具上选择源库和目标库同步即可"><a href="#方法1（失败）：navicat-工具，因对oracle数据库不太熟悉，所以首先选择用工具直接同步，此过程步骤简单，只需要在工具上选择源库和目标库同步即可" class="headerlink" title="方法1（失败）：navicat 工具，因对oracle数据库不太熟悉，所以首先选择用工具直接同步，此过程步骤简单，只需要在工具上选择源库和目标库同步即可"></a>方法1（失败）：navicat 工具，因对oracle数据库不太熟悉，所以首先选择用工具直接同步，此过程步骤简单，只需要在工具上选择源库和目标库同步即可</h3><p><img src="/images/aws1.png" alt="image"><br>问题：</p><ul><li>用工具导出速度很慢，1秒大概导出1000条左右，且会随着导出时长增加而增加</li><li>容易中断，我这边首次导出到60多w条数据时工具卡住，无法继续导出</li><li>数据导出不全，通过navicat导出发现大部分表数据不全，甚至有些表数据完全没有导入</li></ul><p>基于上面遇到的问题，所以舍弃了该方法</p><h3 id="方法2（失败）：导出sql文件后，使用sqlplus导入"><a href="#方法2（失败）：导出sql文件后，使用sqlplus导入" class="headerlink" title="方法2（失败）：导出sql文件后，使用sqlplus导入"></a>方法2（失败）：导出sql文件后，使用sqlplus导入</h3><p>sql文件可以用工具导出，我这边还是使用navicat导出sql文件，导出后如下图是每个表生成一个sql文件<br><img src="/images/aws2.png" alt="image"></p><p>使用sqlplus进入需导入数据的库中进行导入发现部分表报错了，报错原因是中有超过3000个字符长度的字段，而sqlplus不支持超过3000的，需要手动更改sql语句，因表数据量较大，故放弃此方法</p><p><img src="/images/aws3.png" alt="image"></p><h3 id="方法3（失败）：导出csv文件，再通过sqlload导入"><a href="#方法3（失败）：导出csv文件，再通过sqlload导入" class="headerlink" title="方法3（失败）：导出csv文件，再通过sqlload导入"></a>方法3（失败）：导出csv文件，再通过sqlload导入</h3><h5 id="1、使用工具导出csv文件，注意字段分隔符和行分隔符。"><a href="#1、使用工具导出csv文件，注意字段分隔符和行分隔符。" class="headerlink" title="1、使用工具导出csv文件，注意字段分隔符和行分隔符。"></a>1、使用工具导出csv文件，注意字段分隔符和行分隔符。</h5><h5 id="2、创建控制文件"><a href="#2、创建控制文件" class="headerlink" title="2、创建控制文件"></a>2、创建控制文件</h5><p>该定义解析和导入CSV文件的数据。控制文件需要指定csv文件的位置、字段分隔符、数据格式等，需要和导出时候指定的相同，下面是我导出某个表的一个控制文件，可以看到字段比较多</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>oracle@waixuan-prod ~/pub<span class="token punctuation">]</span>$ <span class="token function">cat</span> epub_p_publications.ctlLOAD DATAINFILE <span class="token string">'EPUB_P_PUBLICATIONS.csv'</span>BADFILE <span class="token string">'epub_p_publications_data.bad'</span>DISCARDFILE <span class="token string">'epub_p_publications_data.discard'</span>INTO TABLE EPUBLISHING.EPUB_P_PUBLICATIONSFIELDS TERMINATED BY <span class="token string">','</span> OPTIONALLY ENCLOSED BY <span class="token string">'\"'</span> TRAILING NULLCOLS<span class="token punctuation">(</span>PUB_ID,PUB_PARENT_ID,PUB_VOLUME_ID,PUB_ISSUE_ID,PUBLISHER_ID,PUB_TITLE,PUB_CHINESE_TITLE,PUB_AUTHOR,PUB_CODE,PUB_HAVEMARC,PUB_MARCPATH,PUB_PAGE_START,PUB_PAGE_END,LIST_PRICE,LCURR,SALE_PRICE,SCURR,BROWSE_PRECENT,IN_COLLECTION,CONTENT_TYPE,CONTENT_COVER,CREATE_ON TIMESTAMP <span class="token string">"DD/MM/YYYY HH24:MI:SS.FF3"</span>,UPDATE_ON TIMESTAMP <span class="token string">"DD/MM/YYYY HH24:MI:SS.FF3"</span>,CONTENT_PDF,PUB_PATH,PUB_LANG,CONTENT_BREED,CONTENT_SUBTITLE,CONTENT_MEDIA,CONTENT_ORIGINALNO,CONTENT_VOLUMESNUM,CONTENT_NORMS,CONTENT_EVOLUTION,HOMEPAGE,NEWEST,SELECTED,SPECIAL,STATUS,OA,FREE,PUB_DATE,PUB_SUBJECT,PUB_LOCAL,PUB_WEB_URL,PUB_CREATE_DATE,SISBN,HISBN,CONTENT_ACTIVITY,PUB_SUBJECT_EN,SOURCE_ID,BUY_TIMES,PUB_YEAR,PUB_MONTH,PUB_DAY,PUB_VOLUME,START_VOLUME,END_VOLUME,PUB_ISSUE,PUB_DOI,PUB_KEYWORD,PUB_REFERENCE,SUBSCRIPTION_CODE,CODE_ISSUED_ABROAD,POST_JOURNAL_CODE,CN_CODE,OLD_JOURNAL_CODE,JOURNAL_CODE,FORMERLY,TITLE_PINYIN,THEME,AUDIENCE,PUB_SIZE,REVISION,OTHER_AUTHOR,CHOICE,COLLECTION_BOOK_SUBCODE,VOLUME_BOOK_SUBCODE,IS_COLLECTION_BOOK,IS_VOLUME_BOOK,VICE_TITLE,CONTENT_WORDS,CONTENT_EDITOR,CONTENT_PAGE_NUM,CONTENT_PLACE,CONTENT_LANG,ISSUE_METHOD_ID,FORMAT_ID,PUBLISH_METHOD_ID,CONTENT_VOLUME_BOOK_ID,CONTENT_COLLECTION_BOOK_ID,DIC_ID,JOUR_DIC_ID,CONTENT_FORMAT,CONTENT_SPONSORS,JOURNALSTATUS,PUB_INITIAL,PUB_ABSTRACT char<span class="token punctuation">(</span><span class="token number">99999</span><span class="token punctuation">)</span>,AUTHOR_PINYIN,CONTENT_SHUMING,CONTENT_FENCE,CONTENT_FENCE_TITLE,CONTENT_BINGLIE_TITLE,CONTENT_AUTHOR_JIANJIE,CONTENT_XINXIYUAN,CONTENT_GONGHUOSHANG,CONTENT_MUCI,CONTENT_CONG_SHU,CONTENT_BEIZHU,ISINSOLR,CONTENT_GROUP,CONTENT_SUBJECTCN_WX,CONTENT_SUBJECTEN_WX,CONTENT_SUBJECT_WX,CONTENT_STATUS_WX,SHELVES_STATUS<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="3、运行sqlldr命令"><a href="#3、运行sqlldr命令" class="headerlink" title="3、运行sqlldr命令"></a>3、运行sqlldr命令</h5><p>需要指定用户名、密码、控制文件、日志文件、支持最大的错误数量，注意要导入的表不能有数据，必须是空表</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>oracle@waixuan-prod ~/pub<span class="token punctuation">]</span>$ sqlldr <span class="token assign-left variable">userid</span><span class="token operator">=</span>epublishing/xxxxxxx <span class="token assign-left variable">control</span><span class="token operator">=</span>epub_p_publications.ctl <span class="token assign-left variable">log</span><span class="token operator">=</span>epub_p_publications.log <span class="token assign-left variable">errors</span><span class="token operator">=</span><span class="token number">9999999999</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>执行后如下图开始导入，原本以为很顺利，导入速度也比较快，100万数据大概30+秒左右导入完成<br><img src="/images/aws4.png" alt="image"><br>导入完成发现导入日志有大量报错信息，信息如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Record <span class="token number">13110</span>: Rejected - Error on table EPUBLISHING.EPUB_P_PUBLICATIONS, <span class="token function">column</span> PUB_ABSTRACT.second enclosure string not present<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>报错显示<code>PUB_ABSTRACT</code> 这个字段导入有问题，查了报错的原因可能如下：<br>1、查看源表该字段发现该字段是<code>long</code>类型，而我ctl文件中指定的该字段为<code>char(99999)</code>类型，如果该字段有任何记录超过该类型就不会被完全导入<br>2、<code>sqlload</code>的限制，<code>sqlload</code>处理<code>long</code>类型字段时可能会有限制或不支持，看了下oracle官网建议使用<code>clob</code>数据类型代替<code>long</code>，但是ctl文件中不能指定<code>CLOB</code>类型。<br>基于上面2个问题，发现数据还是无法完整导入，故放弃。</p><h3 id="方法4（成功）：使用Oracle-Data-Pump和数据库连接导入数据"><a href="#方法4（成功）：使用Oracle-Data-Pump和数据库连接导入数据" class="headerlink" title="方法4（成功）：使用Oracle Data Pump和数据库连接导入数据"></a>方法4（成功）：使用Oracle Data Pump和数据库连接导入数据</h3><p>该方法是查看aws官网推荐方式，链接如下：<a href="%E8%AF%A5%E6%96%B9%E6%B3%95%E6%98%AF%E6%9F%A5%E7%9C%8Baws%E5%AE%98%E7%BD%91%E6%8E%A8%E8%8D%90%E6%96%B9%E5%BC%8F%EF%BC%8C%E9%93%BE%E6%8E%A5%E5%A6%82%E4%B8%8B%EF%BC%9Ahttps://docs.aws.amazon.com/zh_cn/AmazonRDS/latest/UserGuide/Oracle.Procedural.Importing.DataPump.html#Oracle.Procedural.Importing.DataPumpDBLink.requirements%20%E5%85%B6%E5%AE%9E%E5%AE%98%E7%BD%91%E6%8E%A8%E8%8D%90%E6%9C%89%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F">https://docs.aws.amazon.com/zh_cn&#x2F;AmazonRDS&#x2F;latest&#x2F;UserGuide&#x2F;Oracle.Procedural.Importing.DataPump.html#Oracle.Procedural.Importing.DataPumpDBLink.requirements</a><br>其实官网推荐有两种方式</p><ul><li>1、使用<code>Oracle DataPump</code>和<code>AmazonS3</code>存储桶导入数据</li><li>2、使用<code>Oracle DataPump</code>和数据库连接导入数据</li></ul><p>我这边首先试的是第一种方式，该方法步骤如下：</p><ol><li>在<code>RDS for oracle </code>目标数据库实例上向数据库用户授予权限</li><li>使用<code>DBMS_DATAPUMP</code>将数据导出到转存文件中</li><li>将转存文件上传到AmazonS3存储桶</li><li>将转存文件从<code>AmazonS3</code>桶下载到目标数据库实例</li><li>使用<code>DBMS_DATAPUMP</code>将转存文件导入到目标数据库实例</li></ol><p>该种方法我这边尝试失败，卡在步骤3，无法将转存文件上传到S3桶，因项目时间问题没有过多研究，故选择第二种官方推荐方式，该方法流程如下：</p><h5 id="1-在RDS-for-oracle目标数据库实例上向用户授予权限"><a href="#1-在RDS-for-oracle目标数据库实例上向用户授予权限" class="headerlink" title="1. 在RDS for oracle目标数据库实例上向用户授予权限"></a>1. 在<code>RDS for oracle</code>目标数据库实例上向用户授予权限</h5><h5 id="2-向用户授予源数据库权限"><a href="#2-向用户授予源数据库权限" class="headerlink" title="2. 向用户授予源数据库权限"></a>2. 向用户授予源数据库权限</h5><h5 id="3-在源库使用DBMS-DATAPUMP创建转存文件"><a href="#3-在源库使用DBMS-DATAPUMP创建转存文件" class="headerlink" title="3. 在源库使用DBMS_DATAPUMP创建转存文件"></a>3. 在源库使用<code>DBMS_DATAPUMP</code>创建转存文件</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">DECLARE  v_hdnl NUMBER<span class="token punctuation">;</span>BEGIN  v_hdnl :<span class="token operator">=</span> DBMS_DATAPUMP.OPEN<span class="token punctuation">(</span>     operation <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'EXPORT'</span> ,     job_mode  <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'SCHEMA'</span> ,     job_name  <span class="token operator">=</span><span class="token operator">></span> null  <span class="token punctuation">)</span><span class="token punctuation">;</span>  DBMS_DATAPUMP.ADD_FILE<span class="token punctuation">(</span>     handle    <span class="token operator">=</span><span class="token operator">></span> v_hdnl,     filename  <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'sample.dmp'</span>    ,     directory <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'DATA_PUMP_DIR'</span> ,     filetype  <span class="token operator">=</span><span class="token operator">></span> dbms_datapump.ku<span class="token variable">$_file_type_dump_file</span>  <span class="token punctuation">)</span><span class="token punctuation">;</span>  DBMS_DATAPUMP.ADD_FILE<span class="token punctuation">(</span>     handle    <span class="token operator">=</span><span class="token operator">></span> v_hdnl           ,     filename  <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'sample_exp.log'</span> ,     directory <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'DATA_PUMP_DIR'</span>  ,     filetype  <span class="token operator">=</span><span class="token operator">></span> dbms_datapump.ku<span class="token variable">$_file_type_log_file</span>  <span class="token punctuation">)</span><span class="token punctuation">;</span>  DBMS_DATAPUMP.METADATA_FILTER<span class="token punctuation">(</span>    v_hdnl              ,    <span class="token string">'SCHEMA_EXPR'</span>       ,    <span class="token string">'IN ('</span>'SCHEMA_1<span class="token string">''</span><span class="token punctuation">)</span><span class="token string">'  );  DBMS_DATAPUMP.METADATA_FILTER(    v_hdnl,    '</span>EXCLUDE_NAME_EXPR<span class="token string">',    q'</span><span class="token punctuation">[</span>IN <span class="token punctuation">(</span>SELECT NAME FROM sys.OBJ$            WHERE TYPE<span class="token comment"># IN (66,67,74,79,59,62,46) </span>           AND OWNER<span class="token comment"># IN </span>             <span class="token punctuation">(</span>SELECT <span class="token environment constant">USER</span><span class="token comment"># FROM SYS.USER$ </span>              WHERE NAME IN <span class="token punctuation">(</span><span class="token string">'RDSADMIN'</span>,<span class="token string">'SYS'</span>,<span class="token string">'SYSTEM'</span>,<span class="token string">'RDS_DATAGUARD'</span>,<span class="token string">'RDSSEC'</span><span class="token punctuation">)</span>             <span class="token punctuation">)</span>          <span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token string">',    '</span>PROCOBJ'  <span class="token punctuation">)</span><span class="token punctuation">;</span>  DBMS_DATAPUMP.START_JOB<span class="token punctuation">(</span>v_hdnl<span class="token punctuation">)</span><span class="token punctuation">;</span>END<span class="token punctuation">;</span>/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>也可以使用<code>expdb</code>，<code>directory </code>可以使用原有目录<code>DATA_PUMP_DIR</code>，或自行创建<br>目录可以通过<code>SELECT directory_name, directory_path FROM dba_directories; </code>命令查询</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">expdp  dbman1/xxxxxxx@datacenter.cbxxxxxxxx.us-east-2.rds.amazonaws.com/datacent <span class="token assign-left variable">schemas</span><span class="token operator">=</span>mailserver  <span class="token assign-left variable">DIRECTORY</span><span class="token operator">=</span>DATA_PUMP_DIR <span class="token assign-left variable">DUMPFILE</span><span class="token operator">=</span>mailservers.dmp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>导出之后会在该RDS实例的DIRECTORY 目录下生成mailservers.dmp，<strong>但我这里无法看到，因为是RDS数据库无法和常规自建数据库一样，连接到服务器上查看，所以也无法使用常规方法将dmp文件下载</strong></p><h5 id="4-在源库中创建目标数据库实例的数据库链接"><a href="#4-在源库中创建目标数据库实例的数据库链接" class="headerlink" title="4. 在源库中创建目标数据库实例的数据库链接"></a>4. 在源库中创建目标数据库实例的数据库链接</h5><p>创建名为<code>tolocal</code>的数据库连接，连接到位于我们公司云上的自建数据库实例</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">CREATE DATABASE LINK tolocal   CONNECT TO <span class="token operator">&lt;</span>master_user_account<span class="token operator">></span> IDENTIFIED BY <span class="token operator">&lt;</span>password<span class="token operator">></span>  USING <span class="token string">'(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=&lt;dns or ip address of remote db>)         (PORT=&lt;listener port>))(CONNECT_DATA=(SID=&lt;remote SID>)))'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="5-使用DMBS-FILE-TRANSFER将导出的转存文件复制到目标数据库实例"><a href="#5-使用DMBS-FILE-TRANSFER将导出的转存文件复制到目标数据库实例" class="headerlink" title="5. 使用DMBS_FILE_TRANSFER将导出的转存文件复制到目标数据库实例"></a>5. 使用DMBS_FILE_TRANSFER将导出的转存文件复制到目标数据库实例</h5><p>在源库使用 <code>DBMS_FILE_TRANSFER</code> 将转储文件从源数据库实例复制到目标数据库实例。以下脚本将名为<code> sample.dmp</code> 的转储文件从源实例复制到名为<code> tolocal</code> 的目标数据库链接</p><ul><li><code>source_directory_object</code>：源数据库目录对象</li><li><code>source_file_name</code>：源数据库dmp文件名</li><li><code>destination_directory_object</code>：目标数据库目录对象</li><li><code>destination_file_name</code>：目标数据库dmp文件名</li><li><code>destination_database</code>：指定上面第4步创建的链接名</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">BEGIN  DBMS_FILE_TRANSFER.PUT_FILE<span class="token punctuation">(</span>    source_directory_object       <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'DATA_PUMP_DIR'</span>,    source_file_name              <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'sample.dmp'</span>,    destination_directory_object  <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'DATA_PUMP_DIR'</span>,    destination_file_name         <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'sample_copied.dmp'</span>,     destination_database          <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'to_rds'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>END<span class="token punctuation">;</span>/ <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>该过程主要看数据量，执行后要耐心等待一段时间，执行成功后可以到目标oracle实例所在的服务器的<code>DATA_PUMP_DIR</code> 目录对应的路径查看是否有该<code>destination_file_name</code>文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>oracle@waixuan-test ~<span class="token punctuation">]</span>$  ll /data/oracle/product/19.3.000/db_home/rdbms/log/total <span class="token number">9506324</span>-rw-r----- <span class="token number">1</span> oracle oinstall <span class="token number">3442290688</span> Mar <span class="token number">12</span> <span class="token number">10</span>:46 CONVERTERALLNEWS.dmp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h5 id="6-使用Oracle-Data-Pump-impdp方法将转存文件导入到目标数据库实例"><a href="#6-使用Oracle-Data-Pump-impdp方法将转存文件导入到目标数据库实例" class="headerlink" title="6. 使用Oracle Data Pump impdp方法将转存文件导入到目标数据库实例"></a>6. 使用Oracle Data Pump impdp方法将转存文件导入到目标数据库实例</h5><p>在目标库使用下面的命令将转存文件导入到数据库中</p><ul><li><code>DIRECTORY</code>：对应第5步的<code>destination_directory_object</code></li><li><code>DUMPFILE</code>：对应第5步的<code>destination_file_name</code></li><li><code>LOGFILE</code>：指定导入的日志文件名</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">impdp  converterserver/xxxxxx <span class="token assign-left variable">DIRECTORY</span><span class="token operator">=</span>yusys_dbdump_dir <span class="token assign-left variable">DUMPFILE</span><span class="token operator">=</span>CONVERTER_ALL_TABLES_all.dmp <span class="token assign-left variable">LOGFILE</span><span class="token operator">=</span>import_log.log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>原以为这样终于可以导入成功。。。但意外来的总是那么突然<br><img src="/images/aws5.png" alt="image"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ORA-39002: invalid operationORA-39405: Oracle Data Pump does not support importing from a <span class="token builtin class-name">source</span> database with TSTZ version <span class="token number">33</span> into a target database with TSTZ version <span class="token number">32</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>好吧，继续，查看报错信息发现是源库的时区和目标库的时区不同导致导入失败，查看源库和目标库时区：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">-- 源库：SELECT version FROM <span class="token function">v</span><span class="token variable">$timezone_file</span><span class="token punctuation">;</span><span class="token number">33</span>-- 目标库：SELECT version FROM <span class="token function">v</span><span class="token variable">$timezone_file</span><span class="token punctuation">;</span><span class="token number">32</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到源库33，目标库32，所以需要升级目标库的时区，升级方法如下：<br>首先需要下载时区补丁，这个补丁不确定是否需要购买相关支持才有权限下载，我这边也是通过渠道获得的相关补丁。<br>解压补丁，将文件上传到需升级时区的数据库服务器上，然后将其解压到Opatch目录下，这个是我的路径</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>oracle@waixuan-test /data/oracle/product/19.3.000/db_home/OPatch<span class="token punctuation">]</span>$ <span class="token builtin class-name">pwd</span> /data/oracle/product/19.3.000/db_home/OPatch<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>解压补丁包后有两个目录，将这两个目录移动到Opatch目录下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>oracle@waixuan-test /data/oracle/product/19.3.000/db_home/OPatch/buding/28852325<span class="token punctuation">]</span>$ lltotal <span class="token number">16</span>drwxr-x--- <span class="token number">3</span> oracle oinstall <span class="token number">4096</span> Aug  <span class="token number">9</span>  <span class="token number">2019</span> etcdrwxr-x--- <span class="token number">3</span> oracle oinstall <span class="token number">4096</span> Aug  <span class="token number">9</span>  <span class="token number">2019</span> files-rw-rw-r-- <span class="token number">1</span> oracle oinstall <span class="token number">5779</span> Aug  <span class="token number">9</span>  <span class="token number">2019</span> README.txt<span class="token punctuation">[</span>oracle@waixuan-test /data/oracle/product/19.3.000/db_home/OPatch<span class="token punctuation">]</span>$ lltotal <span class="token number">228</span>drwxrwxrwx <span class="token number">6</span> oracle oinstall  <span class="token number">4096</span> Apr <span class="token number">12</span>  <span class="token number">2019</span> autodrwxr-x--- <span class="token number">3</span> oracle oinstall  <span class="token number">4096</span> Mar <span class="token number">12</span> <span class="token number">14</span>:49 budingdrwxrwxrwx <span class="token number">2</span> oracle oinstall  <span class="token number">4096</span> Apr <span class="token number">12</span>  <span class="token number">2019</span> config-rwxr-x--- <span class="token number">1</span> oracle oinstall   <span class="token number">589</span> Apr <span class="token number">12</span>  <span class="token number">2019</span> datapatchdrwxrwxrwx <span class="token number">2</span> oracle oinstall  <span class="token number">4096</span> Apr <span class="token number">12</span>  <span class="token number">2019</span> docs-rwxr-x--- <span class="token number">1</span> oracle oinstall <span class="token number">23550</span> Apr <span class="token number">12</span>  <span class="token number">2019</span> emdpatch.pldrwxr-x--- <span class="token number">3</span> oracle oinstall  <span class="token number">4096</span> Aug  <span class="token number">9</span>  <span class="token number">2019</span> etcdrwxr-x--- <span class="token number">3</span> oracle oinstall  <span class="token number">4096</span> Aug  <span class="token number">9</span>  <span class="token number">2019</span> filesdrwxrwxrwx <span class="token number">2</span> oracle oinstall  <span class="token number">4096</span> Jan <span class="token number">23</span> 08:47 jlibdrwxrwxrwx <span class="token number">5</span> oracle oinstall  <span class="token number">4096</span> Aug <span class="token number">17</span>  <span class="token number">2018</span> jredrwxrwxrwx <span class="token number">9</span> oracle oinstall  <span class="token number">4096</span> Apr <span class="token number">12</span>  <span class="token number">2019</span> modulesdrwxrwxrwx <span class="token number">5</span> oracle oinstall  <span class="token number">4096</span> Apr <span class="token number">12</span>  <span class="token number">2019</span> ocm-rwxr-x--- <span class="token number">1</span> oracle oinstall <span class="token number">48493</span> Apr <span class="token number">12</span>  <span class="token number">2019</span> opatch-rwxr-x--- <span class="token number">1</span> oracle oinstall  <span class="token number">1442</span> Apr <span class="token number">12</span>  <span class="token number">2019</span> opatchauto-rwxrwxrwx <span class="token number">1</span> oracle oinstall   <span class="token number">393</span> Apr <span class="token number">12</span>  <span class="token number">2019</span> opatchauto.cmd-rwxrwxrwx <span class="token number">1</span> oracle oinstall  <span class="token number">4290</span> Apr <span class="token number">12</span>  <span class="token number">2019</span> opatch_env.sh-rwxr-x--- <span class="token number">1</span> oracle oinstall  <span class="token number">2551</span> Apr <span class="token number">12</span>  <span class="token number">2019</span> opatch.pldrwxrwxrwx <span class="token number">4</span> oracle oinstall  <span class="token number">4096</span> Apr <span class="token number">12</span>  <span class="token number">2019</span> opatchprereqs-rwxr-x--- <span class="token number">1</span> oracle oinstall  <span class="token number">3159</span> Apr <span class="token number">12</span>  <span class="token number">2019</span> operr-rwxrwxrwx <span class="token number">1</span> oracle oinstall  <span class="token number">3177</span> Apr <span class="token number">12</span>  <span class="token number">2019</span> operr_readme.txtdrwxrwxrwx <span class="token number">2</span> oracle oinstall  <span class="token number">4096</span> Apr <span class="token number">12</span>  <span class="token number">2019</span> oplandrwxrwxrwx <span class="token number">3</span> oracle oinstall  <span class="token number">4096</span> Apr <span class="token number">12</span>  <span class="token number">2019</span> oracle_commondrwxrwxrwx <span class="token number">3</span> oracle oinstall  <span class="token number">4096</span> Apr <span class="token number">12</span>  <span class="token number">2019</span> plugins-rw-rw-r-- <span class="token number">1</span> oracle oinstall  <span class="token number">5779</span> Aug  <span class="token number">9</span>  <span class="token number">2019</span> README.txtdrwxrwxrwx <span class="token number">2</span> oracle oinstall  <span class="token number">4096</span> Jan <span class="token number">23</span> 08:47 scripts-rw-r----- <span class="token number">1</span> oracle oinstall    <span class="token number">27</span> Apr <span class="token number">12</span>  <span class="token number">2019</span> version.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在此目录下执行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>oracle@iZ2zehl1ro7yd08bzf0h3rZ OPatch<span class="token punctuation">]</span>$ ./opatch apply<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/images/aws6.png" alt="image"><br>看到下图的提示就是成功了<br><img src="/images/aws7.png" alt="image"><br>查看已装补丁情况</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">opatch lsinventory<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后需要执行补丁sql<br>upg_tzv_check.sql<br>upg_tzv_apply.sql</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>oracle@iZ2zehl1ro7yd08bzf0h3rZ yusys<span class="token punctuation">]</span>$ sqlplus / as sysdba SQL*Plus: Release <span class="token number">19.0</span>.0.0.0 - Production on Tue Mar <span class="token number">12</span> <span class="token number">10</span>:18:20 <span class="token number">2024</span>Version <span class="token number">19.3</span>.0.0.0Copyright <span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token number">1982</span>, <span class="token number">2019</span>, Oracle.  All rights reserved.Connected to:Oracle Database 19c Enterprise Edition Release <span class="token number">19.0</span>.0.0.0 - ProductionVersion <span class="token number">19.3</span>.0.0.0SQL<span class="token operator">></span> @upg_tzv_check.sql<span class="token punctuation">;</span>INFO: Starting with RDBMS DST update preparation.INFO: NO actual RDBMS DST update will be <span class="token keyword">done</span> by this script.INFO: If an ERROR occurs the script will EXIT sqlplus.INFO: Doing checks <span class="token keyword">for</span> known issues <span class="token punctuation">..</span>.INFO: Database version is <span class="token number">19.0</span>.0.0 <span class="token builtin class-name">.</span>INFO: Database RDBMS DST version is DSTv32 <span class="token builtin class-name">.</span>INFO: No known issues detected.INFO: Now detecting new RDBMS DST version.A prepare window has been successfully started.INFO: Newest RDBMS DST version detected is DSTv33 <span class="token builtin class-name">.</span>INFO: Next step is checking all TSTZ data.INFO: It might take a <span class="token keyword">while</span> before any further output is seen <span class="token punctuation">..</span>.A prepare window has been successfully ended.INFO: A newer RDBMS DST version than the one currently used is found.INFO: Note that NO DST update was yet done.INFO: Now run upg_tzv_apply.sql to <span class="token keyword">do</span> the actual RDBMS DST update.INFO: Note that the upg_tzv_apply.sql script willINFO: restart the database <span class="token number">2</span> <span class="token builtin class-name">times</span> WITHOUT any confirmation or prompt.SQL<span class="token operator">></span> @upg_tzv_apply.sql<span class="token punctuation">;</span>INFO: If an ERROR occurs the script will EXIT sqlplus.INFO: The database RDBMS DST version will be updated to DSTv33 <span class="token builtin class-name">.</span>WARNING: This script will restart the database <span class="token number">2</span> <span class="token builtin class-name">times</span>WARNING: WITHOUT asking ANY confirmation.WARNING: Hit control-c NOW <span class="token keyword">if</span> this is not intended.INFO: Restarting the database <span class="token keyword">in</span> UPGRADE mode to start the DST upgrade.Database closed.Database dismounted.ORACLE instance shut down.ORACLE instance started.Total System Global Area <span class="token number">9932109768</span> bytesFixed Size                 <span class="token number">12445640</span> bytesVariable Size            <span class="token number">1610612736</span> bytesDatabase Buffers         <span class="token number">8287944704</span> bytesRedo Buffers               <span class="token number">21106688</span> bytesDatabase mounted.Database opened.INFO: Starting the RDBMS DST upgrade.INFO: Upgrading all SYS owned TSTZ data.INFO: It might take <span class="token function">time</span> before any further output is seen <span class="token punctuation">..</span>.An upgrade window has been successfully started.INFO: Restarting the database <span class="token keyword">in</span> NORMAL mode to upgrade non-SYS TSTZ data.Database closed.Database dismounted.ORACLE instance shut down.ORACLE instance started.Total System Global Area <span class="token number">9932109768</span> bytesFixed Size                 <span class="token number">12445640</span> bytesVariable Size            <span class="token number">1610612736</span> bytesDatabase Buffers         <span class="token number">8287944704</span> bytesRedo Buffers               <span class="token number">21106688</span> bytesDatabase mounted.Database opened.INFO: Upgrading all non-SYS TSTZ data.INFO: It might take <span class="token function">time</span> before any further output is seen <span class="token punctuation">..</span>.INFO: Do NOT start any application yet that uses TSTZ data<span class="token operator">!</span>INFO: Next is a list of all upgraded tables:Table list: <span class="token string">"GSMADMIN_INTERNAL"</span><span class="token builtin class-name">.</span><span class="token string">"AQ<span class="token variable">$_CHANGE_LOG_QUEUE_TABLE_L</span>"</span>Number of failures: <span class="token number">0</span>Table list: <span class="token string">"GSMADMIN_INTERNAL"</span><span class="token builtin class-name">.</span><span class="token string">"AQ<span class="token variable">$_CHANGE_LOG_QUEUE_TABLE_S</span>"</span>Number of failures: <span class="token number">0</span>Table list: <span class="token string">"MDSYS"</span><span class="token builtin class-name">.</span><span class="token string">"SDO_DIAG_MESSAGES_TABLE"</span>Number of failures: <span class="token number">0</span>Table list: <span class="token string">"DVSYS"</span><span class="token builtin class-name">.</span><span class="token string">"AUDIT_TRAIL$"</span>Number of failures: <span class="token number">0</span>Table list: <span class="token string">"DVSYS"</span><span class="token builtin class-name">.</span><span class="token string">"SIMULATION_LOG$"</span>Number of failures: <span class="token number">0</span>INFO: Total failures during update of TSTZ data: <span class="token number">0</span> <span class="token builtin class-name">.</span>An upgrade window has been successfully ended.INFO: Your new Server RDBMS DST version is DSTv33 <span class="token builtin class-name">.</span>INFO: The RDBMS DST update is successfully finished.INFO: Make sure to <span class="token builtin class-name">exit</span> this sqlplus session.INFO: Do not use it <span class="token keyword">for</span> timezone related selects.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行过后查看当前数据库时区，和源库相同都是33了！<br><img src="/images/aws8.png" alt="image"><br>此时再执行导入命令就可以了<br><img src="/images/aws9.png" alt="image"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近公司在aws的项目要迁移到我们公司云平台，需要将aws上面的rds（oracle）实例迁移到本地云平台，遇到各种各样的问题，下面总结下遇到的所有问题及解决方法。&lt;br&gt;我这边用了各种各样的方法进行迁移，最终才成功将数据迁回&lt;/p&gt;
&lt;h3 id=&quot;方法1（失败）：nav</summary>
      
    
    
    
    <category term="oracle" scheme="http://dycloud.fun/categories/oracle/"/>
    
    
    <category term="oracle" scheme="http://dycloud.fun/tags/oracle/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes platform后端开发-cluster相关组件</title>
    <link href="http://dycloud.fun/2024/02/25/kubernetes%20platform%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91-cluster%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/"/>
    <id>http://dycloud.fun/2024/02/25/kubernetes%20platform%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91-cluster%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/</id>
    <published>2024-02-25T06:32:00.000Z</published>
    <updated>2024-04-07T08:44:14.569Z</updated>
    
    <content type="html"><![CDATA[<h1 id="kubernetes-platform后端开发-cluster相关组件"><a href="#kubernetes-platform后端开发-cluster相关组件" class="headerlink" title="kubernetes platform后端开发-cluster相关组件"></a>kubernetes platform后端开发-cluster相关组件</h1><h3 id="一、接口定义"><a href="#一、接口定义" class="headerlink" title="一、接口定义"></a>一、接口定义</h3><h5 id="1、namespace"><a href="#1、namespace" class="headerlink" title="1、namespace"></a>1、namespace</h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> NamespaceService <span class="token keyword">interface</span> <span class="token punctuation">&#123;</span>    <span class="token function">GetNamespaceList</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>GetNamespaceListRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>structs<span class="token punctuation">.</span>NamespaceListResp<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>    <span class="token function">DescribeNamespace</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>DescribeNamespaceRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>corev1<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>    <span class="token function">DeleteNamespace</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>DeleteNamespaceRequest<span class="token punctuation">)</span> <span class="token builtin">error</span>    <span class="token function">CreateNamespace</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>CreateNamespaceRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>corev1<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>    <span class="token function">UpdateNamespace</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>UpdateNamespaceRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>corev1<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2、node"><a href="#2、node" class="headerlink" title="2、node"></a>2、node</h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> NodeService <span class="token keyword">interface</span> <span class="token punctuation">&#123;</span>    <span class="token function">GetNodeList</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>GetNodeListRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>structs<span class="token punctuation">.</span>NodeListResp<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>    <span class="token function">DescribeNode</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>DescribeNodeRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>corev1<span class="token punctuation">.</span>Node<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="二、结构体定义"><a href="#二、结构体定义" class="headerlink" title="二、结构体定义"></a>二、结构体定义</h3><h5 id="1、namespace-1"><a href="#1、namespace-1" class="headerlink" title="1、namespace"></a>1、namespace</h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> structs<span class="token keyword">import</span> corev1 <span class="token string">"k8s.io/api/core/v1"</span><span class="token keyword">type</span> GetNamespaceListRequest <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    FilterName <span class="token builtin">string</span> <span class="token string">`json:"filterName"`</span>    <span class="token operator">*</span>DataPagination<span class="token punctuation">&#125;</span><span class="token keyword">type</span> DescribeNamespaceRequest <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    Name <span class="token builtin">string</span> <span class="token string">`json:"name"`</span><span class="token punctuation">&#125;</span><span class="token keyword">type</span> DeleteNamespaceRequest <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    Name <span class="token builtin">string</span> <span class="token string">`json:"name"`</span><span class="token punctuation">&#125;</span><span class="token keyword">type</span> CreateNamespaceRequest <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    Name <span class="token builtin">string</span> <span class="token string">`json:"name"`</span><span class="token punctuation">&#125;</span><span class="token keyword">type</span> NamespaceListResp <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    Total <span class="token builtin">int</span> <span class="token string">`json:"total"`</span>    Items <span class="token punctuation">[</span><span class="token punctuation">]</span>corev1<span class="token punctuation">.</span>Namespace<span class="token punctuation">&#125;</span><span class="token keyword">type</span> UpdateNamespaceRequest <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    Name    <span class="token builtin">string</span> <span class="token string">`json:"name"`</span>    Content <span class="token builtin">string</span> <span class="token string">`json:"content"`</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2、node-1"><a href="#2、node-1" class="headerlink" title="2、node"></a>2、node</h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> structs<span class="token keyword">import</span> <span class="token punctuation">(</span>    corev1 <span class="token string">"k8s.io/api/core/v1"</span><span class="token punctuation">)</span><span class="token keyword">type</span> GetNodeListRequest <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    IsMaster   <span class="token builtin">int</span>    <span class="token string">`json:"isMaster"`</span>    FilterName <span class="token builtin">string</span> <span class="token string">`json:"filterName"`</span>    <span class="token operator">*</span>DataPagination<span class="token punctuation">&#125;</span><span class="token keyword">type</span> DescribeNodeRequest <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    NodeName <span class="token builtin">string</span> <span class="token string">`json:"nodeName"`</span><span class="token punctuation">&#125;</span><span class="token keyword">type</span> NodeListResp <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    Total <span class="token builtin">int</span> <span class="token string">`json:"total"`</span>    Items <span class="token punctuation">[</span><span class="token punctuation">]</span>corev1<span class="token punctuation">.</span>Node<span class="token punctuation">&#125;</span><span class="token keyword">type</span> AddNodeRequest <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="三、实现类"><a href="#三、实现类" class="headerlink" title="三、实现类"></a>三、实现类</h5><h5 id="1、namespace-2"><a href="#1、namespace-2" class="headerlink" title="1、namespace"></a>1、namespace</h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> impl<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"context"</span>    <span class="token string">"encoding/json"</span>    <span class="token string">"fmt"</span>    <span class="token string">"k8s-platform/apps/k8sclient"</span>    <span class="token string">"k8s-platform/apps/k8sclient/cell"</span>    config2 <span class="token string">"k8s-platform/apps/k8sclient/impl/config"</span>    <span class="token string">"k8s-platform/apps/k8sclient/structs"</span>    <span class="token string">"k8s-platform/config"</span>    <span class="token string">"k8s-platform/exception"</span>    <span class="token string">"k8s-platform/ioc"</span>    corev1 <span class="token string">"k8s.io/api/core/v1"</span>    metav1 <span class="token string">"k8s.io/apimachinery/pkg/apis/meta/v1"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    ioc<span class="token punctuation">.</span><span class="token function">Controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Register</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>NamespaceImpl<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">type</span> NamespaceImpl <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    K8sClientInstance <span class="token operator">*</span>k8sclient<span class="token punctuation">.</span>K8sClient<span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>n <span class="token operator">*</span>NamespaceImpl<span class="token punctuation">)</span> <span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span>    n<span class="token punctuation">.</span>K8sClientInstance <span class="token operator">=</span> ioc<span class="token punctuation">.</span><span class="token function">Controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetObj</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>IOC_KUBECLIENT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span>k8sclient<span class="token punctuation">.</span>K8sClient<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>n <span class="token operator">*</span>NamespaceImpl<span class="token punctuation">)</span> <span class="token function">Name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> config<span class="token punctuation">.</span>NAMESPACE_IOC<span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>n <span class="token operator">*</span>NamespaceImpl<span class="token punctuation">)</span> <span class="token function">GetNamespaceList</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span>    request <span class="token operator">*</span>structs<span class="token punctuation">.</span>GetNamespaceListRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>structs<span class="token punctuation">.</span>NamespaceListResp<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    nsList<span class="token punctuation">,</span> err <span class="token operator">:=</span> n<span class="token punctuation">.</span>K8sClientInstance<span class="token punctuation">.</span>ClientSet<span class="token punctuation">.</span><span class="token function">CoreV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Namespaces</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">List</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>ListOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> exception<span class="token punctuation">.</span><span class="token function">GetNamespaceFailed</span><span class="token punctuation">(</span><span class="token string">"获取namespace列表失败：%s"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    f <span class="token operator">:=</span> structs<span class="token punctuation">.</span>DataFilter<span class="token punctuation">&#123;</span>FilterName<span class="token punctuation">:</span> request<span class="token punctuation">.</span>FilterName<span class="token punctuation">&#125;</span>    data <span class="token operator">:=</span> f<span class="token punctuation">.</span><span class="token function">Filter</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>structs<span class="token punctuation">.</span>DataSort<span class="token punctuation">&#123;</span>DataList<span class="token punctuation">:</span> n<span class="token punctuation">.</span><span class="token function">toCell</span><span class="token punctuation">(</span>nsList<span class="token punctuation">.</span>Items<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    data<span class="token punctuation">.</span><span class="token function">Sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    d <span class="token operator">:=</span> structs<span class="token punctuation">.</span>DataPagination<span class="token punctuation">&#123;</span>        PageSize<span class="token punctuation">:</span>   request<span class="token punctuation">.</span>PageSize<span class="token punctuation">,</span>        PageNumber<span class="token punctuation">:</span> request<span class="token punctuation">.</span>PageNumber<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>    data<span class="token punctuation">,</span> err <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token function">Paginate</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> exception<span class="token punctuation">.</span><span class="token function">NewGetPaginateFailed</span><span class="token punctuation">(</span><span class="token string">"获取分页数据失败：%s"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    result <span class="token operator">:=</span> <span class="token operator">&amp;</span>structs<span class="token punctuation">.</span>NamespaceListResp<span class="token punctuation">&#123;</span>        Total<span class="token punctuation">:</span> <span class="token function">len</span><span class="token punctuation">(</span>nsList<span class="token punctuation">.</span>Items<span class="token punctuation">)</span><span class="token punctuation">,</span>        Items<span class="token punctuation">:</span> n<span class="token punctuation">.</span><span class="token function">FromCell</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>DataList<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> result<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>n <span class="token operator">*</span>NamespaceImpl<span class="token punctuation">)</span> <span class="token function">DescribeNamespace</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span>    request <span class="token operator">*</span>structs<span class="token punctuation">.</span>DescribeNamespaceRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>corev1<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    ns<span class="token punctuation">,</span> err <span class="token operator">:=</span> n<span class="token punctuation">.</span>K8sClientInstance<span class="token punctuation">.</span>ClientSet<span class="token punctuation">.</span><span class="token function">CoreV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Namespaces</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> request<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>GetOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> exception<span class="token punctuation">.</span><span class="token function">DescribeNamespaceFailed</span><span class="token punctuation">(</span><span class="token string">"获取namespace详情失败：%s"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> ns<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>n <span class="token operator">*</span>NamespaceImpl<span class="token punctuation">)</span> <span class="token function">DeleteNamespace</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>DeleteNamespaceRequest<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"删除啊啊啊啊啊啊"</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span>Name<span class="token punctuation">)</span>    err <span class="token operator">:=</span> n<span class="token punctuation">.</span>K8sClientInstance<span class="token punctuation">.</span>ClientSet<span class="token punctuation">.</span><span class="token function">CoreV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Namespaces</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> request<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>DeleteOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> exception<span class="token punctuation">.</span><span class="token function">DeleteNamespaceFailed</span><span class="token punctuation">(</span><span class="token string">"删除失败：%s"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>n <span class="token operator">*</span>NamespaceImpl<span class="token punctuation">)</span> <span class="token function">CreateNamespace</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span>    request <span class="token operator">*</span>structs<span class="token punctuation">.</span>CreateNamespaceRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>corev1<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    namespace <span class="token operator">:=</span> config2<span class="token punctuation">.</span><span class="token function">NewNamespaceConfig</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span>    result<span class="token punctuation">,</span> err <span class="token operator">:=</span> n<span class="token punctuation">.</span>K8sClientInstance<span class="token punctuation">.</span>ClientSet<span class="token punctuation">.</span><span class="token function">CoreV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Namespaces</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> namespace<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>CreateOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> exception<span class="token punctuation">.</span><span class="token function">CreateNamespaceFailed</span><span class="token punctuation">(</span><span class="token string">"创建失败：%s"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> result<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>n <span class="token operator">*</span>NamespaceImpl<span class="token punctuation">)</span> <span class="token function">UpdateNamespace</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>UpdateNamespaceRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>corev1<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> namespace <span class="token operator">=</span> <span class="token operator">&amp;</span>corev1<span class="token punctuation">.</span>Namespace<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>Content<span class="token punctuation">,</span> <span class="token string">"——————————————————————————"</span><span class="token punctuation">)</span>    <span class="token comment">//  2、将前端传入的字符串反序列化为json格式并赋给deployment资源实例</span>    err <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Unmarshal</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>Content<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>namespace<span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> exception<span class="token punctuation">.</span><span class="token function">JsonUmarshalFailed</span><span class="token punctuation">(</span><span class="token string">"Json反序列化失败：%s"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 3、更新deployment</span>    newNamespace<span class="token punctuation">,</span> err <span class="token operator">:=</span> n<span class="token punctuation">.</span>K8sClientInstance<span class="token punctuation">.</span>ClientSet<span class="token punctuation">.</span><span class="token function">CoreV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>        <span class="token function">Namespaces</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> namespace<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>UpdateOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> exception<span class="token punctuation">.</span><span class="token function">UpdateDeploymentFailed</span><span class="token punctuation">(</span><span class="token string">"更新Namespace失败：%s"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> newNamespace<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token comment">/* * toCell * @Description: 将k8s中的nodelist对象转换成DataMeta对象 * @receiver d * @param data * @return []structs.DataMeta */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>NamespaceImpl<span class="token punctuation">)</span> <span class="token function">toCell</span><span class="token punctuation">(</span>data <span class="token punctuation">[</span><span class="token punctuation">]</span>corev1<span class="token punctuation">.</span>Namespace<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>structs<span class="token punctuation">.</span>DataMeta <span class="token punctuation">&#123;</span>    cells <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span>structs<span class="token punctuation">.</span>DataMeta<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> data <span class="token punctuation">&#123;</span>        cells<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> cell<span class="token punctuation">.</span><span class="token function">NamespaceCell</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> cells<span class="token punctuation">&#125;</span><span class="token comment">/* * FromCell * @Description: 将DataMeta列表转为k8s中的[]node对象 * @receiver d * @param data * @return []corev1.Node */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>NamespaceImpl<span class="token punctuation">)</span> <span class="token function">FromCell</span><span class="token punctuation">(</span>data <span class="token punctuation">[</span><span class="token punctuation">]</span>structs<span class="token punctuation">.</span>DataMeta<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>corev1<span class="token punctuation">.</span>Namespace <span class="token punctuation">&#123;</span>    cells <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span>corev1<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> data <span class="token punctuation">&#123;</span>        cells<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> corev1<span class="token punctuation">.</span><span class="token function">Namespace</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">(</span>cell<span class="token punctuation">.</span>NamespaceCell<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> cells<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2、node-2"><a href="#2、node-2" class="headerlink" title="2、node"></a>2、node</h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> impl<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"context"</span>    <span class="token string">"fmt"</span>    <span class="token string">"k8s-platform/apps/k8sclient"</span>    <span class="token string">"k8s-platform/apps/k8sclient/cell"</span>    <span class="token string">"k8s-platform/apps/k8sclient/structs"</span>    <span class="token string">"k8s-platform/config"</span>    <span class="token string">"k8s-platform/exception"</span>    <span class="token string">"k8s-platform/ioc"</span>    corev1 <span class="token string">"k8s.io/api/core/v1"</span>    metav1 <span class="token string">"k8s.io/apimachinery/pkg/apis/meta/v1"</span><span class="token punctuation">)</span><span class="token comment">/* * init * @Description: 将node impl对象注入ioc */</span><span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    ioc<span class="token punctuation">.</span><span class="token function">Controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Register</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>NodeImpl<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">type</span> NodeImpl <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    K8sClientInstance <span class="token operator">*</span>k8sclient<span class="token punctuation">.</span>K8sClient<span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>n <span class="token operator">*</span>NodeImpl<span class="token punctuation">)</span> <span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span>    n<span class="token punctuation">.</span>K8sClientInstance <span class="token operator">=</span> ioc<span class="token punctuation">.</span><span class="token function">Controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetObj</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>IOC_KUBECLIENT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span>k8sclient<span class="token punctuation">.</span>K8sClient<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>n <span class="token operator">*</span>NodeImpl<span class="token punctuation">)</span> <span class="token function">Name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> config<span class="token punctuation">.</span>NODE_IOCNAME<span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>n <span class="token operator">*</span>NodeImpl<span class="token punctuation">)</span> <span class="token function">GetNodeList</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>GetNodeListRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>structs<span class="token punctuation">.</span>NodeListResp<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 1、首先查询出所有node列表（包括master和node）</span>    allNodeList<span class="token punctuation">,</span> err <span class="token operator">:=</span> n<span class="token punctuation">.</span>K8sClientInstance<span class="token punctuation">.</span>ClientSet<span class="token punctuation">.</span><span class="token function">CoreV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Nodes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">List</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>ListOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> exception<span class="token punctuation">.</span><span class="token function">GetNodeListFailed</span><span class="token punctuation">(</span><span class="token string">"获取node列表失败：%s"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 2、遍历所有node，找出master和node节点</span>    masterList <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>corev1<span class="token punctuation">.</span>Node<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    nodeList <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>corev1<span class="token punctuation">.</span>Node<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> node <span class="token operator">:=</span> <span class="token keyword">range</span> allNodeList<span class="token punctuation">.</span>Items <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> node<span class="token punctuation">.</span>Labels<span class="token punctuation">[</span><span class="token string">"node-role.kubernetes.io/master"</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">"true"</span> <span class="token punctuation">&#123;</span>            masterList <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>masterList<span class="token punctuation">,</span> node<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            nodeList <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>nodeList<span class="token punctuation">,</span> node<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>IsMaster<span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>masterList<span class="token punctuation">)</span><span class="token punctuation">,</span> masterList<span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>nodeList<span class="token punctuation">)</span><span class="token punctuation">,</span> nodeList<span class="token punctuation">)</span>    <span class="token comment">// 判断查出的node列表是master还是node，1为master，2为node，其余参数无效</span>    <span class="token keyword">switch</span> request<span class="token punctuation">.</span>IsMaster <span class="token punctuation">&#123;</span>    <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token function">GetNodeList</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> n<span class="token punctuation">,</span> masterList<span class="token punctuation">,</span> allNodeList<span class="token punctuation">.</span>Items<span class="token punctuation">)</span>    <span class="token keyword">case</span> <span class="token number">2</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token function">GetNodeList</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> n<span class="token punctuation">,</span> nodeList<span class="token punctuation">,</span> allNodeList<span class="token punctuation">.</span>Items<span class="token punctuation">)</span>    <span class="token keyword">case</span> <span class="token number">3</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token function">GetNodeList</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> n<span class="token punctuation">,</span> allNodeList<span class="token punctuation">.</span>Items<span class="token punctuation">,</span> allNodeList<span class="token punctuation">.</span>Items<span class="token punctuation">)</span>    <span class="token keyword">default</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> exception<span class="token punctuation">.</span><span class="token function">InvalidParameter</span><span class="token punctuation">(</span><span class="token string">"参数无效!"</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//if request.IsMaster == 1 &#123;</span>    <span class="token comment">//    return GetNodeList(request, n, masterList)</span>    <span class="token comment">//&#125; else if request.IsMaster == 2 &#123;</span>    <span class="token comment">//    return GetNodeList(request, n, nodeList)</span>    <span class="token comment">//&#125; else &#123;</span>    <span class="token comment">//    return nil, exception.InvalidParameter("参数无效!")</span>    <span class="token comment">//&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>n <span class="token operator">*</span>NodeImpl<span class="token punctuation">)</span> <span class="token function">DescribeNode</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>DescribeNodeRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>corev1<span class="token punctuation">.</span>Node<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    node<span class="token punctuation">,</span> err <span class="token operator">:=</span> n<span class="token punctuation">.</span>K8sClientInstance<span class="token punctuation">.</span>ClientSet<span class="token punctuation">.</span><span class="token function">CoreV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Nodes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> request<span class="token punctuation">.</span>NodeName<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>GetOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> exception<span class="token punctuation">.</span><span class="token function">DescribeNodeListFailed</span><span class="token punctuation">(</span><span class="token string">"获取node详情失败：%s"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> node<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token comment">/* * toCell * @Description: 将k8s中的nodelist对象转换成DataMeta对象 * @receiver d * @param data * @return []structs.DataMeta */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>NodeImpl<span class="token punctuation">)</span> <span class="token function">toCell</span><span class="token punctuation">(</span>data <span class="token punctuation">[</span><span class="token punctuation">]</span>corev1<span class="token punctuation">.</span>Node<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>structs<span class="token punctuation">.</span>DataMeta <span class="token punctuation">&#123;</span>    cells <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span>structs<span class="token punctuation">.</span>DataMeta<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> data <span class="token punctuation">&#123;</span>        cells<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> cell<span class="token punctuation">.</span><span class="token function">NodeCell</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> cells<span class="token punctuation">&#125;</span><span class="token comment">/* * FromCell * @Description: 将DataMeta列表转为k8s中的[]node对象 * @receiver d * @param data * @return []corev1.Node */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>NodeImpl<span class="token punctuation">)</span> <span class="token function">FromCell</span><span class="token punctuation">(</span>data <span class="token punctuation">[</span><span class="token punctuation">]</span>structs<span class="token punctuation">.</span>DataMeta<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>corev1<span class="token punctuation">.</span>Node <span class="token punctuation">&#123;</span>    cells <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span>corev1<span class="token punctuation">.</span>Node<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> data <span class="token punctuation">&#123;</span>        cells<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> corev1<span class="token punctuation">.</span><span class="token function">Node</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">(</span>cell<span class="token punctuation">.</span>NodeCell<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> cells<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>config&#x2F;namespace_config</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> config<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"k8s-platform/apps/k8sclient/structs"</span>    corev1 <span class="token string">"k8s.io/api/core/v1"</span>    metav1 <span class="token string">"k8s.io/apimachinery/pkg/apis/meta/v1"</span><span class="token punctuation">)</span><span class="token comment">//</span><span class="token comment">//  StatefulsetConfig</span><span class="token comment">//  @Description: 生成k8s  statefulset资源的结构体</span><span class="token comment">//</span><span class="token keyword">type</span> NamespaceConfig <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    namespace <span class="token operator">*</span>corev1<span class="token punctuation">.</span>Namespace<span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">NewNamespaceConfig</span><span class="token punctuation">(</span>request <span class="token operator">*</span>structs<span class="token punctuation">.</span>CreateNamespaceRequest<span class="token punctuation">)</span> <span class="token operator">*</span>corev1<span class="token punctuation">.</span>Namespace <span class="token punctuation">&#123;</span>    <span class="token comment">// 将对应的参数传入appsv1.Deployment</span>    <span class="token keyword">return</span> <span class="token operator">&amp;</span>corev1<span class="token punctuation">.</span>Namespace<span class="token punctuation">&#123;</span>        ObjectMeta<span class="token punctuation">:</span> metav1<span class="token punctuation">.</span>ObjectMeta<span class="token punctuation">&#123;</span>            Name<span class="token punctuation">:</span> request<span class="token punctuation">.</span>Name<span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        Spec<span class="token punctuation">:</span> corev1<span class="token punctuation">.</span>NamespaceSpec<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="四、实现restful接口"><a href="#四、实现restful接口" class="headerlink" title="四、实现restful接口"></a>四、实现restful接口</h3><h5 id="1、namespace-3"><a href="#1、namespace-3" class="headerlink" title="1、namespace"></a>1、namespace</h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> http<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"fmt"</span>    <span class="token string">"github.com/gin-gonic/gin"</span>    <span class="token string">"k8s-platform/apps/k8sclient"</span>    <span class="token string">"k8s-platform/apps/k8sclient/structs"</span>    <span class="token string">"k8s-platform/config"</span>    <span class="token string">"k8s-platform/ioc"</span>    <span class="token string">"k8s-platform/response"</span>    <span class="token string">"strconv"</span><span class="token punctuation">)</span><span class="token keyword">var</span> NamespaceHttpHandler <span class="token operator">*</span>namespaceHttpHandler <span class="token operator">=</span> <span class="token function">NewnamespaceHttpHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">/* * init * @Description: 将deploymentAPIHandler注入ioc */</span><span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    ioc<span class="token punctuation">.</span><span class="token function">Controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Register</span><span class="token punctuation">(</span>NamespaceHttpHandler<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> <span class="token punctuation">(</span>    nsSvc k8sclient<span class="token punctuation">.</span>NamespaceService<span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">NewnamespaceHttpHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span>namespaceHttpHandler <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token operator">&amp;</span>namespaceHttpHandler<span class="token punctuation">&#123;</span>        svc<span class="token punctuation">:</span> ioc<span class="token punctuation">.</span><span class="token function">Controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetObj</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>NAMESPACE_IOC<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span>k8sclient<span class="token punctuation">.</span>NamespaceService<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">type</span> namespaceHttpHandler <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    svc k8sclient<span class="token punctuation">.</span>NamespaceService<span class="token punctuation">&#125;</span><span class="token comment">/* * Init * @Description: 注入ioc后初始化的操作 * @receiver d * @return error */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>namespaceHttpHandler<span class="token punctuation">)</span> <span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span>    d<span class="token punctuation">.</span>svc <span class="token operator">=</span> ioc<span class="token punctuation">.</span><span class="token function">Controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetObj</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>NAMESPACE_IOC<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span>k8sclient<span class="token punctuation">.</span>NamespaceService<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>namespaceHttpHandler<span class="token punctuation">)</span> <span class="token function">Name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> config<span class="token punctuation">.</span>NAMESPACE_API<span class="token punctuation">&#125;</span><span class="token comment">/* * GetDeploymentList * @Description: 获取deployment列表 * @receiver d * @param c */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>namespaceHttpHandler<span class="token punctuation">)</span> <span class="token function">GetNamespaceList</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    filtername <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"filterName"</span><span class="token punctuation">)</span>    pagesize<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">Atoi</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"page_size"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    pagenumber<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">Atoi</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"page_number"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    data <span class="token operator">:=</span> structs<span class="token punctuation">.</span>GetNamespaceListRequest<span class="token punctuation">&#123;</span>        FilterName<span class="token punctuation">:</span> filtername<span class="token punctuation">,</span>        DataPagination<span class="token punctuation">:</span> <span class="token operator">&amp;</span>structs<span class="token punctuation">.</span>DataPagination<span class="token punctuation">&#123;</span>            PageSize<span class="token punctuation">:</span>   pagesize<span class="token punctuation">,</span>            PageNumber<span class="token punctuation">:</span> pagenumber<span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">",,,"</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>    result<span class="token punctuation">,</span> err <span class="token operator">:=</span> d<span class="token punctuation">.</span>svc<span class="token punctuation">.</span><span class="token function">GetNamespaceList</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        response<span class="token punctuation">.</span><span class="token function">Failure</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> err<span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    response<span class="token punctuation">.</span><span class="token function">Success</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/* * DescribeDeployment * @Description: 查看namespace详情 * @receiver d * @param c */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>namespaceHttpHandler<span class="token punctuation">)</span> <span class="token function">DescribeNamespace</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    nsName <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span>    data <span class="token operator">:=</span> structs<span class="token punctuation">.</span>DescribeNamespaceRequest<span class="token punctuation">&#123;</span>        Name<span class="token punctuation">:</span> nsName<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>    result<span class="token punctuation">,</span> err <span class="token operator">:=</span> d<span class="token punctuation">.</span>svc<span class="token punctuation">.</span><span class="token function">DescribeNamespace</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        response<span class="token punctuation">.</span><span class="token function">Failure</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> err<span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    response<span class="token punctuation">.</span><span class="token function">Success</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/* * UpdateDeploymentScale * @Description: 删除namespace * @receiver d * @param c */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>namespaceHttpHandler<span class="token punctuation">)</span> <span class="token function">DeleteNamespace</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Request<span class="token punctuation">)</span>    name <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Param</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span>    data <span class="token operator">:=</span> structs<span class="token punctuation">.</span>DeleteNamespaceRequest<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    data<span class="token punctuation">.</span>Name <span class="token operator">=</span> name    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token string">"--------------------------------"</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> err <span class="token builtin">error</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"router delete = "</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>    err <span class="token operator">=</span> d<span class="token punctuation">.</span>svc<span class="token punctuation">.</span><span class="token function">DeleteNamespace</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        response<span class="token punctuation">.</span><span class="token function">Failure</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> err<span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    response<span class="token punctuation">.</span><span class="token function">Success</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token string">"删除成功"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>namespaceHttpHandler<span class="token punctuation">)</span> <span class="token function">CreateNamespace</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    data <span class="token operator">:=</span> <span class="token operator">&amp;</span>structs<span class="token punctuation">.</span>CreateNamespaceRequest<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    c<span class="token punctuation">.</span><span class="token function">BindJSON</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>data<span class="token punctuation">)</span>    namespace<span class="token punctuation">,</span> err <span class="token operator">:=</span> d<span class="token punctuation">.</span>svc<span class="token punctuation">.</span><span class="token function">CreateNamespace</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        response<span class="token punctuation">.</span><span class="token function">Failure</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> err<span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    response<span class="token punctuation">.</span><span class="token function">Success</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> namespace<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>namespaceHttpHandler<span class="token punctuation">)</span> <span class="token function">UpdateNamespace</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    data <span class="token operator">:=</span> structs<span class="token punctuation">.</span>UpdateNamespaceRequest<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">BindJSON</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        response<span class="token punctuation">.</span><span class="token function">Failure</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> err<span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>    result<span class="token punctuation">,</span> err <span class="token operator">:=</span> d<span class="token punctuation">.</span>svc<span class="token punctuation">.</span><span class="token function">UpdateNamespace</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        response<span class="token punctuation">.</span><span class="token function">Failure</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> err<span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    response<span class="token punctuation">.</span><span class="token function">Success</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2、node-3"><a href="#2、node-3" class="headerlink" title="2、node"></a>2、node</h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> http<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"fmt"</span>    <span class="token string">"github.com/gin-gonic/gin"</span>    <span class="token string">"k8s-platform/apps/k8sclient"</span>    <span class="token string">"k8s-platform/apps/k8sclient/structs"</span>    <span class="token string">"k8s-platform/config"</span>    <span class="token string">"k8s-platform/ioc"</span>    <span class="token string">"k8s-platform/response"</span>    <span class="token string">"strconv"</span><span class="token punctuation">)</span><span class="token keyword">var</span> NodeHttpHandler <span class="token operator">*</span>nodeHttpHandler <span class="token operator">=</span> <span class="token function">NewnodeHttpHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">/* * init * @Description: 将deploymentAPIHandler注入ioc */</span><span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    ioc<span class="token punctuation">.</span><span class="token function">Controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Register</span><span class="token punctuation">(</span>NodeHttpHandler<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">NewnodeHttpHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span>nodeHttpHandler <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token operator">&amp;</span>nodeHttpHandler<span class="token punctuation">&#123;</span>        svc<span class="token punctuation">:</span> ioc<span class="token punctuation">.</span><span class="token function">Controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetObj</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>NODE_IOCNAME<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span>k8sclient<span class="token punctuation">.</span>NodeService<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">type</span> nodeHttpHandler <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    svc k8sclient<span class="token punctuation">.</span>NodeService<span class="token punctuation">&#125;</span><span class="token comment">/* * Init * @Description: 注入ioc后初始化的操作 * @receiver d * @return error */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>nodeHttpHandler<span class="token punctuation">)</span> <span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span> <span class="token comment">// todo 这里已经获取到了svc</span>    d<span class="token punctuation">.</span>svc <span class="token operator">=</span> ioc<span class="token punctuation">.</span><span class="token function">Controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetObj</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>NODE_IOCNAME<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span>k8sclient<span class="token punctuation">.</span>NodeService<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>nodeHttpHandler<span class="token punctuation">)</span> <span class="token function">Name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> config<span class="token punctuation">.</span>NODE_API<span class="token punctuation">&#125;</span><span class="token comment">/* * GetDeploymentList * @Description: 获取deployment列表 * @receiver d * @param c */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>nodeHttpHandler<span class="token punctuation">)</span> <span class="token function">GetNodeList</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    size<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">Atoi</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"page_size"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    number<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">Atoi</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"page_number"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    isMaster<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">Atoi</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"isMaster"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"DeployList:%p,%v\n"</span><span class="token punctuation">,</span> d<span class="token punctuation">,</span> d<span class="token punctuation">.</span>svc<span class="token punctuation">)</span>    data <span class="token operator">:=</span> structs<span class="token punctuation">.</span>GetNodeListRequest<span class="token punctuation">&#123;</span>        FilterName<span class="token punctuation">:</span> c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"filterName"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        IsMaster<span class="token punctuation">:</span>   isMaster<span class="token punctuation">,</span>        DataPagination<span class="token punctuation">:</span> <span class="token operator">&amp;</span>structs<span class="token punctuation">.</span>DataPagination<span class="token punctuation">&#123;</span>            PageSize<span class="token punctuation">:</span>   size<span class="token punctuation">,</span>            PageNumber<span class="token punctuation">:</span> number<span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>    result<span class="token punctuation">,</span> err <span class="token operator">:=</span> d<span class="token punctuation">.</span>svc<span class="token punctuation">.</span><span class="token function">GetNodeList</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        response<span class="token punctuation">.</span><span class="token function">Failure</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> err<span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    response<span class="token punctuation">.</span><span class="token function">Success</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>nodeHttpHandler<span class="token punctuation">)</span> <span class="token function">DescribeNode</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    nodeName <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"nodeName"</span><span class="token punctuation">)</span>    data <span class="token operator">:=</span> structs<span class="token punctuation">.</span>DescribeNodeRequest<span class="token punctuation">&#123;</span>NodeName<span class="token punctuation">:</span> nodeName<span class="token punctuation">&#125;</span>    node<span class="token punctuation">,</span> err <span class="token operator">:=</span> d<span class="token punctuation">.</span>svc<span class="token punctuation">.</span><span class="token function">DescribeNode</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        response<span class="token punctuation">.</span><span class="token function">Failure</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> err<span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    response<span class="token punctuation">.</span><span class="token function">Success</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> node<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;kubernetes-platform后端开发-cluster相关组件&quot;&gt;&lt;a href=&quot;#kubernetes-platform后端开发-cluster相关组件&quot; class=&quot;headerlink&quot; title=&quot;kubernetes platform后端开</summary>
      
    
    
    
    <category term="kubernetes" scheme="http://dycloud.fun/categories/kubernetes/"/>
    
    
    <category term="kubernetes" scheme="http://dycloud.fun/tags/kubernetes/"/>
    
    <category term="云原生" scheme="http://dycloud.fun/tags/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes platform后端开发-loadbalance相关组件</title>
    <link href="http://dycloud.fun/2024/02/25/kubernetes%20platform%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91-loadbalance%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/"/>
    <id>http://dycloud.fun/2024/02/25/kubernetes%20platform%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91-loadbalance%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/</id>
    <published>2024-02-25T06:32:00.000Z</published>
    <updated>2024-04-07T08:44:46.602Z</updated>
    
    <content type="html"><![CDATA[<h1 id="kubernetes-platform后端开发-loadbalance相关组件"><a href="#kubernetes-platform后端开发-loadbalance相关组件" class="headerlink" title="kubernetes platform后端开发-loadbalance相关组件"></a>kubernetes platform后端开发-loadbalance相关组件</h1><h3 id="一、接口定义"><a href="#一、接口定义" class="headerlink" title="一、接口定义"></a>一、接口定义</h3><h5 id="1、Ingress"><a href="#1、Ingress" class="headerlink" title="1、Ingress"></a>1、Ingress</h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> IngressService <span class="token keyword">interface</span> <span class="token punctuation">&#123;</span>    <span class="token function">GetIngressList</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>GetIngressListRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>structs<span class="token punctuation">.</span>GetIngressListResp<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>    <span class="token function">DescribeIngress</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>DescribeIngressRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>v1<span class="token punctuation">.</span>Ingress<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>    <span class="token function">CreateIngress</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>CreateIngressRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>v1<span class="token punctuation">.</span>Ingress<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>    <span class="token function">DeleteIngress</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>DeleteIngressRequest<span class="token punctuation">)</span> <span class="token builtin">error</span>    <span class="token function">UpdateIngress</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>UpdateIngressRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>v1<span class="token punctuation">.</span>Ingress<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2、Service"><a href="#2、Service" class="headerlink" title="2、Service"></a>2、Service</h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> SVCService <span class="token keyword">interface</span> <span class="token punctuation">&#123;</span>    <span class="token function">GetSVCList</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>GetSVCListRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>structs<span class="token punctuation">.</span>SVCListResp<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>    <span class="token function">DescribeSVCList</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>DescribeSVCRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>corev1<span class="token punctuation">.</span>Service<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>    <span class="token function">CreateSVC</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>CreateSVCRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>corev1<span class="token punctuation">.</span>Service<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>    <span class="token function">DeleteSVC</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>DeleteSVCRequest<span class="token punctuation">)</span> <span class="token builtin">error</span>    <span class="token function">UpdateSVC</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>UpdateSVCRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>corev1<span class="token punctuation">.</span>Service<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="二、结构体定义"><a href="#二、结构体定义" class="headerlink" title="二、结构体定义"></a>二、结构体定义</h3><h5 id="1、Ingress-1"><a href="#1、Ingress-1" class="headerlink" title="1、Ingress"></a>1、Ingress</h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> structs<span class="token keyword">import</span> <span class="token punctuation">(</span>    v1 <span class="token string">"k8s.io/api/networking/v1"</span><span class="token punctuation">)</span><span class="token keyword">type</span> IngressTemplate <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    Name      <span class="token builtin">string</span> <span class="token string">`json:"name"`</span>    Namespace <span class="token builtin">string</span> <span class="token string">`json:"namespace"`</span><span class="token punctuation">&#125;</span><span class="token keyword">type</span> GetIngressListRequest <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    <span class="token operator">*</span>IngressTemplate    FilterName <span class="token builtin">string</span> <span class="token string">`json:"filterName"`</span>    <span class="token operator">*</span>DataPagination<span class="token punctuation">&#125;</span><span class="token keyword">type</span> DescribeIngressRequest <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    <span class="token operator">*</span>IngressTemplate<span class="token punctuation">&#125;</span><span class="token keyword">type</span> DeleteIngressRequest <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    <span class="token operator">*</span>IngressTemplate<span class="token punctuation">&#125;</span><span class="token keyword">type</span> UpdateIngressRequest <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    <span class="token operator">*</span>IngressTemplate    Content <span class="token builtin">string</span> <span class="token string">`json:"content"`</span><span class="token punctuation">&#125;</span><span class="token keyword">type</span> GetIngressListResp <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    Items <span class="token punctuation">[</span><span class="token punctuation">]</span>v1<span class="token punctuation">.</span>Ingress <span class="token string">`json:"items"`</span>    Count <span class="token builtin">int</span>          <span class="token string">`json:"count"`</span><span class="token punctuation">&#125;</span><span class="token comment">// 创建ingress相关</span><span class="token keyword">type</span> CreateIngressRequest <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    <span class="token operator">*</span>IngressTemplate    Labels           <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span>  <span class="token string">`json:"labels"`</span>    Annotations      <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span>  <span class="token string">`json:"annotations"`</span>    IngressClassName <span class="token operator">*</span><span class="token builtin">string</span>            <span class="token string">`json:"ingressClassName"`</span>    DefaultBackend   <span class="token operator">*</span>v1<span class="token punctuation">.</span>IngressBackend <span class="token string">`json:"defaultBackend"`</span>    IngressInfo      <span class="token punctuation">[</span><span class="token punctuation">]</span>IngressPath      <span class="token string">`json:"ingressInfo"`</span>    TLS              <span class="token punctuation">[</span><span class="token punctuation">]</span>IngressTLS       <span class="token string">`json:"tls"`</span>    Rules            <span class="token punctuation">[</span><span class="token punctuation">]</span>IngressRule      <span class="token string">`json:"rules"`</span><span class="token punctuation">&#125;</span><span class="token comment">// 定义Ingress的http路径相关信息</span><span class="token keyword">type</span> IngressPath <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    Path        <span class="token builtin">string</span>      <span class="token string">`json:"path"`</span>    PathType    v1<span class="token punctuation">.</span>PathType <span class="token string">`json:"pathType"`</span>    ServiceName <span class="token builtin">string</span>      <span class="token string">`json:"serviceName"`</span>    ServicePort <span class="token builtin">int32</span>       <span class="token string">`json:"servicePort"`</span><span class="token punctuation">&#125;</span><span class="token keyword">type</span> IngressRule <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    Host  <span class="token builtin">string</span>        <span class="token string">`json:"host"`</span>    Paths <span class="token punctuation">[</span><span class="token punctuation">]</span>IngressPath <span class="token string">`json:"paths"`</span><span class="token punctuation">&#125;</span><span class="token keyword">type</span> IngressTLS <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    Hosts      <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span> <span class="token string">`json:"hosts"`</span>    SecretName <span class="token builtin">string</span>   <span class="token string">`json:"secretName"`</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2、Service-1"><a href="#2、Service-1" class="headerlink" title="2、Service"></a>2、Service</h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> structs<span class="token keyword">import</span> <span class="token punctuation">(</span>    corev1 <span class="token string">"k8s.io/api/core/v1"</span><span class="token punctuation">)</span><span class="token keyword">type</span> ServiceTemplate <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    Name      <span class="token builtin">string</span> <span class="token string">`json:"name"`</span>    Namespace <span class="token builtin">string</span> <span class="token string">`json:"namespace"`</span><span class="token punctuation">&#125;</span><span class="token keyword">type</span> GetSVCListRequest <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    <span class="token operator">*</span>ServiceTemplate    FilterName <span class="token builtin">string</span> <span class="token string">`json:"filterName"`</span>    <span class="token operator">*</span>DataPagination<span class="token punctuation">&#125;</span><span class="token keyword">type</span> DescribeSVCRequest <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    <span class="token operator">*</span>ServiceTemplate<span class="token punctuation">&#125;</span><span class="token keyword">type</span> CreateSVCRequest <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    Labels     <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span> <span class="token string">`json:"labels"`</span>    Port       <span class="token builtin">int32</span>             <span class="token string">`json:"port"`</span>    TargetPort <span class="token builtin">int32</span>             <span class="token string">`json:"targetPort"`</span>    NodePort   <span class="token builtin">int32</span>             <span class="token string">`json:"nodePort"`</span>    Type       ServiceType       <span class="token string">`json:"type"`</span>    <span class="token operator">*</span>ServiceTemplate<span class="token punctuation">&#125;</span><span class="token keyword">type</span> DeleteSVCRequest <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    <span class="token operator">*</span>ServiceTemplate<span class="token punctuation">&#125;</span><span class="token keyword">type</span> UpdateSVCRequest <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    <span class="token operator">*</span>ServiceTemplate    Content <span class="token builtin">string</span> <span class="token string">`json:"content"`</span><span class="token punctuation">&#125;</span><span class="token keyword">type</span> SVCListResp <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    Items <span class="token punctuation">[</span><span class="token punctuation">]</span>corev1<span class="token punctuation">.</span>Service <span class="token string">`json:"items"`</span>    Count <span class="token builtin">int</span>              <span class="token string">`json:"count"`</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;kubernetes-platform后端开发-loadbalance相关组件&quot;&gt;&lt;a href=&quot;#kubernetes-platform后端开发-loadbalance相关组件&quot; class=&quot;headerlink&quot; title=&quot;kubernetes pla</summary>
      
    
    
    
    <category term="kubernetes" scheme="http://dycloud.fun/categories/kubernetes/"/>
    
    
    <category term="kubernetes" scheme="http://dycloud.fun/tags/kubernetes/"/>
    
    <category term="云原生" scheme="http://dycloud.fun/tags/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes platform后端开发-workload</title>
    <link href="http://dycloud.fun/2024/02/23/kubernetes%20platform%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91-workload/"/>
    <id>http://dycloud.fun/2024/02/23/kubernetes%20platform%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91-workload/</id>
    <published>2024-02-23T06:32:00.000Z</published>
    <updated>2024-04-07T08:43:01.069Z</updated>
    
    <content type="html"><![CDATA[<h1 id="kubernetes-platform后端开发-workload"><a href="#kubernetes-platform后端开发-workload" class="headerlink" title="kubernetes platform后端开发-workload"></a>kubernetes platform后端开发-workload</h1><h3 id="一、定义接口"><a href="#一、定义接口" class="headerlink" title="一、定义接口"></a>一、定义接口</h3><p>####### 首先创建interface文件，定义所有workload需要使用的接口<br>apps&#x2F;k8sclient&#x2F;interface.go</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> k8sclient<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"context"</span>    <span class="token string">"k8s-platform/apps/k8sclient/structs"</span>    v1 <span class="token string">"k8s.io/api/networking/v1"</span>    <span class="token comment">//"k8s-platform/apps/k8sclient/structs"</span>    appsv1 <span class="token string">"k8s.io/api/apps/v1"</span>    corev1 <span class="token string">"k8s.io/api/core/v1"</span><span class="token punctuation">)</span><span class="token comment">//</span><span class="token comment">//  PodService</span><span class="token comment">//  @Description: Pod相关接口</span><span class="token comment">//</span><span class="token keyword">type</span> PodService <span class="token keyword">interface</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 获取pod列表</span>    <span class="token function">GetPodsList</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>GetPodsListRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>structs<span class="token punctuation">.</span>PodsResp<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>    <span class="token comment">// 查询Pod详细信息</span>    <span class="token function">DescribePod</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>DescribePodRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>corev1<span class="token punctuation">.</span>Pod<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>    <span class="token comment">// 删除Pod</span>    <span class="token function">DeletePod</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>DeletePodRequest<span class="token punctuation">)</span> <span class="token builtin">error</span>    <span class="token comment">// 更新Pod</span>    <span class="token function">UpdatePod</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>UpdatePodRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>corev1<span class="token punctuation">.</span>Pod<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>    <span class="token comment">// 获取Pod中的容器信息</span>    <span class="token function">GetContainers</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>GetContainersRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span>corev1<span class="token punctuation">.</span>Container<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>    <span class="token comment">// 获取Pod日志</span>    <span class="token function">GetPodLogs</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>GetPodLogsRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>    <span class="token function">GetNamespacePodsCount</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>GetNamespacePodsCountRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>structs<span class="token punctuation">.</span>NsCount<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>    <span class="token function">GetPodsListByDeployment</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>GetPodsListByDeploymentRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>structs<span class="token punctuation">.</span>PodsResp<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>    <span class="token function">GetPodsListByDaemonset</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>GetPodsListByDaemonsetRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>structs<span class="token punctuation">.</span>PodsResp<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>    <span class="token function">GetPodsListByStatefulset</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>GetPodsListByStatefulsetRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>structs<span class="token punctuation">.</span>PodsResp<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">type</span> DeploymentService <span class="token keyword">interface</span> <span class="token punctuation">&#123;</span>    <span class="token function">GetDeploymentList</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>GetDeploymentListRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>structs<span class="token punctuation">.</span>DeployResp<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>    <span class="token function">DescribeDeployments</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>DescribeDeploymentsRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>appsv1<span class="token punctuation">.</span>Deployment<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>    <span class="token function">UpdateDeploymentScale</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>UpdateDeploymentScaleRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">int32</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>    <span class="token function">CreateDeployment</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>CreateDeploymentRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>appsv1<span class="token punctuation">.</span>Deployment<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>    <span class="token function">DeleteDeployment</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>DeleteDeploymentRequest<span class="token punctuation">)</span> <span class="token builtin">error</span>    <span class="token function">RestartDeployment</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>RestartDeploymentRequest<span class="token punctuation">)</span> <span class="token builtin">error</span>    <span class="token function">UpdateDeployment</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>UpdateDeploymentRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>appsv1<span class="token punctuation">.</span>Deployment<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>    <span class="token function">GetNamespaceDeploymentCount</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>GetNamespaceDeploymentCountRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>structs<span class="token punctuation">.</span>NsDeployCount<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">type</span> DaemonSetService <span class="token keyword">interface</span> <span class="token punctuation">&#123;</span>    <span class="token function">CreateDaemonSet</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>CreateDaemonSetRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>appsv1<span class="token punctuation">.</span>DaemonSet<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>    <span class="token function">GetDaemonSetList</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>GetDaemonSetListRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>structs<span class="token punctuation">.</span>DaemonsetResp<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>    <span class="token function">DescribeDaemonSet</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>DescribeDaemonSet<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>appsv1<span class="token punctuation">.</span>DaemonSet<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>    <span class="token function">DeleteDaemonSet</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>DeleteDaemonSet<span class="token punctuation">)</span> <span class="token builtin">error</span>    <span class="token function">UpdateDaemonSet</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>UpdateDaemonSet<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>appsv1<span class="token punctuation">.</span>DaemonSet<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">type</span> StatefulSetService <span class="token keyword">interface</span> <span class="token punctuation">&#123;</span>    <span class="token function">CreateStatefulSet</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>CreateStatefulSetRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>appsv1<span class="token punctuation">.</span>StatefulSet<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>    <span class="token function">GetStatefulSetList</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>GetStatefulSetListRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>structs<span class="token punctuation">.</span>StatefulSetResp<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>    <span class="token function">DescribeStatefulSet</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>DescribeStatefulSet<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>appsv1<span class="token punctuation">.</span>StatefulSet<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>    <span class="token function">DeleteStatefulSet</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>DeleteStatefulSet<span class="token punctuation">)</span> <span class="token builtin">error</span>    <span class="token function">UpdateStatefulSet</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>UpdateStatefulSet<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>appsv1<span class="token punctuation">.</span>StatefulSet<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="二、定义结构体"><a href="#二、定义结构体" class="headerlink" title="二、定义结构体"></a>二、定义结构体</h3><h5 id="1、deployment"><a href="#1、deployment" class="headerlink" title="1、deployment"></a>1、deployment</h5><p>apps&#x2F;k8sclient&#x2F;structs&#x2F;deployment.go</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> structs<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"fmt"</span>    appsv1 <span class="token string">"k8s.io/api/apps/v1"</span>    corev1 <span class="token string">"k8s.io/api/core/v1"</span>    <span class="token string">"k8s.io/apimachinery/pkg/api/resource"</span>    <span class="token string">"k8s.io/apimachinery/pkg/util/intstr"</span>    <span class="token string">"k8s.io/apimachinery/pkg/util/json"</span><span class="token punctuation">)</span><span class="token comment">//</span><span class="token comment">//  GetDeploymentListRequest</span><span class="token comment">//  @Description:  获取Deployment列表的结构体</span><span class="token comment">//</span><span class="token keyword">type</span> GetDeploymentListRequest <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    FilterName <span class="token builtin">string</span> <span class="token string">`json:"filterName"`</span>    Namespace  <span class="token builtin">string</span> <span class="token string">`json:"namespace"`</span>    <span class="token operator">*</span>DataPagination<span class="token punctuation">&#125;</span><span class="token comment">//</span><span class="token comment">//  DeployResp</span><span class="token comment">//  @Description: 返回给用户的结构体，包括deployment总数，还有每个deployment的信息</span><span class="token comment">//</span><span class="token keyword">type</span> DeployResp <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    Total <span class="token builtin">int</span> <span class="token string">`json:"total"`</span>    Items <span class="token punctuation">[</span><span class="token punctuation">]</span>appsv1<span class="token punctuation">.</span>Deployment<span class="token punctuation">&#125;</span><span class="token keyword">type</span> DataTemplateResponse <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    Namespace      <span class="token builtin">string</span> <span class="token string">`json:"namespace"`</span>    DeploymentName <span class="token builtin">string</span> <span class="token string">`json:"deploymentName"`</span><span class="token punctuation">&#125;</span><span class="token comment">//</span><span class="token comment">//  DescribeDeploymentsRequest</span><span class="token comment">//  @Description: deployment详细信息</span><span class="token comment">//</span><span class="token keyword">type</span> DescribeDeploymentsRequest <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    <span class="token operator">*</span>DataTemplateResponse<span class="token punctuation">&#125;</span><span class="token keyword">type</span> UpdateDeploymentScaleRequest <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    <span class="token operator">*</span>DataTemplateResponse    ScaleNum <span class="token builtin">int</span> <span class="token string">`json:"scaleNum"`</span><span class="token punctuation">&#125;</span><span class="token keyword">type</span> CreateDeploymentRequest <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    Namespace      <span class="token builtin">string</span>             <span class="token string">`json:"namespace"`</span>    DeploymentName <span class="token builtin">string</span>             <span class="token string">`json:"deploymentName"`</span>    PodName        <span class="token builtin">string</span>             <span class="token string">`json:"podName"`</span>    Replicas       <span class="token operator">*</span><span class="token builtin">int32</span>             <span class="token string">`json:"replicas"`</span>    Image          <span class="token builtin">string</span>             <span class="token string">`json:"image"`</span>    Label          <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span>  <span class="token string">`json:"label"`</span>    Containers     <span class="token punctuation">[</span><span class="token punctuation">]</span>ContainerRequest <span class="token string">`json:"containers"`</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>CreateDeploymentRequest<span class="token punctuation">)</span> <span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span>    data<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Marshal</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token function">string</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">//</span><span class="token comment">//  ContainerRequest</span><span class="token comment">//  @Description: deployment 容器的实例配置</span><span class="token comment">//</span><span class="token keyword">type</span> ContainerRequest <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 容器名</span>    Name <span class="token builtin">string</span> <span class="token string">`json:"name"`</span>    <span class="token comment">// 镜像名</span>    Image <span class="token builtin">string</span> <span class="token string">`json:"image"`</span>    <span class="token comment">// 镜像版本号</span>    Version <span class="token builtin">string</span> <span class="token string">`json:"version"`</span>    <span class="token comment">// 端口号</span>    Ports <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int32</span> <span class="token string">`json:"ports"`</span>    <span class="token comment">// cpu最大限制</span>    LimitsCpu <span class="token builtin">string</span> <span class="token string">`json:"limits_cpu"`</span>    <span class="token comment">// 内存最大限制</span>    LimitMemory <span class="token builtin">string</span> <span class="token string">`json:"limit_memory"`</span>    <span class="token comment">// 启动容器的最小cpu</span>    RequestsCpu <span class="token builtin">string</span> <span class="token string">`json:"requests_cpu"`</span>    <span class="token comment">// 启动容器的最小内存</span>    RequestsMemory <span class="token builtin">string</span> <span class="token string">`json:"requests_memory"`</span>    <span class="token comment">// 指定工作目录</span>    WorkSpace <span class="token builtin">string</span> <span class="token string">`json:"work_space"`</span>    <span class="token comment">// 运行命令</span>    Command <span class="token builtin">string</span> <span class="token string">`json:"command"`</span>    <span class="token comment">// 运行参数</span>    Args <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span> <span class="token string">`json:"args"`</span>    <span class="token comment">// 是否开启就绪检查</span>    ReadinessHealthCheck <span class="token builtin">bool</span> <span class="token string">`json:"readiness_healthCheck"`</span>    <span class="token comment">// liveiness健康检查类型</span>    HealthCheckTypeLive HealthCheckType <span class="token string">`json:"healthcheckTypeLive"`</span>    <span class="token comment">// readiness健康检查类型</span>    HealthCheckTypeRead HealthCheckType <span class="token string">`json:"healthcheckTypeRead"`</span>    <span class="token comment">// 是否开启存活性检查</span>    LivenessHealthCheck <span class="token builtin">bool</span> <span class="token string">`json:"liveness_healthCheck"`</span>    <span class="token comment">// 健康检查相关配置</span>    LivenessProbe  HealthCheckConfig <span class="token string">`json:"livenessProbe"`</span>    ReadinessProbe HealthCheckConfig <span class="token string">`json:"readinessProbe"`</span>    <span class="token comment">// 资源限制</span>    Resource corev1<span class="token punctuation">.</span>ResourceRequirements <span class="token string">`json:"resource"`</span><span class="token punctuation">&#125;</span><span class="token keyword">type</span> HealthCheckConfig <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// HTTPGet 类型的路径</span>    Path <span class="token builtin">string</span> <span class="token string">`json:"path"`</span>    <span class="token comment">// HTTPGet 或 TCP 类型需要检查的端口</span>    Port <span class="token builtin">int32</span> <span class="token string">`json:"port"`</span>    <span class="token comment">// Exec 类型需要执行的命令</span>    Cmd <span class="token builtin">string</span> <span class="token string">`json:"cmd"`</span>    <span class="token comment">// 启动延时时间</span>    InitialDelaySecond <span class="token builtin">int32</span> <span class="token string">`json:"initialDelaySecond"`</span>    <span class="token comment">// 响应超时时间</span>    TimeoutSeconds <span class="token builtin">int32</span> <span class="token string">`json:"timeoutSeconds"`</span>    <span class="token comment">// 间隔多少时间进行一次</span>    PeriodSeconds <span class="token builtin">int32</span> <span class="token string">`json:"periodSeconds"`</span>    <span class="token comment">// 健康阈值</span>    SuccessThreshold <span class="token builtin">int32</span> <span class="token string">`json:"successThreshold"`</span>    <span class="token comment">// 不健康阈值</span>    FailureThreshold <span class="token builtin">int32</span> <span class="token string">`json:"failureThreshold"`</span><span class="token punctuation">&#125;</span><span class="token comment">/* * ToK8sContainer * @Description: 将ContainerRequest转换为k8s中的Container对象 * @receiver c * @return corev1.Container */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>ContainerRequest<span class="token punctuation">)</span> <span class="token function">ToK8sContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> corev1<span class="token punctuation">.</span>Container <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> ports <span class="token punctuation">[</span><span class="token punctuation">]</span>corev1<span class="token punctuation">.</span>ContainerPort    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> p <span class="token operator">:=</span> <span class="token keyword">range</span> c<span class="token punctuation">.</span>Ports <span class="token punctuation">&#123;</span>        ports <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>ports<span class="token punctuation">,</span> corev1<span class="token punctuation">.</span>ContainerPort<span class="token punctuation">&#123;</span>ContainerPort<span class="token punctuation">:</span> p<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">var</span> liveniness <span class="token operator">*</span>corev1<span class="token punctuation">.</span>Probe    <span class="token keyword">var</span> readness <span class="token operator">*</span>corev1<span class="token punctuation">.</span>Probe    <span class="token keyword">if</span> c<span class="token punctuation">.</span>LivenessHealthCheck <span class="token operator">!=</span> <span class="token boolean">false</span> <span class="token punctuation">&#123;</span>        liveniness <span class="token operator">=</span> <span class="token function">ConfigureHealthCheck</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>HealthCheckTypeLive<span class="token punctuation">,</span> c<span class="token punctuation">.</span>LivenessProbe<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> c<span class="token punctuation">.</span>ReadinessHealthCheck <span class="token operator">!=</span> <span class="token boolean">false</span> <span class="token punctuation">&#123;</span>        readness <span class="token operator">=</span> <span class="token function">ConfigureHealthCheck</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>HealthCheckTypeRead<span class="token punctuation">,</span> c<span class="token punctuation">.</span>ReadinessProbe<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    data <span class="token operator">:=</span>        corev1<span class="token punctuation">.</span>Container<span class="token punctuation">&#123;</span>            Name<span class="token punctuation">:</span>           c<span class="token punctuation">.</span>Name<span class="token punctuation">,</span>            Image<span class="token punctuation">:</span>          c<span class="token punctuation">.</span>Image<span class="token punctuation">,</span>            Ports<span class="token punctuation">:</span>          ports<span class="token punctuation">,</span>            LivenessProbe<span class="token punctuation">:</span>  liveniness<span class="token punctuation">,</span>            ReadinessProbe<span class="token punctuation">:</span> readness<span class="token punctuation">,</span>            Command<span class="token punctuation">:</span>        <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span>Command<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            WorkingDir<span class="token punctuation">:</span>     c<span class="token punctuation">.</span>WorkSpace<span class="token punctuation">,</span>            Resources<span class="token punctuation">:</span>      <span class="token function">NewResourceRequirements</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>LimitsCpu<span class="token punctuation">,</span> c<span class="token punctuation">.</span>LimitMemory<span class="token punctuation">,</span> c<span class="token punctuation">.</span>RequestsCpu<span class="token punctuation">,</span> c<span class="token punctuation">.</span>RequestsMemory<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token string">"----------------------------------------------------------------"</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> data<span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">NewResourceRequirements</span><span class="token punctuation">(</span>cpuLimit<span class="token punctuation">,</span> memoryLimit<span class="token punctuation">,</span> cpuRequests<span class="token punctuation">,</span> memoryRequests <span class="token builtin">string</span><span class="token punctuation">)</span> corev1<span class="token punctuation">.</span>ResourceRequirements <span class="token punctuation">&#123;</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>cpuLimit<span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>memoryLimit<span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>cpuRequests<span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>memoryRequests<span class="token punctuation">)</span>    defaultCPULimit <span class="token operator">:=</span> <span class="token string">"100m"</span>    defaultMemoryLimit <span class="token operator">:=</span> <span class="token string">"512Mi"</span>    defaultCPURequests <span class="token operator">:=</span> <span class="token string">"50m"</span>    defaultMemoryRequests <span class="token operator">:=</span> <span class="token string">"256Mi"</span>    <span class="token keyword">if</span> cpuLimit <span class="token operator">==</span> <span class="token string">""</span> <span class="token punctuation">&#123;</span>        cpuLimit <span class="token operator">=</span> defaultCPULimit    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> memoryLimit <span class="token operator">==</span> <span class="token string">""</span> <span class="token punctuation">&#123;</span>        memoryLimit <span class="token operator">=</span> defaultMemoryLimit    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> cpuRequests <span class="token operator">==</span> <span class="token string">""</span> <span class="token punctuation">&#123;</span>        cpuRequests <span class="token operator">=</span> defaultCPURequests    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> memoryRequests <span class="token operator">==</span> <span class="token string">""</span> <span class="token punctuation">&#123;</span>        memoryRequests <span class="token operator">=</span> defaultMemoryRequests    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> corev1<span class="token punctuation">.</span>ResourceRequirements<span class="token punctuation">&#123;</span>        Limits<span class="token punctuation">:</span> corev1<span class="token punctuation">.</span>ResourceList<span class="token punctuation">&#123;</span>            <span class="token comment">// corev1.ResourceCPU 是一个常量，表示 CPU 资源。</span>            <span class="token comment">// resource.MustParse 解析 cpuLimit 字符串为一个资源数量对象。</span>            <span class="token comment">// 这里的 "200m"  200 millicores，也就是 0.2 核的 CPU。</span>            corev1<span class="token punctuation">.</span>ResourceCPU<span class="token punctuation">:</span> resource<span class="token punctuation">.</span><span class="token function">MustParse</span><span class="token punctuation">(</span>cpuLimit<span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token comment">// corev1.ResourceMemory 是一个常量，表示内存资源。</span>            <span class="token comment">// resource.MustParse 解析 memoryLimit 字符串为一个资源数量对象。</span>            <span class="token comment">// "256Mi" 表示 256 Mebibytes 的内存。</span>            corev1<span class="token punctuation">.</span>ResourceMemory<span class="token punctuation">:</span> resource<span class="token punctuation">.</span><span class="token function">MustParse</span><span class="token punctuation">(</span>memoryLimit<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        Requests<span class="token punctuation">:</span> corev1<span class="token punctuation">.</span>ResourceList<span class="token punctuation">&#123;</span>            corev1<span class="token punctuation">.</span>ResourceCPU<span class="token punctuation">:</span>    resource<span class="token punctuation">.</span><span class="token function">MustParse</span><span class="token punctuation">(</span>cpuRequests<span class="token punctuation">)</span><span class="token punctuation">,</span>            corev1<span class="token punctuation">.</span>ResourceMemory<span class="token punctuation">:</span> resource<span class="token punctuation">.</span><span class="token function">MustParse</span><span class="token punctuation">(</span>memoryRequests<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 生成健康检查配置</span><span class="token comment">/* * ConfigureHealthCheck * @Description: 生成健康检查配置 * @param htype * @param config * @return *corev1.Probe */</span><span class="token keyword">func</span> <span class="token function">ConfigureHealthCheck</span><span class="token punctuation">(</span>htype HealthCheckType<span class="token punctuation">,</span> config HealthCheckConfig<span class="token punctuation">)</span> <span class="token operator">*</span>corev1<span class="token punctuation">.</span>Probe <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> config<span class="token punctuation">.</span>Port <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean">nil</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 健康检查参数配置</span>    probe <span class="token operator">:=</span> <span class="token operator">&amp;</span>corev1<span class="token punctuation">.</span>Probe<span class="token punctuation">&#123;</span>        InitialDelaySeconds<span class="token punctuation">:</span> config<span class="token punctuation">.</span>InitialDelaySecond<span class="token punctuation">,</span>        TimeoutSeconds<span class="token punctuation">:</span>      config<span class="token punctuation">.</span>TimeoutSeconds<span class="token punctuation">,</span>        PeriodSeconds<span class="token punctuation">:</span>       config<span class="token punctuation">.</span>PeriodSeconds<span class="token punctuation">,</span>        SuccessThreshold<span class="token punctuation">:</span>    config<span class="token punctuation">.</span>SuccessThreshold<span class="token punctuation">,</span>        FailureThreshold<span class="token punctuation">:</span>    config<span class="token punctuation">.</span>FailureThreshold<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"port ======"</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span>Port<span class="token punctuation">)</span>    <span class="token comment">// 判断传入的健康检查类型</span>    <span class="token keyword">switch</span> htype <span class="token punctuation">&#123;</span>    <span class="token keyword">case</span> TYPE_HTTPGET<span class="token punctuation">:</span>        probe<span class="token punctuation">.</span>ProbeHandler<span class="token punctuation">.</span>HTTPGet <span class="token operator">=</span> <span class="token operator">&amp;</span>corev1<span class="token punctuation">.</span>HTTPGetAction<span class="token punctuation">&#123;</span>            Path<span class="token punctuation">:</span> config<span class="token punctuation">.</span>Path<span class="token punctuation">,</span>            Port<span class="token punctuation">:</span> intstr<span class="token punctuation">.</span><span class="token function">FromInt32</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>Port<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span>    <span class="token keyword">case</span> TYPE_TCP<span class="token punctuation">:</span>        probe<span class="token punctuation">.</span>ProbeHandler<span class="token punctuation">.</span>TCPSocket <span class="token operator">=</span> <span class="token operator">&amp;</span>corev1<span class="token punctuation">.</span>TCPSocketAction<span class="token punctuation">&#123;</span>            Port<span class="token punctuation">:</span> intstr<span class="token punctuation">.</span><span class="token function">FromInt32</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>Port<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span>    <span class="token keyword">case</span> TYPE_EXEC<span class="token punctuation">:</span>        probe<span class="token punctuation">.</span>ProbeHandler<span class="token punctuation">.</span>Exec <span class="token operator">=</span> <span class="token operator">&amp;</span>corev1<span class="token punctuation">.</span>ExecAction<span class="token punctuation">&#123;</span>            Command<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">&#123;</span>config<span class="token punctuation">.</span>Cmd<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"probe================================================================"</span><span class="token punctuation">,</span> probe<span class="token punctuation">)</span>    <span class="token keyword">return</span> probe<span class="token punctuation">&#125;</span><span class="token keyword">type</span> DeleteDeploymentRequest <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    Namespace      <span class="token builtin">string</span> <span class="token string">`json:"namespace"`</span>    DeploymentName <span class="token builtin">string</span> <span class="token string">`json:"deploymentName"`</span><span class="token punctuation">&#125;</span><span class="token keyword">type</span> RestartDeploymentRequest <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    <span class="token operator">*</span>DataTemplateResponse<span class="token punctuation">&#125;</span><span class="token keyword">type</span> UpdateDeploymentRequest <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    <span class="token operator">*</span>DataTemplateResponse    Content <span class="token builtin">string</span> <span class="token string">`json:"content"`</span><span class="token punctuation">&#125;</span><span class="token keyword">type</span> GetNamespaceDeploymentCountRequest <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    <span class="token operator">*</span>DataTemplateResponse<span class="token punctuation">&#125;</span><span class="token keyword">type</span> NsDeployCount <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    DeploymentCount <span class="token builtin">int</span>    <span class="token string">`json:"deploymentCount"`</span>    Namespace       <span class="token builtin">string</span> <span class="token string">`json:"namespace"`</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2、daemonset"><a href="#2、daemonset" class="headerlink" title="2、daemonset"></a>2、daemonset</h5><p>apps&#x2F;k8sclient&#x2F;structs&#x2F;daemonset.go</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> structs<span class="token keyword">import</span> <span class="token punctuation">(</span>    appsv1 <span class="token string">"k8s.io/api/apps/v1"</span>    <span class="token string">"k8s.io/apimachinery/pkg/util/json"</span><span class="token punctuation">)</span><span class="token comment">//</span><span class="token comment">//  DaemonSetTemplate</span><span class="token comment">//  @Description:  daemonset 通用模板</span><span class="token comment">//</span><span class="token keyword">type</span> DaemonSetTemplate <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    Namespace     <span class="token builtin">string</span> <span class="token string">`json:"namespace"`</span>    DaemonSetName <span class="token builtin">string</span> <span class="token string">`json:"daemonSetName"`</span><span class="token punctuation">&#125;</span><span class="token comment">//</span><span class="token comment">//  GetDaemonSetListRequest</span><span class="token comment">//  @Description: 获取damonset列表，包括分页、过滤、排序</span><span class="token comment">//</span><span class="token keyword">type</span> GetDaemonSetListRequest <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    FilterName <span class="token builtin">string</span> <span class="token string">`json:"filterName"`</span>    Namespace  <span class="token builtin">string</span> <span class="token string">`json:"namespace"`</span>    <span class="token operator">*</span>DataPagination<span class="token punctuation">&#125;</span><span class="token comment">//</span><span class="token comment">//  CreateDaemonSetRequest</span><span class="token comment">//  @Description: 创建daemonset</span><span class="token comment">//</span><span class="token keyword">type</span> CreateDaemonSetRequest <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    <span class="token operator">*</span>DaemonSetTemplate    PodName    <span class="token builtin">string</span>            <span class="token string">`json:"podName"`</span>    Replicas   <span class="token operator">*</span><span class="token builtin">int32</span>            <span class="token string">`json:"replicas"`</span>    Image      <span class="token builtin">string</span>            <span class="token string">`json:"image"`</span>    Label      <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span> <span class="token string">`json:"label"`</span>    Containers <span class="token punctuation">[</span><span class="token punctuation">]</span>ContainerRequest<span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>CreateDaemonSetRequest<span class="token punctuation">)</span> <span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span>    data<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Marshal</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token function">string</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">//</span><span class="token comment">//  DescribeDaemonSet</span><span class="token comment">//  @Description: 查看daemonset详情</span><span class="token comment">//</span><span class="token keyword">type</span> DescribeDaemonSet <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    <span class="token operator">*</span>DaemonSetTemplate<span class="token punctuation">&#125;</span><span class="token comment">//</span><span class="token comment">//  DeleteDaemonSet</span><span class="token comment">//  @Description: 删除daemonset</span><span class="token comment">//</span><span class="token keyword">type</span> DeleteDaemonSet <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    <span class="token operator">*</span>DaemonSetTemplate<span class="token punctuation">&#125;</span><span class="token comment">//</span><span class="token comment">//  UpdateDaemonSet</span><span class="token comment">//  @Description: 更新daemonset</span><span class="token comment">//</span><span class="token keyword">type</span> UpdateDaemonSet <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    <span class="token operator">*</span>DaemonSetTemplate    Content <span class="token builtin">string</span> <span class="token string">`json:"content"`</span><span class="token punctuation">&#125;</span><span class="token comment">//</span><span class="token comment">//  DaemonsetResp</span><span class="token comment">//  @Description: 返回daemonset总数、列表</span><span class="token comment">//</span><span class="token keyword">type</span> DaemonsetResp <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    Items <span class="token punctuation">[</span><span class="token punctuation">]</span>appsv1<span class="token punctuation">.</span>DaemonSet <span class="token string">`json:"items"`</span>    Count <span class="token builtin">int</span>                <span class="token string">`json:"count"`</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="3、statefulset"><a href="#3、statefulset" class="headerlink" title="3、statefulset"></a>3、statefulset</h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> structs<span class="token keyword">import</span> appsv1 <span class="token string">"k8s.io/api/apps/v1"</span><span class="token keyword">type</span> StatefulSetTemplate <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    StatefulSetName <span class="token builtin">string</span> <span class="token string">`json:"statefulset_name"`</span>    Namespace       <span class="token builtin">string</span> <span class="token string">`json:"namespace"`</span><span class="token punctuation">&#125;</span><span class="token keyword">type</span> CreateStatefulSetRequest <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    <span class="token operator">*</span>StatefulSetTemplate    PodName    <span class="token builtin">string</span>            <span class="token string">`json:"podName"`</span>    Replicas   <span class="token operator">*</span><span class="token builtin">int32</span>            <span class="token string">`json:"replicas"`</span>    Image      <span class="token builtin">string</span>            <span class="token string">`json:"image"`</span>    Label      <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span> <span class="token string">`json:"label"`</span>    Containers <span class="token punctuation">[</span><span class="token punctuation">]</span>ContainerRequest<span class="token punctuation">&#125;</span><span class="token keyword">type</span> GetStatefulSetListRequest <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    FilterName <span class="token builtin">string</span> <span class="token string">`json:"filterName"`</span>    Namespace  <span class="token builtin">string</span> <span class="token string">`json:"namespace"`</span>    <span class="token operator">*</span>DataPagination<span class="token punctuation">&#125;</span><span class="token keyword">type</span> DescribeStatefulSet <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    <span class="token operator">*</span>StatefulSetTemplate<span class="token punctuation">&#125;</span><span class="token keyword">type</span> DeleteStatefulSet <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    <span class="token operator">*</span>StatefulSetTemplate<span class="token punctuation">&#125;</span><span class="token keyword">type</span> UpdateStatefulSet <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    <span class="token operator">*</span>StatefulSetTemplate    Content <span class="token builtin">string</span> <span class="token string">`json:"content"`</span><span class="token punctuation">&#125;</span><span class="token keyword">type</span> StatefulSetResp <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    Items <span class="token punctuation">[</span><span class="token punctuation">]</span>appsv1<span class="token punctuation">.</span>StatefulSet <span class="token string">`json:"items"`</span>    Count <span class="token builtin">int</span>                  <span class="token string">`json:"count"`</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三、实现类"><a href="#三、实现类" class="headerlink" title="三、实现类"></a>三、实现类</h3><h5 id="1、deployment-1"><a href="#1、deployment-1" class="headerlink" title="1、deployment"></a>1、deployment</h5><p>apps&#x2F;k8sclient&#x2F;impl&#x2F;deploymentImpl.go</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> impl<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"context"</span>    <span class="token string">"fmt"</span>    <span class="token string">"k8s-platform/apps/k8sclient"</span>    <span class="token string">"k8s-platform/apps/k8sclient/cell"</span>    config2 <span class="token string">"k8s-platform/apps/k8sclient/impl/config"</span>    <span class="token string">"k8s-platform/apps/k8sclient/structs"</span>    <span class="token string">"k8s-platform/config"</span>    <span class="token string">"k8s-platform/exception"</span>    <span class="token string">"k8s-platform/ioc"</span>    appsv1 <span class="token string">"k8s.io/api/apps/v1"</span>    metav1 <span class="token string">"k8s.io/apimachinery/pkg/apis/meta/v1"</span>    <span class="token string">"k8s.io/apimachinery/pkg/util/json"</span>    <span class="token string">"k8s.io/client-go/util/retry"</span>    <span class="token string">"time"</span><span class="token punctuation">)</span><span class="token comment">/* * init * @Description: 将deployment impl对象注入ioc */</span><span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    ioc<span class="token punctuation">.</span><span class="token function">Controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Register</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>DeploymentImpl<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">//</span><span class="token comment">//  DeploymentImpl</span><span class="token comment">//  @Description: 定义deployment接口实现</span><span class="token comment">//</span><span class="token keyword">type</span> DeploymentImpl <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    K8sClientInstance <span class="token operator">*</span>k8sclient<span class="token punctuation">.</span>K8sClient<span class="token punctuation">&#125;</span><span class="token comment">/* * Init * @Description: 获取kubernetes注入的对象 * @receiver d * @return error */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>DeploymentImpl<span class="token punctuation">)</span> <span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span>    d<span class="token punctuation">.</span>K8sClientInstance <span class="token operator">=</span> ioc<span class="token punctuation">.</span><span class="token function">Controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetObj</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>IOC_KUBECLIENT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span>k8sclient<span class="token punctuation">.</span>K8sClient<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>DeploymentImpl<span class="token punctuation">)</span> <span class="token function">Name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> config<span class="token punctuation">.</span>DEPLOYMENT_IOCNAME<span class="token punctuation">&#125;</span><span class="token comment">/* * GetDeploymentList * @Description: 获取deployment列表 * @receiver d * @param ctx * @param request * @return *structs.DeployResp * @return error */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>DeploymentImpl<span class="token punctuation">)</span> <span class="token function">GetDeploymentList</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span>    request <span class="token operator">*</span>structs<span class="token punctuation">.</span>GetDeploymentListRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>structs<span class="token punctuation">.</span>DeployResp<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    deployList<span class="token punctuation">,</span> err <span class="token operator">:=</span> d<span class="token punctuation">.</span>K8sClientInstance<span class="token punctuation">.</span>ClientSet<span class="token punctuation">.</span><span class="token function">AppsV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Deployments</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>Namespace<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">List</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>ListOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> exception<span class="token punctuation">.</span><span class="token function">GetDeploymentListFailed</span><span class="token punctuation">(</span><span class="token string">"获取deployment列表失败：%s"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">var</span> data <span class="token operator">*</span>structs<span class="token punctuation">.</span>DataSort    f <span class="token operator">:=</span> structs<span class="token punctuation">.</span>DataFilter<span class="token punctuation">&#123;</span>FilterName<span class="token punctuation">:</span> request<span class="token punctuation">.</span>FilterName<span class="token punctuation">&#125;</span>    data <span class="token operator">=</span> f<span class="token punctuation">.</span><span class="token function">Filter</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>structs<span class="token punctuation">.</span>DataSort<span class="token punctuation">&#123;</span>DataList<span class="token punctuation">:</span> d<span class="token punctuation">.</span><span class="token function">toCell</span><span class="token punctuation">(</span>deployList<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>    data <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">Sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    p <span class="token operator">:=</span> structs<span class="token punctuation">.</span>DataPagination<span class="token punctuation">&#123;</span>        PageSize<span class="token punctuation">:</span>   request<span class="token punctuation">.</span>PageSize<span class="token punctuation">,</span>        PageNumber<span class="token punctuation">:</span> request<span class="token punctuation">.</span>PageNumber<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>    data<span class="token punctuation">,</span> err <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">Paginate</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err    <span class="token punctuation">&#125;</span>    <span class="token comment">//f := k8sclient.DataFilter&#123;FilterName: request.FilterName&#125;</span>    <span class="token comment">//d.toCell(deployList)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>deployList<span class="token punctuation">,</span> <span class="token string">"——————————————"</span><span class="token punctuation">)</span>    result <span class="token operator">:=</span> structs<span class="token punctuation">.</span>DeployResp<span class="token punctuation">&#123;</span>        Total<span class="token punctuation">:</span> <span class="token function">len</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>DataList<span class="token punctuation">)</span><span class="token punctuation">,</span>        Items<span class="token punctuation">:</span> d<span class="token punctuation">.</span><span class="token function">FromCell</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>DataList<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//f.Filter(f)</span>    <span class="token keyword">return</span> <span class="token operator">&amp;</span>result<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token comment">/* * DescribeDeployments * @Description: 查看deployment详细信息 * @receiver d * @param ctx * @param request * @return *appsv1.Deployment * @return error */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>DeploymentImpl<span class="token punctuation">)</span> <span class="token function">DescribeDeployments</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span>    request <span class="token operator">*</span>structs<span class="token punctuation">.</span>DescribeDeploymentsRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>appsv1<span class="token punctuation">.</span>Deployment<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    deployInfo<span class="token punctuation">,</span> err <span class="token operator">:=</span> d<span class="token punctuation">.</span>K8sClientInstance<span class="token punctuation">.</span>ClientSet<span class="token punctuation">.</span><span class="token function">AppsV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>        <span class="token function">Deployments</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>Namespace<span class="token punctuation">)</span><span class="token punctuation">.</span>        <span class="token function">Get</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> request<span class="token punctuation">.</span>DeploymentName<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>GetOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> exception<span class="token punctuation">.</span><span class="token function">DescribeDeploymentFailed</span><span class="token punctuation">(</span><span class="token string">"获取deployment详情失败：%s"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> deployInfo<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token comment">/* * UpdateDeploymentScale * @Description: 修改deployment副本数 * @receiver d * @param ctx * @param request * @return int32 * @return error */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>DeploymentImpl<span class="token punctuation">)</span> <span class="token function">UpdateDeploymentScale</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span>    request <span class="token operator">*</span>structs<span class="token punctuation">.</span>UpdateDeploymentScaleRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">int32</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 先获取到当前deployment的副本数</span>    scale<span class="token punctuation">,</span> err <span class="token operator">:=</span> d<span class="token punctuation">.</span>K8sClientInstance<span class="token punctuation">.</span>ClientSet<span class="token punctuation">.</span><span class="token function">AppsV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>        <span class="token function">Deployments</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>Namespace<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetScale</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> request<span class="token punctuation">.</span>DeploymentName<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>GetOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">,</span> exception<span class="token punctuation">.</span><span class="token function">GetDeploymentScaleFailed</span><span class="token punctuation">(</span><span class="token string">"获取deployment副本失败：%s"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 修改副本数</span>    scale<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>Replicas <span class="token operator">=</span> <span class="token function">int32</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>ScaleNum<span class="token punctuation">)</span>    <span class="token comment">// 更新deployment</span>    newScale<span class="token punctuation">,</span> err <span class="token operator">:=</span> d<span class="token punctuation">.</span>K8sClientInstance<span class="token punctuation">.</span>ClientSet<span class="token punctuation">.</span><span class="token function">AppsV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Deployments</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>Namespace<span class="token punctuation">)</span><span class="token punctuation">.</span>        <span class="token function">UpdateScale</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> request<span class="token punctuation">.</span>DeploymentName<span class="token punctuation">,</span> scale<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>UpdateOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">,</span> exception<span class="token punctuation">.</span><span class="token function">UpdateDeploymentScaleFailed</span><span class="token punctuation">(</span><span class="token string">"修改deployment副本数失败：%s"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> newScale<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>Replicas<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token comment">/* * CreateDeployment * @Description: 创建deployment * @receiver d * @param ctx * @param request * @return *appsv1.Deployment * @return error */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>DeploymentImpl<span class="token punctuation">)</span> <span class="token function">CreateDeployment</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>CreateDeploymentRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>appsv1<span class="token punctuation">.</span>Deployment<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 根据传入的request 创建k8s deployment资源</span>    deployment <span class="token operator">:=</span> config2<span class="token punctuation">.</span><span class="token function">NewDeploymentConfig</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span>    <span class="token comment">// 创建deployment 资源</span>    result<span class="token punctuation">,</span> err <span class="token operator">:=</span> d<span class="token punctuation">.</span>K8sClientInstance<span class="token punctuation">.</span>ClientSet<span class="token punctuation">.</span><span class="token function">AppsV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Deployments</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>Namespace<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> deployment<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>CreateOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err    <span class="token punctuation">&#125;</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"result = "</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span>    <span class="token keyword">return</span> result<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token comment">/* * DeleteDeployment * @Description: 删除deployment * @receiver d * @param ctx * @param request * @return error */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>DeploymentImpl<span class="token punctuation">)</span> <span class="token function">DeleteDeployment</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>DeleteDeploymentRequest<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span>    err <span class="token operator">:=</span> d<span class="token punctuation">.</span>K8sClientInstance<span class="token punctuation">.</span>ClientSet<span class="token punctuation">.</span><span class="token function">AppsV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Deployments</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>Namespace<span class="token punctuation">)</span><span class="token punctuation">.</span>        <span class="token function">Delete</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> request<span class="token punctuation">.</span>DeploymentName<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>DeleteOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> exception<span class="token punctuation">.</span><span class="token function">DeleteDeploymentFailed</span><span class="token punctuation">(</span><span class="token string">"删除deployment失败：%s"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token comment">/* * RestartDeployment * @Description: 重启deployment * @receiver d * @param ctx * @param request * @return error */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>DeploymentImpl<span class="token punctuation">)</span> <span class="token function">RestartDeployment</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>RestartDeploymentRequest<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 1、获取deployment对象</span>    deployment<span class="token punctuation">,</span> err <span class="token operator">:=</span> d<span class="token punctuation">.</span>K8sClientInstance<span class="token punctuation">.</span>ClientSet<span class="token punctuation">.</span><span class="token function">AppsV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>        <span class="token function">Deployments</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>Namespace<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> request<span class="token punctuation">.</span>DeploymentName<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>GetOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> exception<span class="token punctuation">.</span><span class="token function">DescribeDeploymentFailed</span><span class="token punctuation">(</span><span class="token string">"获取deployment信息失败：%s"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 2、设置注释</span>    annotation <span class="token operator">:=</span> <span class="token string">"kubectl.kubernetes.io/restartedAt"</span>    currentTime <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">"2006-01-02 15:04:05"</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> deployment<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>Template<span class="token punctuation">.</span>Annotations <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        deployment<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>Template<span class="token punctuation">.</span>Annotations <span class="token operator">=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    deployment<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>Template<span class="token punctuation">.</span>Annotations<span class="token punctuation">[</span>annotation<span class="token punctuation">]</span> <span class="token operator">=</span> currentTime    <span class="token comment">//  3、更新注释后会自动重启所有pod，retry 解决冲突（多个客户端同时更改一个deployment）问题，如果有冲突会自动重试更新</span>    err <span class="token operator">=</span> retry<span class="token punctuation">.</span><span class="token function">RetryOnConflict</span><span class="token punctuation">(</span>retry<span class="token punctuation">.</span>DefaultRetry<span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span>        <span class="token boolean">_</span><span class="token punctuation">,</span> updateErr <span class="token operator">:=</span> d<span class="token punctuation">.</span>K8sClientInstance<span class="token punctuation">.</span>ClientSet<span class="token punctuation">.</span><span class="token function">AppsV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Deployments</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>Namespace<span class="token punctuation">)</span><span class="token punctuation">.</span>            <span class="token function">Update</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> deployment<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>UpdateOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> updateErr    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> exception<span class="token punctuation">.</span><span class="token function">UpdateDeploymentFailed</span><span class="token punctuation">(</span><span class="token string">"更新deployment失败：%s"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token comment">/* * UpdateDeployment * @Description: 更新deployment * @receiver d * @param ctx * @param request * @return *appsv1.Deployment * @return error */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>DeploymentImpl<span class="token punctuation">)</span> <span class="token function">UpdateDeployment</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span>    request <span class="token operator">*</span>structs<span class="token punctuation">.</span>UpdateDeploymentRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>appsv1<span class="token punctuation">.</span>Deployment<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 1、 创建deployment资源实例</span>    <span class="token keyword">var</span> deoloyment <span class="token operator">=</span> <span class="token operator">&amp;</span>appsv1<span class="token punctuation">.</span>Deployment<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>Content<span class="token punctuation">)</span>    <span class="token comment">//  2、将前端传入的字符串反序列化为json格式并赋给deployment资源实例</span>    err <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Unmarshal</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>Content<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>deoloyment<span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> exception<span class="token punctuation">.</span><span class="token function">JsonUmarshalFailed</span><span class="token punctuation">(</span><span class="token string">"Json反序列化失败：%s"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 3、更新deployment</span>    newDeployment<span class="token punctuation">,</span> err <span class="token operator">:=</span> d<span class="token punctuation">.</span>K8sClientInstance<span class="token punctuation">.</span>ClientSet<span class="token punctuation">.</span><span class="token function">AppsV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>        <span class="token function">Deployments</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>Namespace<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> deoloyment<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>UpdateOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> exception<span class="token punctuation">.</span><span class="token function">UpdateDeploymentFailed</span><span class="token punctuation">(</span><span class="token string">"更新deployment失败：%s"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> newDeployment<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token comment">/* * GetNamespaceDeploymentCount * @Description: 获取每个namespace的deplpyment数量 * @receiver d * @param ctx * @param request * @return []*structs.NsDeployCount * @return error */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>DeploymentImpl<span class="token punctuation">)</span> <span class="token function">GetNamespaceDeploymentCount</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span>    request <span class="token operator">*</span>structs<span class="token punctuation">.</span>GetNamespaceDeploymentCountRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>structs<span class="token punctuation">.</span>NsDeployCount<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 1、获取所有namespace列表</span>    nslist<span class="token punctuation">,</span> err <span class="token operator">:=</span> d<span class="token punctuation">.</span>K8sClientInstance<span class="token punctuation">.</span>ClientSet<span class="token punctuation">.</span><span class="token function">CoreV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Namespaces</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">List</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>ListOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> exception<span class="token punctuation">.</span><span class="token function">NewGetNamespacePodsCountFailed</span><span class="token punctuation">(</span><span class="token string">"获取namespace列表失败：%s"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 根据每个namespace，获取每个namespace对应的deplyoment数量</span>    nsDeploy <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>structs<span class="token punctuation">.</span>NsDeployCount<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> namespace <span class="token operator">:=</span> <span class="token keyword">range</span> nslist<span class="token punctuation">.</span>Items <span class="token punctuation">&#123;</span>        deploymentlist<span class="token punctuation">,</span> err <span class="token operator">:=</span> d<span class="token punctuation">.</span>K8sClientInstance<span class="token punctuation">.</span>ClientSet<span class="token punctuation">.</span><span class="token function">AppsV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>            <span class="token function">Deployments</span><span class="token punctuation">(</span>namespace<span class="token punctuation">.</span>Name<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">List</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>ListOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> exception<span class="token punctuation">.</span><span class="token function">GetDeploymentListFailed</span><span class="token punctuation">(</span><span class="token string">"获取deployment列表失败：%s"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        nsDeploy <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>nsDeploy<span class="token punctuation">,</span> <span class="token operator">&amp;</span>structs<span class="token punctuation">.</span>NsDeployCount<span class="token punctuation">&#123;</span>            DeploymentCount<span class="token punctuation">:</span> <span class="token function">len</span><span class="token punctuation">(</span>deploymentlist<span class="token punctuation">.</span>Items<span class="token punctuation">)</span><span class="token punctuation">,</span>            Namespace<span class="token punctuation">:</span>       namespace<span class="token punctuation">.</span>Name<span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> nsDeploy<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token comment">/* * toCell * @Description: 将k8s中的deploymentList对象转换成DataMeta对象 * @receiver d * @param data * @return []structs.DataMeta */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>DeploymentImpl<span class="token punctuation">)</span> <span class="token function">toCell</span><span class="token punctuation">(</span>data <span class="token operator">*</span>appsv1<span class="token punctuation">.</span>DeploymentList<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>structs<span class="token punctuation">.</span>DataMeta <span class="token punctuation">&#123;</span>    cells <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span>structs<span class="token punctuation">.</span>DataMeta<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>Items<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> data<span class="token punctuation">.</span>Items <span class="token punctuation">&#123;</span>        cells<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> cell<span class="token punctuation">.</span><span class="token function">DeploymentCell</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>Items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> cells<span class="token punctuation">&#125;</span><span class="token comment">/* * FromCell * @Description: 将DataMeta列表转为k8s中的[]deployment对象 * @receiver d * @param data * @return []appsv1.Deployment */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>DeploymentImpl<span class="token punctuation">)</span> <span class="token function">FromCell</span><span class="token punctuation">(</span>data <span class="token punctuation">[</span><span class="token punctuation">]</span>structs<span class="token punctuation">.</span>DataMeta<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>appsv1<span class="token punctuation">.</span>Deployment <span class="token punctuation">&#123;</span>    cells <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span>appsv1<span class="token punctuation">.</span>Deployment<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> data <span class="token punctuation">&#123;</span>        cells<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> appsv1<span class="token punctuation">.</span><span class="token function">Deployment</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">(</span>cell<span class="token punctuation">.</span>DeploymentCell<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> cells<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2、daemonset-1"><a href="#2、daemonset-1" class="headerlink" title="2、daemonset"></a>2、daemonset</h5><p>apps&#x2F;k8sclient&#x2F;impl&#x2F;daemonsetImpl.go</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> impl<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"context"</span>    <span class="token string">"fmt"</span>    <span class="token string">"k8s-platform/apps/k8sclient"</span>    <span class="token string">"k8s-platform/apps/k8sclient/cell"</span>    config2 <span class="token string">"k8s-platform/apps/k8sclient/impl/config"</span>    <span class="token string">"k8s-platform/apps/k8sclient/structs"</span>    <span class="token string">"k8s-platform/config"</span>    <span class="token string">"k8s-platform/exception"</span>    <span class="token string">"k8s-platform/ioc"</span>    appsv1 <span class="token string">"k8s.io/api/apps/v1"</span>    metav1 <span class="token string">"k8s.io/apimachinery/pkg/apis/meta/v1"</span>    <span class="token string">"k8s.io/apimachinery/pkg/util/json"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    ioc<span class="token punctuation">.</span><span class="token function">Controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Register</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>DaemonSetImpl<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">type</span> DaemonSetImpl <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    K8sClientInstance <span class="token operator">*</span>k8sclient<span class="token punctuation">.</span>K8sClient<span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>DaemonSetImpl<span class="token punctuation">)</span> <span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span>    d<span class="token punctuation">.</span>K8sClientInstance <span class="token operator">=</span> ioc<span class="token punctuation">.</span><span class="token function">Controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetObj</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>IOC_KUBECLIENT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span>k8sclient<span class="token punctuation">.</span>K8sClient<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>DaemonSetImpl<span class="token punctuation">)</span> <span class="token function">Name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> config<span class="token punctuation">.</span>DAEMONSET_IOCNAME<span class="token punctuation">&#125;</span><span class="token comment">/* * CreateDaemonSet * @Description: 创建daemonset * @receiver d * @param ctx * @param request * @return *appsv1.DaemonSet * @return error */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>DaemonSetImpl<span class="token punctuation">)</span> <span class="token function">CreateDaemonSet</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span>    request <span class="token operator">*</span>structs<span class="token punctuation">.</span>CreateDaemonSetRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>appsv1<span class="token punctuation">.</span>DaemonSet<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    daemonset <span class="token operator">:=</span> config2<span class="token punctuation">.</span><span class="token function">NewDaemonsetConfig</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>daemonset<span class="token punctuation">)</span>    result<span class="token punctuation">,</span> err <span class="token operator">:=</span> d<span class="token punctuation">.</span>K8sClientInstance<span class="token punctuation">.</span>ClientSet<span class="token punctuation">.</span><span class="token function">AppsV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">DaemonSets</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>Namespace<span class="token punctuation">)</span><span class="token punctuation">.</span>        <span class="token function">Create</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> daemonset<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>CreateOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> exception<span class="token punctuation">.</span><span class="token function">CreateDaemonSetFailed</span><span class="token punctuation">(</span><span class="token string">"创建daemonset失败：%s"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//d.K8sClientInstance.ClientSet.AppsV1().DaemonSets(request.Namespace).cr</span>    <span class="token keyword">return</span> result<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token comment">/* * GetDaemonSetList * @Description: 获取daemonset列表 * @receiver d * @param ctx * @param request * @return *structs.DaemonsetResp * @return error */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>DaemonSetImpl<span class="token punctuation">)</span> <span class="token function">GetDaemonSetList</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span>    request <span class="token operator">*</span>structs<span class="token punctuation">.</span>GetDaemonSetListRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>structs<span class="token punctuation">.</span>DaemonsetResp<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>K8sClientInstance<span class="token punctuation">)</span>    daemonSetlist<span class="token punctuation">,</span> err <span class="token operator">:=</span> d<span class="token punctuation">.</span>K8sClientInstance<span class="token punctuation">.</span>ClientSet<span class="token punctuation">.</span><span class="token function">AppsV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>        <span class="token function">DaemonSets</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>Namespace<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">List</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>ListOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> exception<span class="token punctuation">.</span><span class="token function">GetDaemonSetListFailed</span><span class="token punctuation">(</span><span class="token string">"获取daemonsetList失败：%s"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    f <span class="token operator">:=</span> structs<span class="token punctuation">.</span>DataFilter<span class="token punctuation">&#123;</span>FilterName<span class="token punctuation">:</span> request<span class="token punctuation">.</span>FilterName<span class="token punctuation">&#125;</span>    data <span class="token operator">:=</span> f<span class="token punctuation">.</span><span class="token function">Filter</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>structs<span class="token punctuation">.</span>DataSort<span class="token punctuation">&#123;</span>DataList<span class="token punctuation">:</span> d<span class="token punctuation">.</span><span class="token function">toCell</span><span class="token punctuation">(</span>daemonSetlist<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    data <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">Sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    p <span class="token operator">:=</span> <span class="token operator">&amp;</span>structs<span class="token punctuation">.</span>DataPagination<span class="token punctuation">&#123;</span>        PageSize<span class="token punctuation">:</span>   request<span class="token punctuation">.</span>PageSize<span class="token punctuation">,</span>        PageNumber<span class="token punctuation">:</span> request<span class="token punctuation">.</span>PageNumber<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>    data<span class="token punctuation">,</span> err <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">Paginate</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> exception<span class="token punctuation">.</span><span class="token function">NewGetPaginateFailed</span><span class="token punctuation">(</span><span class="token string">"获取分页数据失败：%s"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    result <span class="token operator">:=</span> <span class="token operator">&amp;</span>structs<span class="token punctuation">.</span>DaemonsetResp<span class="token punctuation">&#123;</span>        Count<span class="token punctuation">:</span> <span class="token function">len</span><span class="token punctuation">(</span>daemonSetlist<span class="token punctuation">.</span>Items<span class="token punctuation">)</span><span class="token punctuation">,</span>        Items<span class="token punctuation">:</span> d<span class="token punctuation">.</span><span class="token function">FromCell</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>DataList<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> result<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>DaemonSetImpl<span class="token punctuation">)</span> <span class="token function">DescribeDaemonSet</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span>    request <span class="token operator">*</span>structs<span class="token punctuation">.</span>DescribeDaemonSet<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>appsv1<span class="token punctuation">.</span>DaemonSet<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    daemonset<span class="token punctuation">,</span> err <span class="token operator">:=</span> d<span class="token punctuation">.</span>K8sClientInstance<span class="token punctuation">.</span>ClientSet<span class="token punctuation">.</span><span class="token function">AppsV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">DaemonSets</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>Namespace<span class="token punctuation">)</span><span class="token punctuation">.</span>        <span class="token function">Get</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> request<span class="token punctuation">.</span>DaemonSetName<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>GetOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> exception<span class="token punctuation">.</span><span class="token function">DescribeDaemonSetFailed</span><span class="token punctuation">(</span><span class="token string">"获取daemonset详情失败：%s"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> daemonset<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>DaemonSetImpl<span class="token punctuation">)</span> <span class="token function">DeleteDaemonSet</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>DeleteDaemonSet<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span>    err <span class="token operator">:=</span> d<span class="token punctuation">.</span>K8sClientInstance<span class="token punctuation">.</span>ClientSet<span class="token punctuation">.</span><span class="token function">AppsV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">DaemonSets</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>Namespace<span class="token punctuation">)</span><span class="token punctuation">.</span>        <span class="token function">Delete</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> request<span class="token punctuation">.</span>DaemonSetName<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>DeleteOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> exception<span class="token punctuation">.</span><span class="token function">DeleteDaemonSetFailed</span><span class="token punctuation">(</span><span class="token string">"删除daemonset失败:%s"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>DaemonSetImpl<span class="token punctuation">)</span> <span class="token function">UpdateDaemonSet</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>UpdateDaemonSet<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>appsv1<span class="token punctuation">.</span>DaemonSet<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    daemonset <span class="token operator">:=</span> <span class="token operator">&amp;</span>appsv1<span class="token punctuation">.</span>DaemonSet<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    err <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Unmarshal</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>Content<span class="token punctuation">)</span><span class="token punctuation">,</span> daemonset<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> exception<span class="token punctuation">.</span><span class="token function">JsonUmarshalFailed</span><span class="token punctuation">(</span><span class="token string">"Json 反序列化失败：%s"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    result<span class="token punctuation">,</span> err <span class="token operator">:=</span> d<span class="token punctuation">.</span>K8sClientInstance<span class="token punctuation">.</span>ClientSet<span class="token punctuation">.</span><span class="token function">AppsV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">DaemonSets</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>Namespace<span class="token punctuation">)</span><span class="token punctuation">.</span>        <span class="token function">Update</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> daemonset<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>UpdateOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> exception<span class="token punctuation">.</span><span class="token function">UpdateDaemonSetFailed</span><span class="token punctuation">(</span><span class="token string">"更新daemonset失败：%s"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> result<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>DaemonSetImpl<span class="token punctuation">)</span> <span class="token function">toCell</span><span class="token punctuation">(</span>data <span class="token operator">*</span>appsv1<span class="token punctuation">.</span>DaemonSetList<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>structs<span class="token punctuation">.</span>DataMeta <span class="token punctuation">&#123;</span>    cells <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span>structs<span class="token punctuation">.</span>DataMeta<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>Items<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> data<span class="token punctuation">.</span>Items <span class="token punctuation">&#123;</span>        cells<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> cell<span class="token punctuation">.</span><span class="token function">DaemonSetCell</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>Items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> cells<span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>DaemonSetImpl<span class="token punctuation">)</span> <span class="token function">FromCell</span><span class="token punctuation">(</span>data <span class="token punctuation">[</span><span class="token punctuation">]</span>structs<span class="token punctuation">.</span>DataMeta<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>appsv1<span class="token punctuation">.</span>DaemonSet <span class="token punctuation">&#123;</span>    cells <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span>appsv1<span class="token punctuation">.</span>DaemonSet<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> data <span class="token punctuation">&#123;</span>        cells<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> appsv1<span class="token punctuation">.</span><span class="token function">DaemonSet</span><span class="token punctuation">(</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">(</span>cell<span class="token punctuation">.</span>DaemonSetCell<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> cells<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="3、statefulset-1"><a href="#3、statefulset-1" class="headerlink" title="3、statefulset"></a>3、statefulset</h5><p>apps&#x2F;k8sclient&#x2F;impl&#x2F;statefulsetImpl.go</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> impl<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"context"</span>    <span class="token string">"fmt"</span>    <span class="token string">"k8s-platform/apps/k8sclient"</span>    <span class="token string">"k8s-platform/apps/k8sclient/cell"</span>    config2 <span class="token string">"k8s-platform/apps/k8sclient/impl/config"</span>    <span class="token string">"k8s-platform/apps/k8sclient/structs"</span>    <span class="token string">"k8s-platform/config"</span>    <span class="token string">"k8s-platform/exception"</span>    <span class="token string">"k8s-platform/ioc"</span>    appsv1 <span class="token string">"k8s.io/api/apps/v1"</span>    metav1 <span class="token string">"k8s.io/apimachinery/pkg/apis/meta/v1"</span>    <span class="token string">"k8s.io/apimachinery/pkg/util/json"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    ioc<span class="token punctuation">.</span><span class="token function">Controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Register</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>StatefulSetImpl<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">type</span> StatefulSetImpl <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    K8sClientInstance <span class="token operator">*</span>k8sclient<span class="token punctuation">.</span>K8sClient<span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>StatefulSetImpl<span class="token punctuation">)</span> <span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span>    s<span class="token punctuation">.</span>K8sClientInstance <span class="token operator">=</span> ioc<span class="token punctuation">.</span><span class="token function">Controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetObj</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>IOC_KUBECLIENT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span>k8sclient<span class="token punctuation">.</span>K8sClient<span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>K8sClientInstance<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>StatefulSetImpl<span class="token punctuation">)</span> <span class="token function">Name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> config<span class="token punctuation">.</span>STATEFULSET_IOCNAME<span class="token punctuation">&#125;</span><span class="token comment">/* * CreateStatefulSet * @Description: 创建statefulset * @receiver s * @param ctx * @param request * @return *appsv1.StatefulSet * @return error */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>StatefulSetImpl<span class="token punctuation">)</span> <span class="token function">CreateStatefulSet</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span>    request <span class="token operator">*</span>structs<span class="token punctuation">.</span>CreateStatefulSetRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>appsv1<span class="token punctuation">.</span>StatefulSet<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    statefulset <span class="token operator">:=</span> config2<span class="token punctuation">.</span><span class="token function">NewStatefulsetConfig</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span>    data<span class="token punctuation">,</span> err <span class="token operator">:=</span> s<span class="token punctuation">.</span>K8sClientInstance<span class="token punctuation">.</span>ClientSet<span class="token punctuation">.</span><span class="token function">AppsV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">StatefulSets</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>Namespace<span class="token punctuation">)</span><span class="token punctuation">.</span>        <span class="token function">Create</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> statefulset<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>CreateOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> exception<span class="token punctuation">.</span><span class="token function">CreateStatefulSetFailed</span><span class="token punctuation">(</span><span class="token string">"创建失败：%s"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> data<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>StatefulSetImpl<span class="token punctuation">)</span> <span class="token function">GetStatefulSetList</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span>    request <span class="token operator">*</span>structs<span class="token punctuation">.</span>GetStatefulSetListRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>structs<span class="token punctuation">.</span>StatefulSetResp<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    statefullist<span class="token punctuation">,</span> err <span class="token operator">:=</span> s<span class="token punctuation">.</span>K8sClientInstance<span class="token punctuation">.</span>ClientSet<span class="token punctuation">.</span><span class="token function">AppsV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>        <span class="token function">StatefulSets</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>Namespace<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">List</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>ListOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    f <span class="token operator">:=</span> structs<span class="token punctuation">.</span>DataFilter<span class="token punctuation">&#123;</span>FilterName<span class="token punctuation">:</span> request<span class="token punctuation">.</span>FilterName<span class="token punctuation">&#125;</span>    data <span class="token operator">:=</span> f<span class="token punctuation">.</span><span class="token function">Filter</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>structs<span class="token punctuation">.</span>DataSort<span class="token punctuation">&#123;</span>DataList<span class="token punctuation">:</span> s<span class="token punctuation">.</span><span class="token function">ToCell</span><span class="token punctuation">(</span>statefullist<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    data <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">Sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    p <span class="token operator">:=</span> structs<span class="token punctuation">.</span>DataPagination<span class="token punctuation">&#123;</span>        PageSize<span class="token punctuation">:</span>   request<span class="token punctuation">.</span>PageSize<span class="token punctuation">,</span>        PageNumber<span class="token punctuation">:</span> request<span class="token punctuation">.</span>PageNumber<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>    data<span class="token punctuation">,</span> err <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">Paginate</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> exception<span class="token punctuation">.</span><span class="token function">GetStatefulSetListFailed</span><span class="token punctuation">(</span><span class="token string">"获取statefulset列表失败：%s"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    result <span class="token operator">:=</span> <span class="token operator">&amp;</span>structs<span class="token punctuation">.</span>StatefulSetResp<span class="token punctuation">&#123;</span>        Items<span class="token punctuation">:</span> s<span class="token punctuation">.</span><span class="token function">FromCell</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>DataList<span class="token punctuation">)</span><span class="token punctuation">,</span>        Count<span class="token punctuation">:</span> <span class="token function">len</span><span class="token punctuation">(</span>statefullist<span class="token punctuation">.</span>Items<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> result<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>StatefulSetImpl<span class="token punctuation">)</span> <span class="token function">DescribeStatefulSet</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span>    request <span class="token operator">*</span>structs<span class="token punctuation">.</span>DescribeStatefulSet<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>appsv1<span class="token punctuation">.</span>StatefulSet<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    statefulset<span class="token punctuation">,</span> err <span class="token operator">:=</span> s<span class="token punctuation">.</span>K8sClientInstance<span class="token punctuation">.</span>ClientSet<span class="token punctuation">.</span><span class="token function">AppsV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">StatefulSets</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>Namespace<span class="token punctuation">)</span><span class="token punctuation">.</span>        <span class="token function">Get</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> request<span class="token punctuation">.</span>StatefulSetName<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>GetOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> exception<span class="token punctuation">.</span><span class="token function">DescribeStatefulSetFailed</span><span class="token punctuation">(</span><span class="token string">"获取statefulset详情失败：%s"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> statefulset<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>StatefulSetImpl<span class="token punctuation">)</span> <span class="token function">DeleteStatefulSet</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>structs<span class="token punctuation">.</span>DeleteStatefulSet<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span>    err <span class="token operator">:=</span> s<span class="token punctuation">.</span>K8sClientInstance<span class="token punctuation">.</span>ClientSet<span class="token punctuation">.</span><span class="token function">AppsV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">StatefulSets</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>Namespace<span class="token punctuation">)</span><span class="token punctuation">.</span>        <span class="token function">Delete</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> request<span class="token punctuation">.</span>StatefulSetName<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>DeleteOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> exception<span class="token punctuation">.</span><span class="token function">DeleteStatefulSetFailed</span><span class="token punctuation">(</span><span class="token string">"删除失败：%s"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>StatefulSetImpl<span class="token punctuation">)</span> <span class="token function">UpdateStatefulSet</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span>    request <span class="token operator">*</span>structs<span class="token punctuation">.</span>UpdateStatefulSet<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>appsv1<span class="token punctuation">.</span>StatefulSet<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    statefulSet <span class="token operator">:=</span> <span class="token operator">&amp;</span>appsv1<span class="token punctuation">.</span>StatefulSet<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    err <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Unmarshal</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>Content<span class="token punctuation">)</span><span class="token punctuation">,</span> statefulSet<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> exception<span class="token punctuation">.</span><span class="token function">JsonUmarshalFailed</span><span class="token punctuation">(</span><span class="token string">"Json反序列化失败：%s"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    result<span class="token punctuation">,</span> err <span class="token operator">:=</span> s<span class="token punctuation">.</span>K8sClientInstance<span class="token punctuation">.</span>ClientSet<span class="token punctuation">.</span><span class="token function">AppsV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">StatefulSets</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>Namespace<span class="token punctuation">)</span><span class="token punctuation">.</span>        <span class="token function">Update</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> statefulSet<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>UpdateOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> exception<span class="token punctuation">.</span><span class="token function">UpdateStatefulSetFailed</span><span class="token punctuation">(</span><span class="token string">"更新失败：%s"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> result<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token comment">/* * toCell * @Description: 将k8s中的deploymentList对象转换成DataMeta对象 * @receiver d * @param data * @return []structs.DataMeta */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>StatefulSetImpl<span class="token punctuation">)</span> <span class="token function">ToCell</span><span class="token punctuation">(</span>data <span class="token operator">*</span>appsv1<span class="token punctuation">.</span>StatefulSetList<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>structs<span class="token punctuation">.</span>DataMeta <span class="token punctuation">&#123;</span>    cells <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span>structs<span class="token punctuation">.</span>DataMeta<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>Items<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> data<span class="token punctuation">.</span>Items <span class="token punctuation">&#123;</span>        cells<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> cell<span class="token punctuation">.</span><span class="token function">StatefulsetCell</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>Items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> cells<span class="token punctuation">&#125;</span><span class="token comment">/* * FromCell * @Description: 将DataMeta列表转为k8s中的[]deployment对象 * @receiver d * @param data * @return []appsv1.Deployment */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>StatefulSetImpl<span class="token punctuation">)</span> <span class="token function">FromCell</span><span class="token punctuation">(</span>data <span class="token punctuation">[</span><span class="token punctuation">]</span>structs<span class="token punctuation">.</span>DataMeta<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>appsv1<span class="token punctuation">.</span>StatefulSet <span class="token punctuation">&#123;</span>    cells <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span>appsv1<span class="token punctuation">.</span>StatefulSet<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> data <span class="token punctuation">&#123;</span>        cells<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> appsv1<span class="token punctuation">.</span><span class="token function">StatefulSet</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">(</span>cell<span class="token punctuation">.</span>StatefulsetCell<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> cells<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>impl&#x2F;config&#x2F;deployment_config.go</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> config<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"fmt"</span>    <span class="token string">"k8s-platform/apps/k8sclient/structs"</span>    appsv1 <span class="token string">"k8s.io/api/apps/v1"</span>    corev1 <span class="token string">"k8s.io/api/core/v1"</span>    <span class="token comment">// k8s资源解析包</span>    <span class="token string">"k8s.io/apimachinery/pkg/api/resource"</span>    metav1 <span class="token string">"k8s.io/apimachinery/pkg/apis/meta/v1"</span><span class="token punctuation">)</span><span class="token comment">//</span><span class="token comment">//  DeploymentConfig</span><span class="token comment">//  @Description: 生成k8s  deployment资源的结构体</span><span class="token comment">//</span><span class="token keyword">type</span> DeploymentConfig <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    deployment <span class="token operator">*</span>appsv1<span class="token punctuation">.</span>Deployment<span class="token punctuation">&#125;</span><span class="token comment">/* * NewDeploymentConfig * @Description:  创建k8s deployment资源的方法，需要传入创建deplyoment的参数 * @param request * @return *appsv1.Deployment */</span><span class="token keyword">func</span> <span class="token function">NewDeploymentConfig</span><span class="token punctuation">(</span>request <span class="token operator">*</span>structs<span class="token punctuation">.</span>CreateDeploymentRequest<span class="token punctuation">)</span> <span class="token operator">*</span>appsv1<span class="token punctuation">.</span>Deployment <span class="token punctuation">&#123;</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span>    <span class="token comment">// 遍历deployment中所有的 container对象，并将所有container对象转换成k8s 中的container资源</span>    <span class="token keyword">var</span> containers <span class="token punctuation">[</span><span class="token punctuation">]</span>corev1<span class="token punctuation">.</span>Container    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> c <span class="token operator">:=</span> <span class="token keyword">range</span> request<span class="token punctuation">.</span>Containers <span class="token punctuation">&#123;</span>        containers <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>containers<span class="token punctuation">,</span> c<span class="token punctuation">.</span><span class="token function">ToK8sContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token function">ToK8sDeployment</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> containers<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/* * ToK8sDeployment * @Description:  将CreateDeploymentRequest 转换为k8s deployment对象 * @receiver c * @param request * @return appsv1.Deployment */</span><span class="token keyword">func</span> <span class="token function">ToK8sDeployment</span><span class="token punctuation">(</span>request <span class="token operator">*</span>structs<span class="token punctuation">.</span>CreateDeploymentRequest<span class="token punctuation">,</span> container <span class="token punctuation">[</span><span class="token punctuation">]</span>corev1<span class="token punctuation">.</span>Container<span class="token punctuation">)</span> <span class="token operator">*</span>appsv1<span class="token punctuation">.</span>Deployment <span class="token punctuation">&#123;</span>    <span class="token comment">// 将对应的参数传入appsv1.Deployment</span>    <span class="token keyword">return</span> <span class="token operator">&amp;</span>appsv1<span class="token punctuation">.</span>Deployment<span class="token punctuation">&#123;</span>        ObjectMeta<span class="token punctuation">:</span> metav1<span class="token punctuation">.</span>ObjectMeta<span class="token punctuation">&#123;</span>            Name<span class="token punctuation">:</span>      request<span class="token punctuation">.</span>DeploymentName<span class="token punctuation">,</span>            Namespace<span class="token punctuation">:</span> request<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span>            Labels<span class="token punctuation">:</span>    request<span class="token punctuation">.</span>Label<span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        Spec<span class="token punctuation">:</span> appsv1<span class="token punctuation">.</span>DeploymentSpec<span class="token punctuation">&#123;</span>            Selector<span class="token punctuation">:</span> <span class="token operator">&amp;</span>metav1<span class="token punctuation">.</span>LabelSelector<span class="token punctuation">&#123;</span>                MatchLabels<span class="token punctuation">:</span> request<span class="token punctuation">.</span>Label<span class="token punctuation">,</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            Replicas<span class="token punctuation">:</span> request<span class="token punctuation">.</span>Replicas<span class="token punctuation">,</span>            Template<span class="token punctuation">:</span> corev1<span class="token punctuation">.</span>PodTemplateSpec<span class="token punctuation">&#123;</span>                ObjectMeta<span class="token punctuation">:</span> metav1<span class="token punctuation">.</span>ObjectMeta<span class="token punctuation">&#123;</span>                    Name<span class="token punctuation">:</span>      request<span class="token punctuation">.</span>PodName<span class="token punctuation">,</span>                    Namespace<span class="token punctuation">:</span> request<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span>                    Labels<span class="token punctuation">:</span>    request<span class="token punctuation">.</span>Label<span class="token punctuation">,</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                Spec<span class="token punctuation">:</span> corev1<span class="token punctuation">.</span>PodSpec<span class="token punctuation">&#123;</span>                    Containers<span class="token punctuation">:</span> container<span class="token punctuation">,</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/* * NewResourceRequirements * @Description:  将传入的资源参数转换成K8s中的ResourceRequirement对象 * @param cpuLimit  容我可以使用的最大CPU资源，以字符串形式表示，如"200m" * @param memoryLimit 容器可以使用的最大内存资源，如"256Mi" * @param cpuRequests  k8s调度容器时所需要的最小cpu资源量，形式同上 * @param memoryRequests  k8s调度容器时所需要的最小内存资源量，形式同上 * @return corev1.ResourceRequirements   包含了Limits、Requests、Claims三个字段 */</span><span class="token keyword">func</span> <span class="token function">NewResourceRequirements</span><span class="token punctuation">(</span>cpuLimit<span class="token punctuation">,</span> memoryLimit<span class="token punctuation">,</span> cpuRequests<span class="token punctuation">,</span> memoryRequests <span class="token builtin">string</span><span class="token punctuation">)</span> corev1<span class="token punctuation">.</span>ResourceRequirements <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> corev1<span class="token punctuation">.</span>ResourceRequirements<span class="token punctuation">&#123;</span>        Limits<span class="token punctuation">:</span> corev1<span class="token punctuation">.</span>ResourceList<span class="token punctuation">&#123;</span>            <span class="token comment">// corev1.ResourceCPU 是一个常量，表示 CPU 资源。</span>            <span class="token comment">// resource.MustParse 解析 cpuLimit 字符串为一个资源数量对象。</span>            <span class="token comment">// 这里的 "200m"  200 millicores，也就是 0.2 核的 CPU。</span>            corev1<span class="token punctuation">.</span>ResourceCPU<span class="token punctuation">:</span> resource<span class="token punctuation">.</span><span class="token function">MustParse</span><span class="token punctuation">(</span>cpuLimit<span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token comment">// corev1.ResourceMemory 是一个常量，表示内存资源。</span>            <span class="token comment">// resource.MustParse 解析 memoryLimit 字符串为一个资源数量对象。</span>            <span class="token comment">// "256Mi" 表示 256 Mebibytes 的内存。</span>            corev1<span class="token punctuation">.</span>ResourceMemory<span class="token punctuation">:</span> resource<span class="token punctuation">.</span><span class="token function">MustParse</span><span class="token punctuation">(</span>memoryLimit<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        Requests<span class="token punctuation">:</span> corev1<span class="token punctuation">.</span>ResourceList<span class="token punctuation">&#123;</span>            corev1<span class="token punctuation">.</span>ResourceCPU<span class="token punctuation">:</span>    resource<span class="token punctuation">.</span><span class="token function">MustParse</span><span class="token punctuation">(</span>cpuRequests<span class="token punctuation">)</span><span class="token punctuation">,</span>            corev1<span class="token punctuation">.</span>ResourceMemory<span class="token punctuation">:</span> resource<span class="token punctuation">.</span><span class="token function">MustParse</span><span class="token punctuation">(</span>memoryRequests<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">Int32Conversion</span><span class="token punctuation">(</span>i <span class="token builtin">int32</span><span class="token punctuation">)</span> <span class="token operator">*</span><span class="token builtin">int32</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token operator">&amp;</span>i<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>impl&#x2F;config&#x2F;daemonset_config.go</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> config<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"k8s-platform/apps/k8sclient/structs"</span>    appsv1 <span class="token string">"k8s.io/api/apps/v1"</span>    corev1 <span class="token string">"k8s.io/api/core/v1"</span>    metav1 <span class="token string">"k8s.io/apimachinery/pkg/apis/meta/v1"</span><span class="token punctuation">)</span><span class="token comment">/* * NewDaemonsetConfig * @Description: 将用户传入的参数，转换成k8s中的Daemonset对象 * @param request * @return *appsv1.DaemonSet */</span><span class="token keyword">func</span> <span class="token function">NewDaemonsetConfig</span><span class="token punctuation">(</span>request <span class="token operator">*</span>structs<span class="token punctuation">.</span>CreateDaemonSetRequest<span class="token punctuation">)</span> <span class="token operator">*</span>appsv1<span class="token punctuation">.</span>DaemonSet <span class="token punctuation">&#123;</span>    <span class="token comment">// 遍历daemonset中所有的 container对象，并将所有container对象转换成k8s 中的container资源</span>    <span class="token keyword">var</span> containers <span class="token punctuation">[</span><span class="token punctuation">]</span>corev1<span class="token punctuation">.</span>Container    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> c <span class="token operator">:=</span> <span class="token keyword">range</span> request<span class="token punctuation">.</span>Containers <span class="token punctuation">&#123;</span>        containers <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>containers<span class="token punctuation">,</span> c<span class="token punctuation">.</span><span class="token function">ToK8sContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token function">ToK8sDaemonset</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> containers<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/* * ToK8sDaemonset * @Description: 将用户传入的参数，转换成k8s中的Daemonset对象 * @param request * @param container * @return *appsv1.DaemonSet */</span><span class="token keyword">func</span> <span class="token function">ToK8sDaemonset</span><span class="token punctuation">(</span>request <span class="token operator">*</span>structs<span class="token punctuation">.</span>CreateDaemonSetRequest<span class="token punctuation">,</span> container <span class="token punctuation">[</span><span class="token punctuation">]</span>corev1<span class="token punctuation">.</span>Container<span class="token punctuation">)</span> <span class="token operator">*</span>appsv1<span class="token punctuation">.</span>DaemonSet <span class="token punctuation">&#123;</span>    <span class="token comment">// 将对应的参数传入appsv1.Deployment</span>    <span class="token keyword">return</span> <span class="token operator">&amp;</span>appsv1<span class="token punctuation">.</span>DaemonSet<span class="token punctuation">&#123;</span>        ObjectMeta<span class="token punctuation">:</span> metav1<span class="token punctuation">.</span>ObjectMeta<span class="token punctuation">&#123;</span>            Name<span class="token punctuation">:</span>      request<span class="token punctuation">.</span>DaemonSetName<span class="token punctuation">,</span>            Namespace<span class="token punctuation">:</span> request<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span>            Labels<span class="token punctuation">:</span>    request<span class="token punctuation">.</span>Label<span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        Spec<span class="token punctuation">:</span> appsv1<span class="token punctuation">.</span>DaemonSetSpec<span class="token punctuation">&#123;</span>            Selector<span class="token punctuation">:</span> <span class="token operator">&amp;</span>metav1<span class="token punctuation">.</span>LabelSelector<span class="token punctuation">&#123;</span>                MatchLabels<span class="token punctuation">:</span> request<span class="token punctuation">.</span>Label<span class="token punctuation">,</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            Template<span class="token punctuation">:</span> corev1<span class="token punctuation">.</span>PodTemplateSpec<span class="token punctuation">&#123;</span>                ObjectMeta<span class="token punctuation">:</span> metav1<span class="token punctuation">.</span>ObjectMeta<span class="token punctuation">&#123;</span>                    Name<span class="token punctuation">:</span>      request<span class="token punctuation">.</span>PodName<span class="token punctuation">,</span>                    Namespace<span class="token punctuation">:</span> request<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span>                    Labels<span class="token punctuation">:</span>    request<span class="token punctuation">.</span>Label<span class="token punctuation">,</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                Spec<span class="token punctuation">:</span> corev1<span class="token punctuation">.</span>PodSpec<span class="token punctuation">&#123;</span>                    Containers<span class="token punctuation">:</span> container<span class="token punctuation">,</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>impl&#x2F;config&#x2F;statefulset_config.go</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> config<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"k8s-platform/apps/k8sclient/structs"</span>    appsv1 <span class="token string">"k8s.io/api/apps/v1"</span>    corev1 <span class="token string">"k8s.io/api/core/v1"</span>    metav1 <span class="token string">"k8s.io/apimachinery/pkg/apis/meta/v1"</span><span class="token punctuation">)</span><span class="token comment">/* * NewStatefulsetConfig * @Description:  创建k8s statefulset资源的方法，需要传入创建statefulset的参数 * @param request * @return *appsv1.statefulset */</span><span class="token keyword">func</span> <span class="token function">NewStatefulsetConfig</span><span class="token punctuation">(</span>request <span class="token operator">*</span>structs<span class="token punctuation">.</span>CreateStatefulSetRequest<span class="token punctuation">)</span> <span class="token operator">*</span>appsv1<span class="token punctuation">.</span>StatefulSet <span class="token punctuation">&#123;</span>    <span class="token comment">// 遍历deployment中所有的 container对象，并将所有container对象转换成k8s 中的container资源</span>    <span class="token keyword">var</span> containers <span class="token punctuation">[</span><span class="token punctuation">]</span>corev1<span class="token punctuation">.</span>Container    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> c <span class="token operator">:=</span> <span class="token keyword">range</span> request<span class="token punctuation">.</span>Containers <span class="token punctuation">&#123;</span>        containers <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>containers<span class="token punctuation">,</span> c<span class="token punctuation">.</span><span class="token function">ToK8sContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token function">ToK8sStatefulset</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> containers<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/* * ToK8sStatefulset * @Description:  CreateStatefulSetRequest 转换为k8s statefulset对象 * @receiver c * @param request * @return appsv1.StatefulSet */</span><span class="token keyword">func</span> <span class="token function">ToK8sStatefulset</span><span class="token punctuation">(</span>request <span class="token operator">*</span>structs<span class="token punctuation">.</span>CreateStatefulSetRequest<span class="token punctuation">,</span> container <span class="token punctuation">[</span><span class="token punctuation">]</span>corev1<span class="token punctuation">.</span>Container<span class="token punctuation">)</span> <span class="token operator">*</span>appsv1<span class="token punctuation">.</span>StatefulSet <span class="token punctuation">&#123;</span>    <span class="token comment">// 将对应的参数传入appsv1.Deployment</span>    <span class="token keyword">return</span> <span class="token operator">&amp;</span>appsv1<span class="token punctuation">.</span>StatefulSet<span class="token punctuation">&#123;</span>        ObjectMeta<span class="token punctuation">:</span> metav1<span class="token punctuation">.</span>ObjectMeta<span class="token punctuation">&#123;</span>            Name<span class="token punctuation">:</span>      request<span class="token punctuation">.</span>StatefulSetName<span class="token punctuation">,</span>            Namespace<span class="token punctuation">:</span> request<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span>            Labels<span class="token punctuation">:</span>    request<span class="token punctuation">.</span>Label<span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        Spec<span class="token punctuation">:</span> appsv1<span class="token punctuation">.</span>StatefulSetSpec<span class="token punctuation">&#123;</span>            Selector<span class="token punctuation">:</span> <span class="token operator">&amp;</span>metav1<span class="token punctuation">.</span>LabelSelector<span class="token punctuation">&#123;</span>                MatchLabels<span class="token punctuation">:</span> request<span class="token punctuation">.</span>Label<span class="token punctuation">,</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            Replicas<span class="token punctuation">:</span> request<span class="token punctuation">.</span>Replicas<span class="token punctuation">,</span>            Template<span class="token punctuation">:</span> corev1<span class="token punctuation">.</span>PodTemplateSpec<span class="token punctuation">&#123;</span>                ObjectMeta<span class="token punctuation">:</span> metav1<span class="token punctuation">.</span>ObjectMeta<span class="token punctuation">&#123;</span>                    Name<span class="token punctuation">:</span>      request<span class="token punctuation">.</span>PodName<span class="token punctuation">,</span>                    Namespace<span class="token punctuation">:</span> request<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span>                    Labels<span class="token punctuation">:</span>    request<span class="token punctuation">.</span>Label<span class="token punctuation">,</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                Spec<span class="token punctuation">:</span> corev1<span class="token punctuation">.</span>PodSpec<span class="token punctuation">&#123;</span>                    Containers<span class="token punctuation">:</span> container<span class="token punctuation">,</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="四、实现resetful接口访问"><a href="#四、实现resetful接口访问" class="headerlink" title="四、实现resetful接口访问"></a>四、实现resetful接口访问</h3><h5 id="1、deployment-2"><a href="#1、deployment-2" class="headerlink" title="1、deployment"></a>1、deployment</h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> http<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"fmt"</span>    <span class="token string">"github.com/gin-gonic/gin"</span>    <span class="token string">"k8s-platform/apps/k8sclient"</span>    <span class="token string">"k8s-platform/apps/k8sclient/structs"</span>    <span class="token string">"k8s-platform/config"</span>    <span class="token string">"k8s-platform/ioc"</span>    <span class="token string">"k8s-platform/response"</span>    <span class="token string">"strconv"</span><span class="token punctuation">)</span><span class="token keyword">var</span> DeploymentHttpHandler <span class="token operator">*</span>deploymentHttpHandler <span class="token operator">=</span> <span class="token function">NewdeploymentHttpHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">/* * init * @Description: 将deploymentAPIHandler注入ioc */</span><span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    ioc<span class="token punctuation">.</span><span class="token function">Controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Register</span><span class="token punctuation">(</span>DeploymentHttpHandler<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> <span class="token punctuation">(</span>    deploySvc k8sclient<span class="token punctuation">.</span>DeploymentService<span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">NewdeploymentHttpHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span>deploymentHttpHandler <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token operator">&amp;</span>deploymentHttpHandler<span class="token punctuation">&#123;</span>        svc<span class="token punctuation">:</span> ioc<span class="token punctuation">.</span><span class="token function">Controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetObj</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>DEPLOYMENT_IOCNAME<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span>k8sclient<span class="token punctuation">.</span>DeploymentService<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">type</span> deploymentHttpHandler <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    svc k8sclient<span class="token punctuation">.</span>DeploymentService<span class="token punctuation">&#125;</span><span class="token comment">/* * Init * @Description: 注入ioc后初始化的操作 * @receiver d * @return error */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>deploymentHttpHandler<span class="token punctuation">)</span> <span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span> <span class="token comment">// todo 这里已经获取到了svc</span>    d<span class="token punctuation">.</span>svc <span class="token operator">=</span> ioc<span class="token punctuation">.</span><span class="token function">Controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetObj</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>DEPLOYMENT_IOCNAME<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span>k8sclient<span class="token punctuation">.</span>DeploymentService<span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>svc<span class="token punctuation">,</span> <span class="token string">"http deployment ioc"</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"Init : %p ,%v\n"</span><span class="token punctuation">,</span> d<span class="token punctuation">,</span> d<span class="token punctuation">.</span>svc<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>deploymentHttpHandler<span class="token punctuation">)</span> <span class="token function">Name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> config<span class="token punctuation">.</span>DEPLOYMENT_API<span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>deploymentHttpHandler<span class="token punctuation">)</span> <span class="token function">CreateDeployment</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    data <span class="token operator">:=</span> <span class="token operator">&amp;</span>structs<span class="token punctuation">.</span>CreateDeploymentRequest<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">BindJSON</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        response<span class="token punctuation">.</span><span class="token function">Failure</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> err<span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token string">"================================"</span><span class="token punctuation">)</span>    deployment<span class="token punctuation">,</span> err <span class="token operator">:=</span> d<span class="token punctuation">.</span>svc<span class="token punctuation">.</span><span class="token function">CreateDeployment</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        response<span class="token punctuation">.</span><span class="token function">Failure</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> err<span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    response<span class="token punctuation">.</span><span class="token function">Success</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> deployment<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/* * GetDeploymentList * @Description: 获取deployment列表 * @receiver d * @param c */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>deploymentHttpHandler<span class="token punctuation">)</span> <span class="token function">GetDeploymentList</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    filtername <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"filterName"</span><span class="token punctuation">)</span>    namespace <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"namespace"</span><span class="token punctuation">)</span>    pagesize<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">Atoi</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"page_size"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    pagenumber<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">Atoi</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"page_number"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    data <span class="token operator">:=</span> structs<span class="token punctuation">.</span>GetDeploymentListRequest<span class="token punctuation">&#123;</span>        FilterName<span class="token punctuation">:</span> filtername<span class="token punctuation">,</span>        Namespace<span class="token punctuation">:</span>  namespace<span class="token punctuation">,</span>        DataPagination<span class="token punctuation">:</span> <span class="token operator">&amp;</span>structs<span class="token punctuation">.</span>DataPagination<span class="token punctuation">&#123;</span>            PageSize<span class="token punctuation">:</span>   pagesize<span class="token punctuation">,</span>            PageNumber<span class="token punctuation">:</span> pagenumber<span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>    result<span class="token punctuation">,</span> err <span class="token operator">:=</span> d<span class="token punctuation">.</span>svc<span class="token punctuation">.</span><span class="token function">GetDeploymentList</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        response<span class="token punctuation">.</span><span class="token function">Failure</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> err<span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    response<span class="token punctuation">.</span><span class="token function">Success</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/* * DescribeDeployment * @Description: 查看deployment详情 * @receiver d * @param c */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>deploymentHttpHandler<span class="token punctuation">)</span> <span class="token function">DescribeDeployment</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//namespace := c.Query("namespace")</span>    <span class="token comment">//deploymentName := c.Query("deploymentName")</span>    namespace <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"namespace"</span><span class="token punctuation">)</span>    deploymentName <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"deploymentName"</span><span class="token punctuation">)</span>    data <span class="token operator">:=</span> structs<span class="token punctuation">.</span>DescribeDeploymentsRequest<span class="token punctuation">&#123;</span>        <span class="token operator">&amp;</span>structs<span class="token punctuation">.</span>DataTemplateResponse<span class="token punctuation">&#123;</span>            Namespace<span class="token punctuation">:</span>      namespace<span class="token punctuation">,</span>            DeploymentName<span class="token punctuation">:</span> deploymentName<span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>    result<span class="token punctuation">,</span> err <span class="token operator">:=</span> d<span class="token punctuation">.</span>svc<span class="token punctuation">.</span><span class="token function">DescribeDeployments</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        response<span class="token punctuation">.</span><span class="token function">Failure</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> err<span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    response<span class="token punctuation">.</span><span class="token function">Success</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/* * UpdateDeploymentScale * @Description: 更新deployment副本数 * @receiver d * @param c */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>deploymentHttpHandler<span class="token punctuation">)</span> <span class="token function">UpdateDeploymentScale</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    data <span class="token operator">:=</span> structs<span class="token punctuation">.</span>UpdateDeploymentScaleRequest<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    c<span class="token punctuation">.</span><span class="token function">BindJSON</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>data<span class="token punctuation">)</span>    result<span class="token punctuation">,</span> err <span class="token operator">:=</span> d<span class="token punctuation">.</span>svc<span class="token punctuation">.</span><span class="token function">UpdateDeploymentScale</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        response<span class="token punctuation">.</span><span class="token function">Failure</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> err<span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    response<span class="token punctuation">.</span><span class="token function">Success</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/* * DeleteDeployment * @Description: 删除deployment * @receiver d * @param c */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>deploymentHttpHandler<span class="token punctuation">)</span> <span class="token function">DeleteDeployment</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    data <span class="token operator">:=</span> structs<span class="token punctuation">.</span>DeleteDeploymentRequest<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">BindJSON</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"-----------？？？？？"</span><span class="token punctuation">)</span>        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>        response<span class="token punctuation">.</span><span class="token function">Failure</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> err<span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"————————————————————————————————————————-"</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>    err <span class="token operator">=</span> d<span class="token punctuation">.</span>svc<span class="token punctuation">.</span><span class="token function">DeleteDeployment</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        response<span class="token punctuation">.</span><span class="token function">Failure</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> err<span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    response<span class="token punctuation">.</span><span class="token function">Success</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token string">"删除成功"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/* * RestartDeployment * @Description: 重启deployment * @receiver d * @param c */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>deploymentHttpHandler<span class="token punctuation">)</span> <span class="token function">RestartDeployment</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    data <span class="token operator">:=</span> structs<span class="token punctuation">.</span>RestartDeploymentRequest<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    c<span class="token punctuation">.</span><span class="token function">BindJSON</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>data<span class="token punctuation">)</span>    err <span class="token operator">:=</span> d<span class="token punctuation">.</span>svc<span class="token punctuation">.</span><span class="token function">RestartDeployment</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        response<span class="token punctuation">.</span><span class="token function">Failure</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> err<span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    response<span class="token punctuation">.</span><span class="token function">Success</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token string">"重启成功"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/* * UpdateDeployment * @Description: 更新deployment * @receiver d * @param c */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>deploymentHttpHandler<span class="token punctuation">)</span> <span class="token function">UpdateDeployment</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    data <span class="token operator">:=</span> structs<span class="token punctuation">.</span>UpdateDeploymentRequest<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    c<span class="token punctuation">.</span><span class="token function">BindJSON</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>data<span class="token punctuation">)</span>    result<span class="token punctuation">,</span> err <span class="token operator">:=</span> d<span class="token punctuation">.</span>svc<span class="token punctuation">.</span><span class="token function">UpdateDeployment</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        response<span class="token punctuation">.</span><span class="token function">Failure</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> err<span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    response<span class="token punctuation">.</span><span class="token function">Success</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/* * GetNamespaceDeploymentCount * @Description: 获取每个namespace的deployment数量 * @receiver d * @param c */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>deploymentHttpHandler<span class="token punctuation">)</span> <span class="token function">GetNamespaceDeploymentCount</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    namespace <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"namespace"</span><span class="token punctuation">)</span>    depName <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"deploymentName"</span><span class="token punctuation">)</span>    data <span class="token operator">:=</span> structs<span class="token punctuation">.</span>GetNamespaceDeploymentCountRequest<span class="token punctuation">&#123;</span>        <span class="token operator">&amp;</span>structs<span class="token punctuation">.</span>DataTemplateResponse<span class="token punctuation">&#123;</span>            Namespace<span class="token punctuation">:</span>      namespace<span class="token punctuation">,</span>            DeploymentName<span class="token punctuation">:</span> depName<span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>    result<span class="token punctuation">,</span> err <span class="token operator">:=</span> d<span class="token punctuation">.</span>svc<span class="token punctuation">.</span><span class="token function">GetNamespaceDeploymentCount</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        response<span class="token punctuation">.</span><span class="token function">Failure</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> err<span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    response<span class="token punctuation">.</span><span class="token function">Success</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2、daemonset-2"><a href="#2、daemonset-2" class="headerlink" title="2、daemonset"></a>2、daemonset</h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> http<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"fmt"</span>    <span class="token string">"github.com/gin-gonic/gin"</span>    <span class="token string">"k8s-platform/apps/k8sclient"</span>    <span class="token string">"k8s-platform/apps/k8sclient/structs"</span>    <span class="token string">"k8s-platform/config"</span>    <span class="token string">"k8s-platform/ioc"</span>    <span class="token string">"k8s-platform/response"</span>    <span class="token string">"strconv"</span><span class="token punctuation">)</span><span class="token keyword">var</span> DaemonsetHttpHandler <span class="token operator">*</span>daemonsetHttpHandler <span class="token operator">=</span> <span class="token function">NewdaemonsetHttpHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">/* * init * @Description: 将deploymentAPIHandler注入ioc */</span><span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    ioc<span class="token punctuation">.</span><span class="token function">Controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Register</span><span class="token punctuation">(</span>DaemonsetHttpHandler<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> <span class="token punctuation">(</span>    daemonsetSvc k8sclient<span class="token punctuation">.</span>DaemonSetService<span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">NewdaemonsetHttpHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span>daemonsetHttpHandler <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token operator">&amp;</span>daemonsetHttpHandler<span class="token punctuation">&#123;</span>        svc<span class="token punctuation">:</span> ioc<span class="token punctuation">.</span><span class="token function">Controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetObj</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>DAEMONSET_IOCNAME<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span>k8sclient<span class="token punctuation">.</span>DaemonSetService<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">type</span> daemonsetHttpHandler <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    svc k8sclient<span class="token punctuation">.</span>DaemonSetService<span class="token punctuation">&#125;</span><span class="token comment">/* * Init * @Description: 注入ioc后初始化的操作 * @receiver d * @return error */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>daemonsetHttpHandler<span class="token punctuation">)</span> <span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span> <span class="token comment">// todo 这里已经获取到了svc</span>    d<span class="token punctuation">.</span>svc <span class="token operator">=</span> ioc<span class="token punctuation">.</span><span class="token function">Controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetObj</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>DAEMONSET_IOCNAME<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span>k8sclient<span class="token punctuation">.</span>DaemonSetService<span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"Init : %p ,%v\n"</span><span class="token punctuation">,</span> d<span class="token punctuation">,</span> d<span class="token punctuation">.</span>svc<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>daemonsetHttpHandler<span class="token punctuation">)</span> <span class="token function">Name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> config<span class="token punctuation">.</span>DAMONSET_API<span class="token punctuation">&#125;</span><span class="token comment">/* * GetDeploymentList * @Description: 获取daemonset列表的handler函数 * @receiver d * @param c */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>daemonsetHttpHandler<span class="token punctuation">)</span> <span class="token function">GetDaemonSetList</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    filtername <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"filterName"</span><span class="token punctuation">)</span>    namespace <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"namespace"</span><span class="token punctuation">)</span>    pagesize<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">Atoi</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"page_size"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    pagenumber<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">Atoi</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"page_number"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    data <span class="token operator">:=</span> structs<span class="token punctuation">.</span>GetDaemonSetListRequest<span class="token punctuation">&#123;</span>        FilterName<span class="token punctuation">:</span> filtername<span class="token punctuation">,</span>        Namespace<span class="token punctuation">:</span>  namespace<span class="token punctuation">,</span>        DataPagination<span class="token punctuation">:</span> <span class="token operator">&amp;</span>structs<span class="token punctuation">.</span>DataPagination<span class="token punctuation">&#123;</span>            PageSize<span class="token punctuation">:</span>   pagesize<span class="token punctuation">,</span>            PageNumber<span class="token punctuation">:</span> pagenumber<span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>    result<span class="token punctuation">,</span> err <span class="token operator">:=</span> d<span class="token punctuation">.</span>svc<span class="token punctuation">.</span><span class="token function">GetDaemonSetList</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        response<span class="token punctuation">.</span><span class="token function">Failure</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> err<span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    response<span class="token punctuation">.</span><span class="token function">Success</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/* * DescribeDaemonSet * @Description: 获取daemonset详情的handler函数 * @receiver d * @param c */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>daemonsetHttpHandler<span class="token punctuation">)</span> <span class="token function">DescribeDaemonSet</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    namespace <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"namespace"</span><span class="token punctuation">)</span>    daemonSetName <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"daemonSetName"</span><span class="token punctuation">)</span>    data <span class="token operator">:=</span> structs<span class="token punctuation">.</span>DescribeDaemonSet<span class="token punctuation">&#123;</span>        <span class="token operator">&amp;</span>structs<span class="token punctuation">.</span>DaemonSetTemplate<span class="token punctuation">&#123;</span>            Namespace<span class="token punctuation">:</span>     namespace<span class="token punctuation">,</span>            DaemonSetName<span class="token punctuation">:</span> daemonSetName<span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>    result<span class="token punctuation">,</span> err <span class="token operator">:=</span> d<span class="token punctuation">.</span>svc<span class="token punctuation">.</span><span class="token function">DescribeDaemonSet</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        response<span class="token punctuation">.</span><span class="token function">Failure</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> err<span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    response<span class="token punctuation">.</span><span class="token function">Success</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/* * DeleteDaemonSet * @Description: 删除daemonset的handler函数 * @receiver d * @param c */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>daemonsetHttpHandler<span class="token punctuation">)</span> <span class="token function">DeleteDaemonSet</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    data <span class="token operator">:=</span> structs<span class="token punctuation">.</span>DeleteDaemonSet<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    c<span class="token punctuation">.</span><span class="token function">BindJSON</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>data<span class="token punctuation">)</span>    err <span class="token operator">:=</span> d<span class="token punctuation">.</span>svc<span class="token punctuation">.</span><span class="token function">DeleteDaemonSet</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        response<span class="token punctuation">.</span><span class="token function">Failure</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> err<span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    response<span class="token punctuation">.</span><span class="token function">Success</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token string">"删除成功"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/* * UpdateDaemonSet * @Description: 更新daemonset的handler函数 * @receiver d * @param c */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>daemonsetHttpHandler<span class="token punctuation">)</span> <span class="token function">UpdateDaemonSet</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    data <span class="token operator">:=</span> structs<span class="token punctuation">.</span>UpdateDaemonSet<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    c<span class="token punctuation">.</span><span class="token function">BindJSON</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>data<span class="token punctuation">)</span>    result<span class="token punctuation">,</span> err <span class="token operator">:=</span> d<span class="token punctuation">.</span>svc<span class="token punctuation">.</span><span class="token function">UpdateDaemonSet</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        response<span class="token punctuation">.</span><span class="token function">Failure</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> err<span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    response<span class="token punctuation">.</span><span class="token function">Success</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/* * CreateDaemonSet * @Description: 创建daemonset的handler函数 * @receiver d * @param c */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>daemonsetHttpHandler<span class="token punctuation">)</span> <span class="token function">CreateDaemonSet</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    data <span class="token operator">:=</span> structs<span class="token punctuation">.</span>CreateDaemonSetRequest<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    c<span class="token punctuation">.</span><span class="token function">BindJSON</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>data<span class="token punctuation">)</span>    result<span class="token punctuation">,</span> err <span class="token operator">:=</span> d<span class="token punctuation">.</span>svc<span class="token punctuation">.</span><span class="token function">CreateDaemonSet</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        response<span class="token punctuation">.</span><span class="token function">Failure</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> err<span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    response<span class="token punctuation">.</span><span class="token function">Success</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3、statefulset-2"><a href="#3、statefulset-2" class="headerlink" title="3、statefulset"></a>3、statefulset</h3><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> http<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"fmt"</span>    <span class="token string">"github.com/gin-gonic/gin"</span>    <span class="token string">"k8s-platform/apps/k8sclient"</span>    <span class="token string">"k8s-platform/apps/k8sclient/structs"</span>    <span class="token string">"k8s-platform/config"</span>    <span class="token string">"k8s-platform/ioc"</span>    <span class="token string">"k8s-platform/response"</span>    <span class="token string">"strconv"</span><span class="token punctuation">)</span><span class="token keyword">var</span> StatefulSetHttpHandler <span class="token operator">*</span>statefulsetHttpHandler <span class="token operator">=</span> <span class="token function">NewstatefulsetHttpHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">/* * init * @Description: 将StatefulSetHttpHandler注入ioc */</span><span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    ioc<span class="token punctuation">.</span><span class="token function">Controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Register</span><span class="token punctuation">(</span>StatefulSetHttpHandler<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">NewstatefulsetHttpHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span>statefulsetHttpHandler <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token operator">&amp;</span>statefulsetHttpHandler<span class="token punctuation">&#123;</span>        svc<span class="token punctuation">:</span> ioc<span class="token punctuation">.</span><span class="token function">Controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetObj</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>STATEFULSET_IOCNAME<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span>k8sclient<span class="token punctuation">.</span>StatefulSetService<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">type</span> statefulsetHttpHandler <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    svc k8sclient<span class="token punctuation">.</span>StatefulSetService<span class="token punctuation">&#125;</span><span class="token comment">/* * Init * @Description: 注入ioc后初始化的操作 * @receiver d * @return error */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>statefulsetHttpHandler<span class="token punctuation">)</span> <span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span> <span class="token comment">// todo 这里已经获取到了svc</span>    d<span class="token punctuation">.</span>svc <span class="token operator">=</span> ioc<span class="token punctuation">.</span><span class="token function">Controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetObj</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>STATEFULSET_IOCNAME<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span>k8sclient<span class="token punctuation">.</span>StatefulSetService<span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>svc<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>statefulsetHttpHandler<span class="token punctuation">)</span> <span class="token function">Name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> config<span class="token punctuation">.</span>STATEFULSET_API<span class="token punctuation">&#125;</span><span class="token comment">/* * GetDeploymentList * @Description: 获取statefulset列表 * @receiver d * @param c */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>statefulsetHttpHandler<span class="token punctuation">)</span> <span class="token function">GetStatefulSetList</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    size<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">Atoi</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"page_size"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    number<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">Atoi</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"page_number"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    data <span class="token operator">:=</span> structs<span class="token punctuation">.</span>GetStatefulSetListRequest<span class="token punctuation">&#123;</span>        FilterName<span class="token punctuation">:</span> c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"filterName"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        Namespace<span class="token punctuation">:</span>  c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"namespace"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        DataPagination<span class="token punctuation">:</span> <span class="token operator">&amp;</span>structs<span class="token punctuation">.</span>DataPagination<span class="token punctuation">&#123;</span>            PageSize<span class="token punctuation">:</span>   size<span class="token punctuation">,</span>            PageNumber<span class="token punctuation">:</span> number<span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>    result<span class="token punctuation">,</span> err <span class="token operator">:=</span> d<span class="token punctuation">.</span>svc<span class="token punctuation">.</span><span class="token function">GetStatefulSetList</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        response<span class="token punctuation">.</span><span class="token function">Failure</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> err<span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    response<span class="token punctuation">.</span><span class="token function">Success</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>statefulsetHttpHandler<span class="token punctuation">)</span> <span class="token function">DescribeStatefulSet</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    data <span class="token operator">:=</span> structs<span class="token punctuation">.</span>DescribeStatefulSet<span class="token punctuation">&#123;</span>        <span class="token operator">&amp;</span>structs<span class="token punctuation">.</span>StatefulSetTemplate<span class="token punctuation">&#123;</span>            Namespace<span class="token punctuation">:</span>       c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"namespace"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            StatefulSetName<span class="token punctuation">:</span> c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"statefulset_name"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>    result<span class="token punctuation">,</span> err <span class="token operator">:=</span> d<span class="token punctuation">.</span>svc<span class="token punctuation">.</span><span class="token function">DescribeStatefulSet</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        response<span class="token punctuation">.</span><span class="token function">Failure</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> err<span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    response<span class="token punctuation">.</span><span class="token function">Success</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>statefulsetHttpHandler<span class="token punctuation">)</span> <span class="token function">DeleteStatefulset</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    data <span class="token operator">:=</span> structs<span class="token punctuation">.</span>DeleteStatefulSet<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    c<span class="token punctuation">.</span><span class="token function">BindJSON</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>data<span class="token punctuation">)</span>    err <span class="token operator">:=</span> d<span class="token punctuation">.</span>svc<span class="token punctuation">.</span><span class="token function">DeleteStatefulSet</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        response<span class="token punctuation">.</span><span class="token function">Failure</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> err<span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    response<span class="token punctuation">.</span><span class="token function">Success</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token string">"删除成功"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>statefulsetHttpHandler<span class="token punctuation">)</span> <span class="token function">UpdateStatefulSet</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    data <span class="token operator">:=</span> structs<span class="token punctuation">.</span>UpdateStatefulSet<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    c<span class="token punctuation">.</span><span class="token function">BindJSON</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>data<span class="token punctuation">)</span>    result<span class="token punctuation">,</span> err <span class="token operator">:=</span> d<span class="token punctuation">.</span>svc<span class="token punctuation">.</span><span class="token function">UpdateStatefulSet</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        response<span class="token punctuation">.</span><span class="token function">Failure</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> err<span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    response<span class="token punctuation">.</span><span class="token function">Success</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>statefulsetHttpHandler<span class="token punctuation">)</span> <span class="token function">CreateStatefulset</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    data <span class="token operator">:=</span> <span class="token operator">&amp;</span>structs<span class="token punctuation">.</span>CreateStatefulSetRequest<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">BindJSON</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        response<span class="token punctuation">.</span><span class="token function">Failure</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> err<span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token string">"================================"</span><span class="token punctuation">)</span>    deployment<span class="token punctuation">,</span> err <span class="token operator">:=</span> d<span class="token punctuation">.</span>svc<span class="token punctuation">.</span><span class="token function">CreateStatefulSet</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        response<span class="token punctuation">.</span><span class="token function">Failure</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> err<span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    response<span class="token punctuation">.</span><span class="token function">Success</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> deployment<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>cell&#x2F;deploymentCell.go</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> cell<span class="token keyword">import</span> <span class="token punctuation">(</span>    appsv1 <span class="token string">"k8s.io/api/apps/v1"</span>    <span class="token string">"time"</span><span class="token punctuation">)</span><span class="token comment">//  实现DataMeta接口</span><span class="token keyword">type</span> DeploymentCell appsv1<span class="token punctuation">.</span>Deployment<span class="token keyword">func</span> <span class="token punctuation">(</span>d DeploymentCell<span class="token punctuation">)</span> <span class="token function">GetName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> d<span class="token punctuation">.</span>Name<span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d DeploymentCell<span class="token punctuation">)</span> <span class="token function">GetCreateAt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> time<span class="token punctuation">.</span>Time <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> d<span class="token punctuation">.</span>CreationTimestamp<span class="token punctuation">.</span>Time<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>cell&#x2F;statefulsetCell.go</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> cell<span class="token keyword">import</span> <span class="token punctuation">(</span>    appsv1 <span class="token string">"k8s.io/api/apps/v1"</span>    <span class="token string">"time"</span><span class="token punctuation">)</span><span class="token comment">//  实现DataMeta接口</span><span class="token keyword">type</span> StatefulsetCell appsv1<span class="token punctuation">.</span>StatefulSet<span class="token keyword">func</span> <span class="token punctuation">(</span>d StatefulsetCell<span class="token punctuation">)</span> <span class="token function">GetName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> d<span class="token punctuation">.</span>Name<span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d StatefulsetCell<span class="token punctuation">)</span> <span class="token function">GetCreateAt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> time<span class="token punctuation">.</span>Time <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> d<span class="token punctuation">.</span>CreationTimestamp<span class="token punctuation">.</span>Time<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>cell&#x2F;daemonsetCell.go</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> cell<span class="token keyword">import</span> <span class="token punctuation">(</span>    appsv1 <span class="token string">"k8s.io/api/apps/v1"</span>    <span class="token string">"time"</span><span class="token punctuation">)</span><span class="token keyword">type</span> DaemonSetCell appsv1<span class="token punctuation">.</span>DaemonSet<span class="token comment">/* * GetName * @Description: 获取k8s中的daemonset对象名 * @receiver p * @return string */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d DaemonSetCell<span class="token punctuation">)</span> <span class="token function">GetName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> d<span class="token punctuation">.</span>Name<span class="token punctuation">&#125;</span><span class="token comment">/* * GetCreateAt * @Description: 获取k8s中的daemonset对象创建时间 * @receiver p * @return time.Time */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>d DaemonSetCell<span class="token punctuation">)</span> <span class="token function">GetCreateAt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> time<span class="token punctuation">.</span>Time <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> d<span class="token punctuation">.</span>CreationTimestamp<span class="token punctuation">.</span>Time<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;kubernetes-platform后端开发-workload&quot;&gt;&lt;a href=&quot;#kubernetes-platform后端开发-workload&quot; class=&quot;headerlink&quot; title=&quot;kubernetes platform后端开发-work</summary>
      
    
    
    
    <category term="kubernetes" scheme="http://dycloud.fun/categories/kubernetes/"/>
    
    
    <category term="kubernetes" scheme="http://dycloud.fun/tags/kubernetes/"/>
    
    <category term="云原生" scheme="http://dycloud.fun/tags/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes platform后端开发-项目初始</title>
    <link href="http://dycloud.fun/2024/02/22/kubernetes%20platform%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91-%E9%A1%B9%E7%9B%AE%E5%88%9D%E5%A7%8B/"/>
    <id>http://dycloud.fun/2024/02/22/kubernetes%20platform%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91-%E9%A1%B9%E7%9B%AE%E5%88%9D%E5%A7%8B/</id>
    <published>2024-02-22T06:32:00.000Z</published>
    <updated>2024-04-07T08:52:35.083Z</updated>
    
    <content type="html"><![CDATA[<h1 id="kubernetes-platform后端开发-项目初始"><a href="#kubernetes-platform后端开发-项目初始" class="headerlink" title="kubernetes platform后端开发-项目初始"></a>kubernetes platform后端开发-项目初始</h1><h3 id="一、项目介绍"><a href="#一、项目介绍" class="headerlink" title="一、项目介绍"></a>一、项目介绍</h3><p>项目简介：Kubernetes Platform 是一个基于 Go 语言开发的 Kubernetes 集群管理平台，利用 Kubernetes 官方提供的 client-go 库进行构建。该平台旨在简化 Kubernetes 集群的日常操作和管理工作，提供一个友好的用户界面，使得用户无需直接与 kubectl 或 Kubernetes API 交互，即可执行各种集群管理任务。</p><h5 id="核心特征："><a href="#核心特征：" class="headerlink" title="核心特征："></a>核心特征：</h5><ul><li>集群概览：提供集群的实时状态显示，包括节点、Pods、服务等关键信息。</li><li>资源管理：允许用户创建、更新、删除和查看各种 Kubernetes 资源，例如部署、服务、配置映射等。</li><li>日志查看：提供集群日志的检索和查看功能，帮助用户快速定位问题。</li><li>监控与警告：集成监控工具，展示集群性能指标，并在出现潜在问题时提供警告通知。</li><li>权限控制：支持 Kubernetes 的 RBAC，确保用户根据其角色访问和管理相应的资源。（未完成）</li><li>多集群支持：可以同时管理和切换多个 Kubernetes 集群，适用于跨区域或多云环境。</li><li>插件化架构：方便扩展新功能，用户可以根据需求定制和扩展平台。</li></ul><h5 id="技术栈："><a href="#技术栈：" class="headerlink" title="技术栈："></a>技术栈：</h5><ul><li>Go语言：使用 Go 语言进行开发，确保了代码的高性能和高并发处理能力。</li><li>client-go：Kubernetes 官方的 Go 客户端库，用于与 Kubernetes API 服务器进行交互。</li><li>前端框架：Vue3、ElementUIPlus。</li><li>数据库：Mysql</li><li>容器化与编排：（如Docker和Kubernetes，用于部署和运行管理平台）</li></ul><h5 id="部署环境"><a href="#部署环境" class="headerlink" title="部署环境"></a>部署环境</h5><ul><li>Golang3.6+</li><li>Mysql8.0</li></ul><p>mysql数据导入：db&#x2F;create.sql</p><p>默认密码：admin&#x2F;123456</p><p><img src="/images/hou1.png" alt="image"></p><p><img src="/images/hou2.png" alt="image"></p><h3 id="二、项目目录"><a href="#二、项目目录" class="headerlink" title="二、项目目录"></a>二、项目目录</h3><p><img src="/images/hou3.png" alt="image"></p><ul><li>apps：业务处理层</li><li>config：加载配置文件</li><li>db：初始化数据库的脚本</li><li>docs：项目文档</li><li>etc：项目需要的配置</li><li>exception：异常处理</li><li>ioc：使用ioc注册解决对象依赖问题</li><li>middle：中间件</li><li>response：响应统一处理</li><li>router：后端路由</li><li>test：单元测试</li><li>utils：自实现类</li></ul><h3 id="三、ioc注册容器"><a href="#三、ioc注册容器" class="headerlink" title="三、ioc注册容器"></a>三、ioc注册容器</h3><p>ioc&#x2F;iocStore.go</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> ioc<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"fmt"</span><span class="token punctuation">)</span><span class="token keyword">type</span> IocContainer <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    store <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span>IocObject<span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>IocContainer<span class="token punctuation">)</span> <span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>store<span class="token punctuation">)</span>    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> obj <span class="token operator">:=</span> <span class="token keyword">range</span> c<span class="token punctuation">.</span>store <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> err <span class="token operator">:=</span> obj<span class="token punctuation">.</span><span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> err        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>IocContainer<span class="token punctuation">)</span> <span class="token function">Register</span><span class="token punctuation">(</span>obj IocObject<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">Name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    c<span class="token punctuation">.</span>store<span class="token punctuation">[</span>obj<span class="token punctuation">.</span><span class="token function">Name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>IocContainer<span class="token punctuation">)</span> <span class="token function">GetObj</span><span class="token punctuation">(</span>name <span class="token builtin">string</span><span class="token punctuation">)</span> IocObject <span class="token punctuation">&#123;</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>store<span class="token punctuation">)</span>    <span class="token keyword">return</span> c<span class="token punctuation">.</span>store<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ioc&#x2F;interface.go</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> ioc<span class="token keyword">type</span> IocObject <span class="token keyword">interface</span> <span class="token punctuation">&#123;</span>    <span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span>    <span class="token function">Name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ioc&#x2F;controller.go</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> ioc<span class="token keyword">func</span> <span class="token function">Controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span>IocContainer <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> controllerContainer<span class="token punctuation">&#125;</span><span class="token keyword">var</span> controllerContainer <span class="token operator">=</span> <span class="token operator">&amp;</span>IocContainer<span class="token punctuation">&#123;</span>    store<span class="token punctuation">:</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span>IocObject<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ioc&#x2F;api.go</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> ioc<span class="token keyword">func</span> <span class="token function">ApiHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span>IocContainer <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> ApiHandlerContainer<span class="token punctuation">&#125;</span><span class="token keyword">var</span> ApiHandlerContainer <span class="token operator">=</span> <span class="token operator">&amp;</span>IocContainer<span class="token punctuation">&#123;</span>    store<span class="token punctuation">:</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span>IocObject<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="四、异常处理"><a href="#四、异常处理" class="headerlink" title="四、异常处理"></a>四、异常处理</h3><p>exception&#x2F;exception.go</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> exception<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"fmt"</span>    <span class="token string">"net/http"</span><span class="token punctuation">)</span><span class="token comment">//</span><span class="token comment">//  APIException</span><span class="token comment">//  @Description: 业务自定义异常</span><span class="token comment">//</span><span class="token keyword">type</span> APIException <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    Code     <span class="token builtin">int</span>    <span class="token string">`json:"code"`</span>    Message  <span class="token builtin">string</span> <span class="token string">`json:"message"`</span>    Data     any    <span class="token string">`json:"data"`</span>    HttpCode <span class="token builtin">int</span>    <span class="token string">`json:"http_code"`</span><span class="token punctuation">&#125;</span><span class="token comment">/* * Error * @Description: 实现error接口 * @receiver e * @return string */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>e <span class="token operator">*</span>APIException<span class="token punctuation">)</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> e<span class="token punctuation">.</span>Message<span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span>code <span class="token builtin">int</span><span class="token punctuation">,</span> format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token operator">&amp;</span>APIException<span class="token punctuation">&#123;</span>        Code<span class="token punctuation">:</span>     code<span class="token punctuation">,</span>        Message<span class="token punctuation">:</span>  fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span>format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        HttpCode<span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>exception&#x2F;business.go</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> exception<span class="token comment">/* * NewJsonMarshalFailed * @Description: Json反序列化失败异常，异常码500 * @param format * @param a * @return *APIException */</span><span class="token keyword">func</span> <span class="token function">NewJsonMarshalFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/* * NewUpdatePodsFailed * @Description:  更新pod信息失败，异常码501 * @param format * @param a * @return *APIException */</span><span class="token keyword">func</span> <span class="token function">NewUpdatePodsFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">501</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/* * NewGetContainersFailed * @Description: 获取容器信息失败，异常码502 * @param format * @param a * @return *APIException */</span><span class="token keyword">func</span> <span class="token function">NewGetContainersFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">502</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/* * NewGetPodLogsFailed * @Description: 获取pod日志失败，异常码503 * @param format * @param a * @return *APIException */</span><span class="token keyword">func</span> <span class="token function">NewGetPodLogsFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">503</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/* * NewGetPodListFailed * @Description: 获取pod列表失败，异常码504 * @param format * @param a * @return *APIException */</span><span class="token keyword">func</span> <span class="token function">NewGetPodListFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">504</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/* * NewGetPaginateFailed * @Description: 获取分页数据失败，异常码505 * @param format * @param a * @return *APIException */</span><span class="token keyword">func</span> <span class="token function">NewGetPaginateFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">505</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/* * NewDescribePodFailed * @Description: 获取pod详细信息失败，异常码506 * @param format * @param a * @return *APIException */</span><span class="token keyword">func</span> <span class="token function">NewDescribePodFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">506</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/* * NewDeletePodFailed * @Description: 删除pod失败，异常码507 * @param format * @param a * @return *APIException */</span><span class="token keyword">func</span> <span class="token function">NewDeletePodFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">507</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">NewGetNamespacePodsCountFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">508</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">CreateDeploymentListFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">499</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">GetDeploymentListFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">509</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">DescribeDeploymentFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">510</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">GetDeploymentScaleFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">511</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">UpdateDeploymentScaleFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">DeleteDeploymentFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">513</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">UpdateDeploymentFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">514</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">JsonUmarshalFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">515</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">GetDaemonSetListFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">516</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">DescribeDaemonSetFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">517</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">DeleteDaemonSetFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">518</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">UpdateDaemonSetFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">519</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">CreateDaemonSetFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">520</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">CreateStatefulSetFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">521</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">GetStatefulSetListFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">522</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">DescribeStatefulSetFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">523</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">DeleteStatefulSetFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">524</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">UpdateStatefulSetFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">525</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">GetNodeListFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">526</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">DescribeNodeListFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">527</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">InvalidParameter</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">528</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">GetNamespaceFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">529</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">DescribeNamespaceFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">530</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">DeleteNamespaceFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">531</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">CreateNamespaceFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">532</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">CreatePVFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">533</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">DeletePVFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">534</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">GetPVListFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">535</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">DescribePVFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">536</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">DescribeSVCFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">537</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">GetSVCListFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">538</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">DeleteSVCFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">539</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">CreateSVCFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">540</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">UpdateSVCFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">541</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">DescribeIngressFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">542</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">GetIngressListFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">543</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">DeleteIngressFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">544</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">CreateIngressFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">545</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">UpdateIngressFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">546</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">GetConfigmapListFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">547</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">DescribeConfigmapListFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">548</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">UpdateConfigmapFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">549</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">DeleteConfigmapFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">550</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">CreateConfigmapFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">551</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">GetSecretListFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">552</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">DescribeSecretListFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">553</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">UpdateSecretFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">554</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">DeleteSecretFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">555</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">CreateSecretFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">556</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">GetPVCListFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">557</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">DescribePVCFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">558</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">UpdatePVCFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">559</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">DeletePVCFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">560</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">CreatePVCFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">561</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">CreateWorkFlowFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">562</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">DeleteWorkFlowFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">563</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">ValidateFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">564</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">CreateUserFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">565</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">DescribeUserFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">566</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">DeleteUserFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">567</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">UpdateUserFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">568</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">GetUserListFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">569</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">GetUserGroupListFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">570</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">DescribeUserGroupListFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">570</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">DeleteUserGroupFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">571</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">FindPermissionsFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">572</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">DeleteUserToGroupFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">573</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">DescribeUserToGroupFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">574</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">SignTokenFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">575</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">TokenValidationFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">576</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">CheckPasswordFailed</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span>any<span class="token punctuation">)</span> <span class="token operator">*</span>APIException <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">NewApiException</span><span class="token punctuation">(</span><span class="token number">577</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> a<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="五、加载config文件，获取client-set实例"><a href="#五、加载config文件，获取client-set实例" class="headerlink" title="五、加载config文件，获取client-set实例"></a>五、加载config文件，获取client-set实例</h3><p>apps&#x2F;k8sclient&#x2F;client.go</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> k8sclient<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"fmt"</span>    <span class="token string">"k8s-platform/config"</span>    <span class="token string">"k8s-platform/ioc"</span>    <span class="token string">"k8s.io/client-go/kubernetes"</span>    <span class="token string">"k8s.io/client-go/tools/clientcmd"</span>    <span class="token string">"os"</span><span class="token punctuation">)</span><span class="token comment">//</span><span class="token comment">//  k8sClient</span><span class="token comment">//  @Description:  k8sclient结构体包含了kubernetes.Clientset,这是与k8s API通信的主要方式</span><span class="token comment">//</span><span class="token keyword">type</span> K8sClient <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    ClientSet <span class="token operator">*</span>kubernetes<span class="token punctuation">.</span>Clientset<span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    ioc<span class="token punctuation">.</span><span class="token function">Controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Register</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>K8sClient<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/* * NewK8sClient * @Description:  构造函数返回 * @return *k8sClient */</span><span class="token keyword">func</span> <span class="token function">NewK8sClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span>K8sClient <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token operator">&amp;</span>K8sClient<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/* * Init * @Description: Init方法初始化k8sclient 实例，它会设置客户端与kubetnetes集群通信所需的全部配置 * @receiver c */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>K8sClient<span class="token punctuation">)</span> <span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span>    homeDir<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">UserHomeDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 获取当前用户的 home 目录</span>    <span class="token comment">// 使用clientcmd 构建配置。涉及到读取kubeconfig文件并处理覆盖和默认值</span>    restConf<span class="token punctuation">,</span> err <span class="token operator">:=</span> clientcmd<span class="token punctuation">.</span><span class="token function">BuildConfigFromFlags</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> homeDir<span class="token operator">+</span><span class="token string">"/"</span><span class="token operator">+</span>config<span class="token punctuation">.</span>KUBE_CONFIG<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//log.Fatal(err)</span>        <span class="token keyword">return</span> err    <span class="token punctuation">&#125;</span>    <span class="token comment">// 通过之前构建的配置创建Clientset，它提供了对API的访问</span>    clientset<span class="token punctuation">,</span> err <span class="token operator">:=</span> kubernetes<span class="token punctuation">.</span><span class="token function">NewForConfig</span><span class="token punctuation">(</span>restConf<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//log.Panic(err)</span>        <span class="token keyword">return</span> err    <span class="token punctuation">&#125;</span>    c<span class="token punctuation">.</span>ClientSet <span class="token operator">=</span> clientset    aa <span class="token operator">:=</span> ioc<span class="token punctuation">.</span><span class="token function">Controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetObj</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>IOC_KUBECLIENT<span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>aa<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>K8sClient<span class="token punctuation">)</span> <span class="token function">Name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> config<span class="token punctuation">.</span>IOC_KUBECLIENT<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="六、路由配置"><a href="#六、路由配置" class="headerlink" title="六、路由配置"></a>六、路由配置</h3><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> router<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"github.com/gin-gonic/gin"</span>    <span class="token string">"k8s-platform/apps/k8sclient/http"</span>    http2 <span class="token string">"k8s-platform/apps/user/http"</span>    http3 <span class="token string">"k8s-platform/apps/workflow/http"</span>    <span class="token string">"k8s-platform/config"</span>    <span class="token string">"k8s-platform/ioc"</span>    <span class="token string">"k8s-platform/middle"</span><span class="token punctuation">)</span><span class="token comment">//</span><span class="token comment">//  GinRouter</span><span class="token comment">//  @Description: 初始化Gin</span><span class="token comment">//</span><span class="token keyword">type</span> GinRouter <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">NewRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span>GinRouter <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token operator">&amp;</span>GinRouter<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    ioc<span class="token punctuation">.</span><span class="token function">ApiHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Register</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>GinRouter<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>GinRouter<span class="token punctuation">)</span> <span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>GinRouter<span class="token punctuation">)</span> <span class="token function">Name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> config<span class="token punctuation">.</span>APIHANDLER_IOCNAME<span class="token punctuation">&#125;</span><span class="token comment">/* * InitApiHandler * @Description: API Handler函数 * @receiver r * @param router */</span><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>GinRouter<span class="token punctuation">)</span> <span class="token function">InitApiHandler</span><span class="token punctuation">(</span>router <span class="token operator">*</span>gin<span class="token punctuation">.</span>Engine<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    router<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span>middle<span class="token punctuation">.</span><span class="token function">Cors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    api <span class="token operator">:=</span> router<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">"/api/v1/kubernetes"</span><span class="token punctuation">)</span>    api<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span>middle<span class="token punctuation">.</span><span class="token function">JWTMiddleware</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        pods <span class="token operator">:=</span> api<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">"/pods"</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            pods<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>PodHttpHandler<span class="token punctuation">.</span>GetPodListHandler<span class="token punctuation">)</span>            pods<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/detail"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>PodHttpHandler<span class="token punctuation">.</span>DescribePod<span class="token punctuation">)</span>            pods<span class="token punctuation">.</span><span class="token function">DELETE</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>PodHttpHandler<span class="token punctuation">.</span>DeletePod<span class="token punctuation">)</span>            pods<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/container"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>PodHttpHandler<span class="token punctuation">.</span>GetContainerInfo<span class="token punctuation">)</span>            pods<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/logs"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>PodHttpHandler<span class="token punctuation">.</span>GetPodLogs<span class="token punctuation">)</span>            pods<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/numnp"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>PodHttpHandler<span class="token punctuation">.</span>GetNamespacePodsCount<span class="token punctuation">)</span>            pods<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/deployForPod"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>PodHttpHandler<span class="token punctuation">.</span>GetPodsListByDeployment<span class="token punctuation">)</span>            pods<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/daemonsetForPod"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>PodHttpHandler<span class="token punctuation">.</span>GetPodsListByDaemonset<span class="token punctuation">)</span>            pods<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/statefulForPod"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>PodHttpHandler<span class="token punctuation">.</span>GetPodsListByStatefulset<span class="token punctuation">)</span>            pods<span class="token punctuation">.</span><span class="token function">PUT</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>PodHttpHandler<span class="token punctuation">.</span>UpdatePod<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        deployments <span class="token operator">:=</span> api<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">"/deployments"</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            deployments<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>DeploymentHttpHandler<span class="token punctuation">.</span>GetDeploymentList<span class="token punctuation">)</span>            deployments<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/detail"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>DeploymentHttpHandler<span class="token punctuation">.</span>DescribeDeployment<span class="token punctuation">)</span>            deployments<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/scale"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>DeploymentHttpHandler<span class="token punctuation">.</span>UpdateDeploymentScale<span class="token punctuation">)</span>            deployments<span class="token punctuation">.</span><span class="token function">DELETE</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>DeploymentHttpHandler<span class="token punctuation">.</span>DeleteDeployment<span class="token punctuation">)</span>            deployments<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/restart"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>DeploymentHttpHandler<span class="token punctuation">.</span>RestartDeployment<span class="token punctuation">)</span>            deployments<span class="token punctuation">.</span><span class="token function">PUT</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>DeploymentHttpHandler<span class="token punctuation">.</span>UpdateDeployment<span class="token punctuation">)</span>            deployments<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/numdp"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>DeploymentHttpHandler<span class="token punctuation">.</span>GetNamespaceDeploymentCount<span class="token punctuation">)</span>            deployments<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>DeploymentHttpHandler<span class="token punctuation">.</span>CreateDeployment<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        daemonsets <span class="token operator">:=</span> api<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">"/daemonsets"</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            daemonsets<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>DaemonsetHttpHandler<span class="token punctuation">.</span>GetDaemonSetList<span class="token punctuation">)</span>            daemonsets<span class="token punctuation">.</span><span class="token function">DELETE</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>DaemonsetHttpHandler<span class="token punctuation">.</span>DeleteDaemonSet<span class="token punctuation">)</span>            daemonsets<span class="token punctuation">.</span><span class="token function">PUT</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>DaemonsetHttpHandler<span class="token punctuation">.</span>UpdateDaemonSet<span class="token punctuation">)</span>            daemonsets<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/detail"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>DaemonsetHttpHandler<span class="token punctuation">.</span>DescribeDaemonSet<span class="token punctuation">)</span>            daemonsets<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>DaemonsetHttpHandler<span class="token punctuation">.</span>CreateDaemonSet<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        statefulsets <span class="token operator">:=</span> api<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">"/statefulsets"</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            statefulsets<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>StatefulSetHttpHandler<span class="token punctuation">.</span>GetStatefulSetList<span class="token punctuation">)</span>            statefulsets<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/detail"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>StatefulSetHttpHandler<span class="token punctuation">.</span>DescribeStatefulSet<span class="token punctuation">)</span>            statefulsets<span class="token punctuation">.</span><span class="token function">PUT</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>StatefulSetHttpHandler<span class="token punctuation">.</span>UpdateStatefulSet<span class="token punctuation">)</span>            statefulsets<span class="token punctuation">.</span><span class="token function">DELETE</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>StatefulSetHttpHandler<span class="token punctuation">.</span>DeleteStatefulset<span class="token punctuation">)</span>            statefulsets<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>StatefulSetHttpHandler<span class="token punctuation">.</span>CreateStatefulset<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        nodes <span class="token operator">:=</span> api<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">"/nodes"</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            nodes<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>NodeHttpHandler<span class="token punctuation">.</span>GetNodeList<span class="token punctuation">)</span>            nodes<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/detail"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>NodeHttpHandler<span class="token punctuation">.</span>DescribeNode<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        namespaces <span class="token operator">:=</span> api<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">"/namespaces"</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            namespaces<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>NamespaceHttpHandler<span class="token punctuation">.</span>GetNamespaceList<span class="token punctuation">)</span>            namespaces<span class="token punctuation">.</span><span class="token function">DELETE</span><span class="token punctuation">(</span><span class="token string">"/:name"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>NamespaceHttpHandler<span class="token punctuation">.</span>DeleteNamespace<span class="token punctuation">)</span>            namespaces<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>NamespaceHttpHandler<span class="token punctuation">.</span>CreateNamespace<span class="token punctuation">)</span>            namespaces<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/detail"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>NamespaceHttpHandler<span class="token punctuation">.</span>DescribeNamespace<span class="token punctuation">)</span>            namespaces<span class="token punctuation">.</span><span class="token function">PUT</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>NamespaceHttpHandler<span class="token punctuation">.</span>UpdateNamespace<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        persistentvolumes <span class="token operator">:=</span> api<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">"/pv"</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            persistentvolumes<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>PVHttpHandler<span class="token punctuation">.</span>GetPvListHandler<span class="token punctuation">)</span>            persistentvolumes<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/detail"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>PVHttpHandler<span class="token punctuation">.</span>DescribePV<span class="token punctuation">)</span>            persistentvolumes<span class="token punctuation">.</span><span class="token function">DELETE</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>PVHttpHandler<span class="token punctuation">.</span>DeletePersistentVolume<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        services <span class="token operator">:=</span> api<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">"/services"</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            services<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>ServiceHttpHandler<span class="token punctuation">.</span>GetServiceListHandler<span class="token punctuation">)</span>            services<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>ServiceHttpHandler<span class="token punctuation">.</span>CreateService<span class="token punctuation">)</span>            services<span class="token punctuation">.</span><span class="token function">DELETE</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>ServiceHttpHandler<span class="token punctuation">.</span>DeleteService<span class="token punctuation">)</span>            services<span class="token punctuation">.</span><span class="token function">PUT</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>ServiceHttpHandler<span class="token punctuation">.</span>UpdateService<span class="token punctuation">)</span>            services<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/detail"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>ServiceHttpHandler<span class="token punctuation">.</span>DescribeService<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        ingress <span class="token operator">:=</span> api<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">"/ingress"</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            ingress<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>IngressHttpHandler<span class="token punctuation">.</span>GetIngressListHandler<span class="token punctuation">)</span>            ingress<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/detail"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>IngressHttpHandler<span class="token punctuation">.</span>DescribeIngress<span class="token punctuation">)</span>            ingress<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>IngressHttpHandler<span class="token punctuation">.</span>CreateIngress<span class="token punctuation">)</span>            ingress<span class="token punctuation">.</span><span class="token function">DELETE</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>IngressHttpHandler<span class="token punctuation">.</span>DeleteIngress<span class="token punctuation">)</span>            ingress<span class="token punctuation">.</span><span class="token function">PUT</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>IngressHttpHandler<span class="token punctuation">.</span>UpdateIngress<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        configmap <span class="token operator">:=</span> api<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">"/configmap"</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            configmap<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>ConfigmapHttpHandler<span class="token punctuation">.</span>GetConfigmapList<span class="token punctuation">)</span>            configmap<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/detail"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>ConfigmapHttpHandler<span class="token punctuation">.</span>DescribeConfigmap<span class="token punctuation">)</span>            configmap<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>ConfigmapHttpHandler<span class="token punctuation">.</span>CreateConfigmap<span class="token punctuation">)</span>            configmap<span class="token punctuation">.</span><span class="token function">DELETE</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>ConfigmapHttpHandler<span class="token punctuation">.</span>DeleteConfigmap<span class="token punctuation">)</span>            configmap<span class="token punctuation">.</span><span class="token function">PUT</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>ConfigmapHttpHandler<span class="token punctuation">.</span>UpdateConfigmap<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        secret <span class="token operator">:=</span> api<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">"/secret"</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            secret<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>SecretHttpHandler<span class="token punctuation">.</span>GetSecretList<span class="token punctuation">)</span>            secret<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/detail"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>SecretHttpHandler<span class="token punctuation">.</span>DescribeSecret<span class="token punctuation">)</span>            secret<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>SecretHttpHandler<span class="token punctuation">.</span>CreateSecret<span class="token punctuation">)</span>            secret<span class="token punctuation">.</span><span class="token function">DELETE</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>SecretHttpHandler<span class="token punctuation">.</span>DeleteSecret<span class="token punctuation">)</span>            secret<span class="token punctuation">.</span><span class="token function">PUT</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>SecretHttpHandler<span class="token punctuation">.</span>UpdateSecret<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        pvc <span class="token operator">:=</span> api<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">"/pvc"</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            pvc<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>PVCHttpHandler<span class="token punctuation">.</span>GetPvcList<span class="token punctuation">)</span>            pvc<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/detail"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>PVCHttpHandler<span class="token punctuation">.</span>DescribePvc<span class="token punctuation">)</span>            pvc<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>PVCHttpHandler<span class="token punctuation">.</span>CreatePvc<span class="token punctuation">)</span>            pvc<span class="token punctuation">.</span><span class="token function">DELETE</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>PVCHttpHandler<span class="token punctuation">.</span>DeletePvc<span class="token punctuation">)</span>            pvc<span class="token punctuation">.</span><span class="token function">PUT</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>PVCHttpHandler<span class="token punctuation">.</span>UpdatePvc<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    workflow <span class="token operator">:=</span> router<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">"/api/v1/workflow"</span><span class="token punctuation">)</span>    workflow<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span>middle<span class="token punctuation">.</span><span class="token function">JWTMiddleware</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        workflow<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http3<span class="token punctuation">.</span><span class="token function">NewWorkflowHttpHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>GetWorkflowList<span class="token punctuation">)</span>        workflow<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http3<span class="token punctuation">.</span><span class="token function">NewWorkflowHttpHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>CreateWorkflow<span class="token punctuation">)</span>        workflow<span class="token punctuation">.</span><span class="token function">DELETE</span><span class="token punctuation">(</span><span class="token string">"/:id"</span><span class="token punctuation">,</span> http3<span class="token punctuation">.</span><span class="token function">NewWorkflowHttpHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>DeleteWorkflow<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    user <span class="token operator">:=</span> router<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">"/api/v1/users"</span><span class="token punctuation">)</span>    user<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span>middle<span class="token punctuation">.</span><span class="token function">JWTMiddleware</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        user<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http2<span class="token punctuation">.</span><span class="token function">NewUserHttpHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>GetUserList<span class="token punctuation">)</span>        user<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/:id"</span><span class="token punctuation">,</span> http2<span class="token punctuation">.</span><span class="token function">NewUserHttpHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>DescribeUser<span class="token punctuation">)</span>        user<span class="token punctuation">.</span><span class="token function">DELETE</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http2<span class="token punctuation">.</span><span class="token function">NewUserHttpHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>DeleteUser<span class="token punctuation">)</span>        user<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http2<span class="token punctuation">.</span><span class="token function">NewUserHttpHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>CreateUser<span class="token punctuation">)</span>        user<span class="token punctuation">.</span><span class="token function">PUT</span><span class="token punctuation">(</span><span class="token string">"/:id"</span><span class="token punctuation">,</span> http2<span class="token punctuation">.</span><span class="token function">NewUserHttpHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>UpdateUser<span class="token punctuation">)</span>        user<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/groups/:id"</span><span class="token punctuation">,</span> http2<span class="token punctuation">.</span><span class="token function">NewUserHttpHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>GetUserHaveGroup<span class="token punctuation">)</span>        user<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/permissions/:id"</span><span class="token punctuation">,</span> http2<span class="token punctuation">.</span><span class="token function">NewUserHttpHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>GetUserPermissions<span class="token punctuation">)</span>        user<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/association"</span><span class="token punctuation">,</span> http2<span class="token punctuation">.</span><span class="token function">NewUserHttpHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>AddUserToGroup<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    group <span class="token operator">:=</span> router<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">"/api/v1/groups"</span><span class="token punctuation">)</span>    group<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span>middle<span class="token punctuation">.</span><span class="token function">JWTMiddleware</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        group<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http2<span class="token punctuation">.</span><span class="token function">NewUserHttpHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>GetUserGroupList<span class="token punctuation">)</span>        group<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/:id"</span><span class="token punctuation">,</span> http2<span class="token punctuation">.</span><span class="token function">NewUserHttpHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>DescribeUserGroup<span class="token punctuation">)</span>        group<span class="token punctuation">.</span><span class="token function">DELETE</span><span class="token punctuation">(</span><span class="token string">"/:id"</span><span class="token punctuation">,</span> http2<span class="token punctuation">.</span><span class="token function">NewUserHttpHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>DeleteUserGroup<span class="token punctuation">)</span>        group<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http2<span class="token punctuation">.</span><span class="token function">NewUserHttpHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>CreateUserGroup<span class="token punctuation">)</span>        group<span class="token punctuation">.</span><span class="token function">PUT</span><span class="token punctuation">(</span><span class="token string">"/:id"</span><span class="token punctuation">,</span> http2<span class="token punctuation">.</span><span class="token function">NewUserHttpHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>UpdateUserGroup<span class="token punctuation">)</span>        group<span class="token punctuation">.</span><span class="token function">PUT</span><span class="token punctuation">(</span><span class="token string">"/permissions/:id"</span><span class="token punctuation">,</span> http2<span class="token punctuation">.</span><span class="token function">NewUserHttpHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>SetGroupPermissions<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    login <span class="token operator">:=</span> router<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">"/api/v1/login"</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        login<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> http2<span class="token punctuation">.</span><span class="token function">NewUserHttpHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Login<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>Index<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>GinRouter<span class="token punctuation">)</span> <span class="token function">Index</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span>        <span class="token string">"code"</span><span class="token punctuation">:</span>    <span class="token number">200</span><span class="token punctuation">,</span>        <span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"success"</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;kubernetes-platform后端开发-项目初始&quot;&gt;&lt;a href=&quot;#kubernetes-platform后端开发-项目初始&quot; class=&quot;headerlink&quot; title=&quot;kubernetes platform后端开发-项目初始&quot;&gt;&lt;/a&gt;ku</summary>
      
    
    
    
    <category term="kubernetes" scheme="http://dycloud.fun/categories/kubernetes/"/>
    
    
    <category term="kubernetes" scheme="http://dycloud.fun/tags/kubernetes/"/>
    
    <category term="云原生" scheme="http://dycloud.fun/tags/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
  </entry>
  
  <entry>
    <title>k8s管理系统项目前端-login</title>
    <link href="http://dycloud.fun/2024/01/28/k8s%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE%E5%89%8D%E7%AB%AF-login/"/>
    <id>http://dycloud.fun/2024/01/28/k8s%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE%E5%89%8D%E7%AB%AF-login/</id>
    <published>2024-01-28T06:32:00.000Z</published>
    <updated>2024-04-07T08:50:05.081Z</updated>
    
    <content type="html"><![CDATA[<h1 id="k8s管理系统项目前端-login"><a href="#k8s管理系统项目前端-login" class="headerlink" title="k8s管理系统项目前端-login"></a>k8s管理系统项目前端-login</h1><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"login"</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 用户登录卡片 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>el<span class="token operator">-</span>card <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"login-card"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>      <span class="token operator">&lt;</span>template #header<span class="token operator">></span><span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"login-card-header"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>h3 <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"title"</span><span class="token operator">></span>欢迎登录<span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>      <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">--</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 表单 <span class="token operator">--</span><span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>form <span class="token operator">:</span>model<span class="token operator">=</span><span class="token string">"loginForm"</span> <span class="token operator">:</span>rules<span class="token operator">=</span><span class="token string">"loginDataRules"</span> ref<span class="token operator">=</span><span class="token string">"loginData"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item prop<span class="token operator">=</span><span class="token string">"username"</span><span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 用户名 <span class="token operator">--</span><span class="token operator">></span>          <span class="token operator">&lt;</span>el<span class="token operator">-</span>input prefix<span class="token operator">-</span>icon<span class="token operator">=</span><span class="token string">"UserFilled"</span> size<span class="token operator">=</span><span class="token string">"large"</span> v<span class="token operator">-</span>model<span class="token punctuation">.</span>trim<span class="token operator">=</span><span class="token string">"loginForm.username"</span> maxlength<span class="token operator">=</span><span class="token string">"32"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入账号"</span> clearable<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item prop<span class="token operator">=</span><span class="token string">"password"</span><span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 密码 <span class="token operator">--</span><span class="token operator">></span>          <span class="token operator">&lt;</span>el<span class="token operator">-</span>input prefix<span class="token operator">-</span>icon<span class="token operator">=</span><span class="token string">"Lock"</span>  size<span class="token operator">=</span><span class="token string">"large"</span> v<span class="token operator">-</span>model<span class="token punctuation">.</span>trim<span class="token operator">=</span><span class="token string">"loginForm.password"</span> maxlength<span class="token operator">=</span><span class="token string">"16"</span> show<span class="token operator">-</span>password placeholder<span class="token operator">=</span><span class="token string">"请输入密码"</span> clearable<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 登录按钮 <span class="token operator">--</span><span class="token operator">></span>          <span class="token operator">&lt;</span>el<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">"primary"</span> style<span class="token operator">=</span><span class="token string">"width: 100%;border-radius: 2px"</span>  @click<span class="token operator">=</span><span class="token string">"handleSubmit"</span><span class="token operator">></span>登 录<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>card<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script setup<span class="token operator">></span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>  ref <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ElMessage <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'element-plus'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span><span class="token constant">LOGIN</span><span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"../../api/user.js"</span><span class="token punctuation">;</span><span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">"@/router/index.js"</span><span class="token punctuation">;</span><span class="token comment">// import jwt from "jsonwebtoken"</span>    <span class="token keyword">const</span> loginForm <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>      <span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">const</span> loginDataRules <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">&#123;</span> <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'请输入用户名'</span><span class="token punctuation">,</span> <span class="token literal-property property">trigger</span><span class="token operator">:</span> <span class="token string">'blur'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">&#123;</span> <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'请输入密码'</span><span class="token punctuation">,</span> <span class="token literal-property property">trigger</span><span class="token operator">:</span> <span class="token string">'blur'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span> <span class="token literal-property property">min</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'密码长度不能少于6位'</span><span class="token punctuation">,</span> <span class="token literal-property property">trigger</span><span class="token operator">:</span> <span class="token string">'blur'</span> <span class="token punctuation">&#125;</span>      <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token function-variable function">handleSubmit</span> <span class="token operator">=</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span>data<span class="token punctuation">,</span>errors<span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>errors <span class="token operator">!=</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span>  <span class="token constant">LOGIN</span><span class="token punctuation">(</span>loginForm<span class="token punctuation">.</span>value<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>resp<span class="token punctuation">.</span>code <span class="token operator">!=</span><span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          ElMessage<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>message<span class="token punctuation">)</span>          <span class="token keyword">return</span>        <span class="token punctuation">&#125;</span>        ElMessage<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">"登录成功"</span><span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>resp<span class="token punctuation">,</span><span class="token string">"--------------------------------"</span><span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>token<span class="token punctuation">)</span>        localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">'username'</span><span class="token punctuation">,</span>resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>username<span class="token punctuation">)</span>        <span class="token comment">// let token = jwt.sign(resp.data.token,'IaM7Tg9vnreEwY0yBnpGt1l2OqjJOFeCQUdpe',&#123;expiresIn: '1h'&#125;)</span>        localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">'token'</span><span class="token punctuation">,</span>resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>token<span class="token punctuation">)</span>        router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"e ==="</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>style scoped<span class="token operator">></span><span class="token punctuation">.</span>login <span class="token punctuation">&#123;</span>  <span class="token literal-property property">position</span><span class="token operator">:</span> absolute<span class="token punctuation">;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>  <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>  <span class="token literal-property property">background</span><span class="token operator">:</span> aquamarine<span class="token punctuation">;</span>  background<span class="token operator">-</span>image<span class="token operator">:</span> <span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span>assets<span class="token operator">/</span>login<span class="token punctuation">.</span>png<span class="token punctuation">)</span><span class="token punctuation">;</span>  background<span class="token operator">-</span>size<span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>login<span class="token operator">-</span>card <span class="token punctuation">&#123;</span>  <span class="token literal-property property">position</span><span class="token operator">:</span> absolute<span class="token punctuation">;</span>  <span class="token literal-property property">right</span><span class="token operator">:</span> <span class="token number">10</span><span class="token operator">%</span><span class="token punctuation">;</span> <span class="token comment">/* 根据您的页面设计调整 */</span>  <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">;</span> <span class="token comment">/* 使用50%可以使登录卡片垂直居中 */</span>  <span class="token literal-property property">transform</span><span class="token operator">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* 使用transform来精确居中登录卡片 */</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 380px<span class="token punctuation">;</span> <span class="token comment">/* 增加宽度 */</span>  <span class="token literal-property property">height</span><span class="token operator">:</span> 350px<span class="token punctuation">;</span>  <span class="token literal-property property">padding</span><span class="token operator">:</span> 50px<span class="token punctuation">;</span> <span class="token comment">/* 如果需要更多内边距 */</span>  padding<span class="token operator">-</span>top<span class="token operator">:</span> 20px<span class="token punctuation">;</span>  border<span class="token operator">-</span>radius<span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 可选：增加边框半径 */</span>  <span class="token literal-property property">background</span><span class="token operator">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token literal-property property">overflow</span><span class="token operator">:</span> hidden<span class="token punctuation">;</span>  box<span class="token operator">-</span>shadow<span class="token operator">:</span> <span class="token number">0</span> 4px 8px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* 可选：增加阴影以增强立体感 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>title <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> 20px<span class="token punctuation">;</span>  font<span class="token operator">-</span>size<span class="token operator">:</span> 24px<span class="token punctuation">;</span>  font<span class="token operator">-</span>weight<span class="token operator">:</span> bold<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>login<span class="token operator">-</span>card<span class="token operator">-</span>header <span class="token punctuation">&#123;</span>  text<span class="token operator">-</span>align<span class="token operator">:</span> center<span class="token punctuation">;</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> 0px<span class="token punctuation">;</span> <span class="token comment">/* 可以根据需要增加 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> 25px <span class="token operator">!</span>important<span class="token punctuation">;</span> <span class="token comment">/* 增加表单项之间的间距 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>el<span class="token operator">-</span>input <span class="token punctuation">&#123;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span> <span class="token operator">!</span>important<span class="token punctuation">;</span> <span class="token comment">/* 确保输入框宽度填满可用空间 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>el<span class="token operator">-</span>button <span class="token punctuation">&#123;</span>  <span class="token literal-property property">height</span><span class="token operator">:</span> 40px <span class="token operator">!</span>important<span class="token punctuation">;</span> <span class="token comment">/* 增加按钮的高度 */</span>  line<span class="token operator">-</span>height<span class="token operator">:</span> 40px<span class="token operator">!</span>important<span class="token punctuation">;</span> <span class="token comment">/* 调整文本行高以垂直居中 */</span>  font<span class="token operator">-</span>size<span class="token operator">:</span> 16px <span class="token operator">!</span>important<span class="token punctuation">;</span> <span class="token comment">/* 可增加字号以适应按钮大小 */</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;k8s管理系统项目前端-login&quot;&gt;&lt;a href=&quot;#k8s管理系统项目前端-login&quot; class=&quot;headerlink&quot; title=&quot;k8s管理系统项目前端-login&quot;&gt;&lt;/a&gt;k8s管理系统项目前端-login&lt;/h1&gt;&lt;pre class=&quot;l</summary>
      
    
    
    
    <category term="kubernetes" scheme="http://dycloud.fun/categories/kubernetes/"/>
    
    
    <category term="kubernetes" scheme="http://dycloud.fun/tags/kubernetes/"/>
    
    <category term="云原生" scheme="http://dycloud.fun/tags/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
  </entry>
  
  <entry>
    <title>k8s管理系统项目前端-workload</title>
    <link href="http://dycloud.fun/2024/01/28/k8s%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE%E5%89%8D%E7%AB%AF-workload/"/>
    <id>http://dycloud.fun/2024/01/28/k8s%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE%E5%89%8D%E7%AB%AF-workload/</id>
    <published>2024-01-28T06:32:00.000Z</published>
    <updated>2024-04-07T08:53:49.465Z</updated>
    
    <content type="html"><![CDATA[<h1 id="k8s管理系统项目前端-workload"><a href="#k8s管理系统项目前端-workload" class="headerlink" title="k8s管理系统项目前端-workload"></a>k8s管理系统项目前端-workload</h1><h3 id="一、功能开发"><a href="#一、功能开发" class="headerlink" title="一、功能开发"></a>一、功能开发</h3><h5 id="1、Deployment"><a href="#1、Deployment" class="headerlink" title="1、Deployment"></a>1、Deployment</h5><h5 id="（1）功能"><a href="#（1）功能" class="headerlink" title="（1）功能"></a>（1）功能</h5><p>列表、详情、新增、更新、删除、重启、修改副本数等</p><h5 id="（2）Main布局"><a href="#（2）Main布局" class="headerlink" title="（2）Main布局"></a>（2）Main布局</h5><p><img src="/images/work1.png" alt="image"></p><p>views&#x2F;workload&#x2F;deploymentView.vue</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 新的 div 容器，使用flex布局对齐内容 <span class="token operator">--</span><span class="token operator">></span>  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"deployment-header"</span> style<span class="token operator">=</span><span class="token string">"flex: 1"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"left-section"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>span<span class="token operator">></span>命名空间：<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>select v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"selectedNamespace"</span> placeholder<span class="token operator">=</span><span class="token string">"请选择"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>option            v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"namespace in namespaces"</span>            <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"namespace"</span>            <span class="token operator">:</span>label<span class="token operator">=</span><span class="token string">"namespace"</span>            <span class="token operator">:</span>value<span class="token operator">=</span><span class="token string">"namespace"</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>select<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 移动的刷新按钮，保留在右侧 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"right-group"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">"refresh"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon<span class="token operator">></span><span class="token operator">&lt;</span>Refresh <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">></span>        <span class="token operator">&lt;</span>span<span class="token operator">></span> 刷新 <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"container"</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 第一部分<span class="token operator">:</span> 头部 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"header shadow"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"left-group"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>button  type<span class="token operator">=</span><span class="token string">"primary"</span> @click<span class="token operator">=</span><span class="token string">"goToCreateDeployment()"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon<span class="token operator">></span><span class="token operator">&lt;</span>EditPen <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">></span>          <span class="token operator">&lt;</span>span style<span class="token operator">=</span><span class="token string">"vertical-align: middle"</span><span class="token operator">></span> 创建 <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>input placeholder<span class="token operator">=</span><span class="token string">"请输入内容"</span> v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"searchText"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"search-input"</span> @input<span class="token operator">=</span><span class="token string">"handleInput"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>template #append<span class="token operator">></span>            <span class="token operator">&lt;</span>el<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">"primary"</span> @click<span class="token operator">=</span><span class="token string">"search()"</span><span class="token operator">></span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon<span class="token operator">></span><span class="token operator">&lt;</span>Search <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 第二部分<span class="token operator">:</span> 表格 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"table-wrapper shadow"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>table <span class="token operator">:</span>data<span class="token operator">=</span><span class="token string">"tableData"</span> style<span class="token operator">=</span><span class="token string">"width: 100%"</span> <span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column prop<span class="token operator">=</span><span class="token string">"deploymentName"</span> label<span class="token operator">=</span><span class="token string">"Deployment名"</span> width<span class="token operator">=</span><span class="token string">"180px"</span> align<span class="token operator">=</span><span class="token string">"center"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>template #<span class="token keyword">default</span><span class="token operator">=</span><span class="token string">"&#123; row &#125;"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div<span class="token operator">></span>              <span class="token operator">&lt;</span>span style<span class="token operator">=</span><span class="token string">"vertical-align: middle; color: #1395FF; cursor: pointer;"</span> @click<span class="token operator">=</span><span class="token string">"handleRowClick(row)"</span><span class="token operator">></span>                <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> row<span class="token punctuation">.</span>deploymentName <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>              <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column prop<span class="token operator">=</span><span class="token string">"Labels"</span> label<span class="token operator">=</span><span class="token string">"标签"</span> width<span class="token operator">=</span><span class="token string">"200px"</span> align<span class="token operator">=</span><span class="token string">"center"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>template #<span class="token keyword">default</span><span class="token operator">=</span><span class="token string">"&#123; row &#125;"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div<span class="token operator">></span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>tooltip                  v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"(label, index) in row.Labels"</span>                  <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"index"</span>                  <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"item"</span>                  effect<span class="token operator">=</span><span class="token string">"dark"</span>                  <span class="token operator">:</span>content<span class="token operator">=</span><span class="token string">"label"</span>                  placement<span class="token operator">=</span><span class="token string">"top"</span>              <span class="token operator">></span>                <span class="token operator">&lt;</span>el<span class="token operator">-</span>tag <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ml-2"</span> type<span class="token operator">=</span><span class="token string">"success"</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> label <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>tag<span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>tooltip<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column prop<span class="token operator">=</span><span class="token string">"Status"</span> label<span class="token operator">=</span><span class="token string">"Pod数量 (运行/期望)"</span> align<span class="token operator">=</span><span class="token string">"center"</span> width<span class="token operator">=</span><span class="token string">"200px"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>template #<span class="token keyword">default</span><span class="token operator">=</span><span class="token string">"&#123; row &#125;"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token string">"display: flex; align-items: center;justify-content: center;height: 100%"</span><span class="token operator">></span>              <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> row<span class="token punctuation">.</span>Status <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>              <span class="token operator">&lt;</span>img v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"row.showLoading"</span> src<span class="token operator">=</span><span class="token string">"@/assets/load.svg"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"loading-icon"</span> alt<span class="token operator">=</span><span class="token string">"loading"</span><span class="token operator">/</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column prop<span class="token operator">=</span><span class="token string">"createTime"</span> label<span class="token operator">=</span><span class="token string">"创建时间"</span> align<span class="token operator">=</span><span class="token string">"center"</span> width<span class="token operator">=</span><span class="token string">"155px"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>template #<span class="token keyword">default</span><span class="token operator">=</span><span class="token string">"&#123; row &#125;"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div<span class="token operator">></span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>tag <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ml-2"</span> type<span class="token operator">=</span><span class="token string">"warning"</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>row<span class="token punctuation">.</span>createTime<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>tag<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column prop<span class="token operator">=</span><span class="token string">"Images"</span> label<span class="token operator">=</span><span class="token string">"镜像"</span> align<span class="token operator">=</span><span class="token string">"center"</span> width<span class="token operator">=</span><span class="token string">"180px"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>template #<span class="token keyword">default</span><span class="token operator">=</span><span class="token string">"&#123; row &#125;"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div<span class="token operator">></span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>tooltip                  v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"(images, index) in row.Images"</span>                  <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"index"</span>                  <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"item"</span>                  effect<span class="token operator">=</span><span class="token string">"dark"</span>                  <span class="token operator">:</span>content<span class="token operator">=</span><span class="token string">"images"</span>                  placement<span class="token operator">=</span><span class="token string">"top"</span>              <span class="token operator">></span>                <span class="token operator">&lt;</span>el<span class="token operator">-</span>tag <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ml-2"</span> type<span class="token operator">=</span><span class="token string">"success"</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> images <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>tag<span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>tooltip<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column prop<span class="token operator">=</span><span class="token string">"Operation"</span> label<span class="token operator">=</span><span class="token string">"操作"</span> align<span class="token operator">=</span><span class="token string">"center"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>template #<span class="token keyword">default</span><span class="token operator">=</span><span class="token string">"&#123; row &#125;"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"button-group"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>el<span class="token operator">-</span>button size<span class="token operator">=</span><span class="token string">"small"</span> color<span class="token operator">=</span><span class="token string">"#5AABFF"</span> <span class="token operator">:</span>dark<span class="token operator">=</span><span class="token string">"isDark"</span> plain @click<span class="token operator">=</span><span class="token string">"viewYAML(row)"</span><span class="token operator">></span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon<span class="token operator">></span><span class="token operator">&lt;</span>EditPen <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">></span>              <span class="token operator">&lt;</span>span style<span class="token operator">=</span><span class="token string">"vertical-align: middle"</span><span class="token operator">></span> <span class="token constant">YAML</span> <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>button size<span class="token operator">=</span><span class="token string">"small"</span>  color<span class="token operator">=</span><span class="token string">"#F58D79"</span> <span class="token operator">:</span>dark<span class="token operator">=</span><span class="token string">"isDark"</span> plain @click<span class="token operator">=</span><span class="token string">"openScaleDiglog(row)"</span><span class="token operator">></span>                <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon<span class="token operator">></span><span class="token operator">&lt;</span>Tickets <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">></span>                <span class="token operator">&lt;</span>span style<span class="token operator">=</span><span class="token string">"vertical-align: middle"</span><span class="token operator">></span> 扩缩 <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>button size<span class="token operator">=</span><span class="token string">"small"</span>  color<span class="token operator">=</span><span class="token string">"#F58D79"</span> <span class="token operator">:</span>dark<span class="token operator">=</span><span class="token string">"isDark"</span> plain @click<span class="token operator">=</span><span class="token string">"restartDeployment(row)"</span><span class="token operator">></span>                <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon<span class="token operator">></span><span class="token operator">&lt;</span>Tickets <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">></span>                <span class="token operator">&lt;</span>span style<span class="token operator">=</span><span class="token string">"vertical-align: middle"</span><span class="token operator">></span> 重启 <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>            <span class="token operator">&lt;</span>el<span class="token operator">-</span>button size<span class="token operator">=</span><span class="token string">"small"</span>  color<span class="token operator">=</span><span class="token string">"#F58D79"</span> <span class="token operator">:</span>dark<span class="token operator">=</span><span class="token string">"isDark"</span> plain @click<span class="token operator">=</span><span class="token string">"confirmDelete(row)"</span><span class="token operator">></span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon<span class="token operator">></span><span class="token operator">&lt;</span>Tickets <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">></span>              <span class="token operator">&lt;</span>span style<span class="token operator">=</span><span class="token string">"vertical-align: middle"</span><span class="token operator">></span> 删除 <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>pagination          v<span class="token operator">-</span>model<span class="token operator">:</span>current<span class="token operator">-</span>page<span class="token operator">=</span><span class="token string">"currentPage"</span>          v<span class="token operator">-</span>model<span class="token operator">:</span>page<span class="token operator">-</span>size<span class="token operator">=</span><span class="token string">"pageSize"</span>          <span class="token operator">:</span>page<span class="token operator">-</span>sizes<span class="token operator">=</span><span class="token string">"[5, 10, 20, 30]"</span>          <span class="token operator">:</span>small<span class="token operator">=</span><span class="token string">"small"</span>          <span class="token operator">:</span>disabled<span class="token operator">=</span><span class="token string">"disabled"</span>          <span class="token operator">:</span>background<span class="token operator">=</span><span class="token string">"background"</span>          layout<span class="token operator">=</span><span class="token string">"total, sizes, prev, pager, next, jumper"</span>          <span class="token operator">:</span>total<span class="token operator">=</span>deploymentCount          <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"paginations"</span>          @size<span class="token operator">-</span>change<span class="token operator">=</span><span class="token string">"handleSizeChange"</span>          @current<span class="token operator">-</span>change<span class="token operator">=</span><span class="token string">"handleCurrentChange"</span>      <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>el<span class="token operator">-</span>dialog title<span class="token operator">=</span><span class="token string">"YAML信息"</span> v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"dialogVisible"</span> width<span class="token operator">=</span><span class="token string">"45%"</span> top<span class="token operator">=</span><span class="token string">"5%"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>codemirror          v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"yamlContent"</span>          placeholder<span class="token operator">=</span><span class="token string">"请输入代码..."</span>          <span class="token operator">:</span>style<span class="token operator">=</span><span class="token string">"&#123; height: '100%' &#125;"</span>          v<span class="token operator">-</span>bind<span class="token operator">=</span><span class="token string">"cmOptions"</span>          <span class="token operator">:</span>extensions<span class="token operator">=</span><span class="token string">"extensions"</span>      <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span>template #footer<span class="token operator">></span>                <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"dialog-footer"</span><span class="token operator">></span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">"dialogVisible = false"</span><span class="token operator">></span>取 消<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>button  type<span class="token operator">=</span><span class="token string">"primary"</span> @click<span class="token operator">=</span><span class="token string">"updateDeploy()"</span><span class="token operator">></span>更 新<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>dialog<span class="token operator">></span>    <span class="token operator">&lt;</span>el<span class="token operator">-</span>dialog title<span class="token operator">=</span><span class="token string">"创建Deployment"</span> v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"createDialogVisible"</span> width<span class="token operator">=</span><span class="token string">"60%"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>form ref<span class="token operator">=</span><span class="token string">"form"</span> <span class="token operator">:</span>model<span class="token operator">=</span><span class="token string">"createForm"</span> label<span class="token operator">-</span>position<span class="token operator">=</span><span class="token string">"left"</span> label<span class="token operator">-</span>width<span class="token operator">=</span><span class="token string">"180px"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-with-help"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"deployment名："</span> prop<span class="token operator">=</span><span class="token string">"name"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-item-with-help"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-deployname"</span><span class="token operator">></span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"createForm.deploymentname"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入deployment名"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>              <span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"help-text"</span><span class="token operator">></span>                <span class="token function">最长63个字符，只能包含小写字母、数字及分隔符</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span>，且必须以小写字母开头，数字或小写字母结尾              <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"描述："</span> prop<span class="token operator">=</span><span class="token string">"description"</span> style<span class="token operator">=</span><span class="token string">"margin: 10px;margin-left: 20px"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>el<span class="token operator">-</span>input              type<span class="token operator">=</span><span class="token string">"textarea"</span>              v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"createForm.description"</span>              placeholder<span class="token operator">=</span><span class="token string">"请输入描述信息"</span>              <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"custom-textarea"</span>          <span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"标签："</span> prop<span class="token operator">=</span><span class="token string">"labels"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-item-with-help"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"(item, index) in formItems"</span> <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"item.id"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-item"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>el<span class="token operator">-</span>input                placeholder<span class="token operator">=</span><span class="token string">"Key"</span>                v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.key"</span>                <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-item"</span>                <span class="token operator">:</span>disabled<span class="token operator">=</span><span class="token string">"!item.editable"</span>            <span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>            <span class="token operator">&lt;</span>span<span class="token operator">></span> <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>            <span class="token operator">&lt;</span>el<span class="token operator">-</span>input                placeholder<span class="token operator">=</span><span class="token string">"Value"</span>                v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.value"</span>                <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-item"</span>            <span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>            <span class="token operator">&lt;</span>el<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">"removeFormItem(index)"</span> <span class="token operator">:</span>disabled<span class="token operator">=</span><span class="token string">"!item.editable"</span><span class="token operator">></span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon<span class="token operator">></span><span class="token operator">&lt;</span>CircleClose <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 将添加新行的按钮移动到循环外部 <span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>        <span class="token operator">&lt;</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span>el<span class="token operator">-</span>button              type<span class="token operator">=</span><span class="token string">"primary"</span>              @click<span class="token operator">=</span><span class="token string">"() => addFormItem(item)"</span>              <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"add-button"</span>          <span class="token operator">></span>            添加新标签          <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"命名空间："</span> prop<span class="token operator">=</span><span class="token string">"namespace"</span> style<span class="token operator">=</span><span class="token string">"margin: 10px"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>el<span class="token operator">-</span>select v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"createForm.namespace"</span> placeholder<span class="token operator">=</span><span class="token string">"请选择"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>el<span class="token operator">-</span>option                v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"namespace in namespaces"</span>                <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"namespace"</span>                <span class="token operator">:</span>label<span class="token operator">=</span><span class="token string">"namespace"</span>                <span class="token operator">:</span>value<span class="token operator">=</span><span class="token string">"namespace"</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>select<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"custom-form-item"</span> label<span class="token operator">=</span><span class="token string">"实例内容器："</span> style<span class="token operator">=</span><span class="token string">"margin: 10px"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"container"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"(item, index) in instanceItems"</span> <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"item.id"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"item-container"</span><span class="token operator">></span>              <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"content-container"</span> <span class="token operator">:</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"&#123; 'collapsed': item.collapsed &#125;"</span><span class="token operator">></span>                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"info"</span> v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"item.collapsed"</span><span class="token operator">></span>                  <span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> item<span class="token punctuation">.</span>name <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">/</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 显示名称 <span class="token operator">--</span><span class="token operator">></span>                  <span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> item<span class="token punctuation">.</span>image <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> item<span class="token punctuation">.</span>image_tag <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 显示镜像 <span class="token operator">--</span><span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"actions"</span> v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"item.collapsed"</span><span class="token operator">></span>                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">"expandInstanceItem(index)"</span><span class="token operator">></span>编辑<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">"removeInstanceItem(index)"</span> <span class="token operator">:</span>disabled<span class="token operator">=</span><span class="token string">"instanceItems.length === 1"</span><span class="token operator">></span>删除<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"info"</span> v<span class="token operator">-</span><span class="token keyword">else</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>                  <span class="token operator">&lt;</span>span <span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> item<span class="token punctuation">.</span>name <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span><span class="token operator">--</span><span class="token operator">></span>                  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-with-help"</span> v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"!item.collapsed"</span><span class="token operator">></span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"名称："</span> prop<span class="token operator">=</span><span class="token string">"name"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-item-with-help"</span><span class="token operator">></span>                      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-containername"</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.name"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入容器名"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                        <span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"help-text"</span><span class="token operator">></span>                          <span class="token function">最长63个字符，只能包含小写字母、数字及分隔符</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span>，且不能以分隔符开头或结尾                        <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"镜像："</span> prop<span class="token operator">=</span><span class="token string">"image"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-item-with-help"</span><span class="token operator">></span>                      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-containername"</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.image"</span> placeholder<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"镜像版本："</span> prop<span class="token operator">=</span><span class="token string">"image_tag"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-item-with-resource"</span><span class="token operator">></span>                      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-containername"</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.image_tag"</span> placeholder<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"CPU/内存限制："</span> prop<span class="token operator">=</span><span class="token string">"form-item-with-help"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-item-resource"</span><span class="token operator">></span>                      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-container-cpu"</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"cpu-label"</span><span class="token operator">></span><span class="token constant">CPU</span>：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-row"</span><span class="token operator">></span>                          <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.cpu_request"</span> <span class="token operator">></span>                            <span class="token operator">&lt;</span>template #prepend<span class="token operator">></span>request<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>                          <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                          <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.cpu_limit"</span> <span class="token operator">></span>                            <span class="token operator">&lt;</span>template #prepend<span class="token operator">></span>limit<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>                          <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                          <span class="token operator">&lt;</span>label <span class="token operator">></span>m<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-container-memory"</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"cpu-label"</span><span class="token operator">></span>内存：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-row"</span><span class="token operator">></span>                          <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.memory_request"</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>template #prepend<span class="token operator">></span>request<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>                          <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                          <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.memory_limit"</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>template #prepend<span class="token operator">></span>limit<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>                          <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                          <span class="token operator">&lt;</span>label <span class="token operator">></span>MiB<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"工作目录："</span> prop<span class="token operator">=</span><span class="token string">"workspace"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-item-with-help"</span><span class="token operator">></span>                      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-containername"</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.workspace"</span> placeholder<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                        <span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"help-text"</span><span class="token operator">></span>                          指定容器运行后的工作目录                        <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"运行命令："</span> prop<span class="token operator">=</span><span class="token string">"cmd"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-item-with-help"</span><span class="token operator">></span>                      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-containername"</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.cmd"</span> placeholder<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                        <span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"help-text"</span><span class="token operator">></span>                          控制容器运行的输入命令                        <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"运行参数："</span> prop<span class="token operator">=</span><span class="token string">"args"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-item-with-help"</span><span class="token operator">></span>                      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-containername"</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.args"</span> placeholder<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                        <span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"help-text"</span><span class="token operator">></span>                          传递给容器运行命令的输入参数                        <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token constant">HTML</span> <span class="token operator">--</span><span class="token operator">></span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"容器健康检查"</span> prop<span class="token operator">=</span><span class="token string">"health"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-item-with-help"</span><span class="token operator">></span>                      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-healthContainer"</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>el<span class="token operator">-</span>checkbox v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.isLivenessCheckActive"</span><span class="token operator">></span>存活检查<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>checkbox<span class="token operator">></span>                        <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"item.isLivenessCheckActive"</span><span class="token operator">></span>                          <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"livenessdiv"</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"method-label"</span><span class="token operator">></span>检查方法：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                              <span class="token operator">&lt;</span>el<span class="token operator">-</span>select v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.livenessselectedCheckMethod"</span> placeholder<span class="token operator">=</span><span class="token string">"请选择"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>option label<span class="token operator">=</span><span class="token string">"HTTP"</span> value<span class="token operator">=</span><span class="token string">"http"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>option label<span class="token operator">=</span><span class="token string">"TCP"</span> value<span class="token operator">=</span><span class="token string">"tcp"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>option label<span class="token operator">=</span><span class="token string">"Exec"</span> value<span class="token operator">=</span><span class="token string">"exec"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>select<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token constant">HTTP</span>选项时显示 <span class="token operator">--</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"item.livenessselectedCheckMethod === 'http'"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"method-label"</span><span class="token operator">></span>检查协议：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>select v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.lives_selectedProtocol"</span> placeholder<span class="token operator">=</span><span class="token string">"请选择"</span><span class="token operator">></span>                                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>option label<span class="token operator">=</span><span class="token string">"HTTP"</span> value<span class="token operator">=</span><span class="token string">"http"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>                                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>option label<span class="token operator">=</span><span class="token string">"HTTPS"</span> value<span class="token operator">=</span><span class="token string">"https"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>                                <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>select<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                              <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>检查端口：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.lives_healthCheckPort"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入端口"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                                <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>端口范围<span class="token operator">:</span> <span class="token number">1</span><span class="token operator">~</span><span class="token number">65535</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                              <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>请求路径：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.lives_healthCheckPath"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入路径"</span> style<span class="token operator">=</span><span class="token string">"width: 200px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token constant">TCP</span>选项时显示 <span class="token operator">--</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">else</span><span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"item.livenessselectedCheckMethod === 'tcp'"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>检查端口：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.lives_healthCheckPort"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入端口"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                                <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>端口范围<span class="token operator">:</span> <span class="token number">1</span><span class="token operator">~</span><span class="token number">65535</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> Exec选项时显示 <span class="token operator">--</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">else</span><span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"item.livenessselectedCheckMethod === 'exec'"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"execution-command-container"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>执行命令：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.livenessCommand"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入命令"</span> style<span class="token operator">=</span><span class="token string">"width: 200px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 启动延时始终显示 <span class="token operator">--</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>启动延时：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                              <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.livenessStartDelay"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                              <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>范围：<span class="token number">0</span><span class="token operator">~</span><span class="token number">60</span>秒<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 响应超时始终显示 <span class="token operator">--</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>响应延时：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                              <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.livenessResDelay"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                              <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>范围：<span class="token number">2</span><span class="token operator">~</span><span class="token number">60</span>秒<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 间隔时间始终显示 <span class="token operator">--</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>间隔时间：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                              <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.livenessIntervalTime"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                              <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>范围：<span class="token number">2</span><span class="token operator">~</span><span class="token number">300</span>秒<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 健康阈值始终显示 <span class="token operator">--</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>健康阈值：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                              <span class="token operator">&lt;</span>el<span class="token operator">-</span>input disabled v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.livenessHealththreshold"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                              <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>范围：<span class="token number">1</span>次<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 不健康阈值始终显示 <span class="token operator">--</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>不健康阈值：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                              <span class="token operator">&lt;</span>el<span class="token operator">-</span>input  v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.livenessUnHealththreshold"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                              <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>范围：<span class="token number">1</span><span class="token operator">~</span><span class="token number">10</span>次<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                          <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 就绪性检查 <span class="token operator">--</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>div<span class="token operator">></span>                        <span class="token operator">&lt;</span>el<span class="token operator">-</span>checkbox v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.isReadinessCheckActive"</span><span class="token operator">></span>就绪检查<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>checkbox<span class="token operator">></span>                        <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"item.isReadinessCheckActive"</span><span class="token operator">></span>                          <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"livenessdiv"</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"method-label"</span><span class="token operator">></span>检查方法：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                              <span class="token operator">&lt;</span>el<span class="token operator">-</span>select v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.ReadinessSelectedCheckMethod"</span> placeholder<span class="token operator">=</span><span class="token string">"请选择"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>option label<span class="token operator">=</span><span class="token string">"HTTP"</span> value<span class="token operator">=</span><span class="token string">"http"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>option label<span class="token operator">=</span><span class="token string">"TCP"</span> value<span class="token operator">=</span><span class="token string">"tcp"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>option label<span class="token operator">=</span><span class="token string">"Exec"</span> value<span class="token operator">=</span><span class="token string">"exec"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>select<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token constant">HTTP</span>选项时显示 <span class="token operator">--</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"item.ReadinessSelectedCheckMethod === 'http'"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"method-label"</span><span class="token operator">></span>检查协议：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>select v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.readnessSelectedProtocol"</span> placeholder<span class="token operator">=</span><span class="token string">"请选择"</span><span class="token operator">></span>                                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>option label<span class="token operator">=</span><span class="token string">"HTTP"</span> value<span class="token operator">=</span><span class="token string">"http"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>                                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>option label<span class="token operator">=</span><span class="token string">"HTTPS"</span> value<span class="token operator">=</span><span class="token string">"https"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>                                <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>select<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                              <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>检查端口：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.readnessHealthCheckPort"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入端口"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                                <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>端口范围<span class="token operator">:</span> <span class="token number">1</span><span class="token operator">~</span><span class="token number">65535</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                              <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>请求路径：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.readnessHealthCheckPath"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入路径"</span> style<span class="token operator">=</span><span class="token string">"width: 200px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token constant">TCP</span>选项时显示 <span class="token operator">--</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">else</span><span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"item.ReadinessSelectedCheckMethod === 'tcp'"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>检查端口：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.readnessHealthCheckPort"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入端口"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                                <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>端口范围<span class="token operator">:</span> <span class="token number">1</span><span class="token operator">~</span><span class="token number">65535</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> Exec选项时显示 <span class="token operator">--</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">else</span><span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"item.ReadinessSelectedCheckMethod === 'exec'"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"execution-command-container"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>执行命令：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.readnessCommand"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入命令"</span> style<span class="token operator">=</span><span class="token string">"width: 200px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 启动延时始终显示 <span class="token operator">--</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>启动延时：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                              <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.readnessStartDelay"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                              <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>范围：<span class="token number">0</span><span class="token operator">~</span><span class="token number">60</span>秒<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 响应超时始终显示 <span class="token operator">--</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>响应延时：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                              <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.readnessResDelay"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                              <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>范围：<span class="token number">2</span><span class="token operator">~</span><span class="token number">60</span>秒<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 间隔时间始终显示 <span class="token operator">--</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>间隔时间：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                              <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.readnessIntervalTime"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                              <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>范围：<span class="token number">2</span><span class="token operator">~</span><span class="token number">300</span>秒<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 健康阈值始终显示 <span class="token operator">--</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>健康阈值：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                              <span class="token operator">&lt;</span>el<span class="token operator">-</span>input  v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.readnessHealththreshold"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                              <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>范围：<span class="token number">1</span><span class="token operator">~</span><span class="token number">10</span>次<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 不健康阈值始终显示 <span class="token operator">--</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>不健康阈值：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                              <span class="token operator">&lt;</span>el<span class="token operator">-</span>input  v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.readnessUnHealththreshold"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                              <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>范围：<span class="token number">1</span><span class="token operator">~</span><span class="token number">10</span>次<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                          <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"副本数："</span> prop<span class="token operator">=</span><span class="token string">"replica"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-item-with-help"</span><span class="token operator">></span>                      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-containername"</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>el<span class="token operator">-</span>input<span class="token operator">-</span>number v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"createForm.replicas"</span> <span class="token operator">:</span>min<span class="token operator">=</span><span class="token string">"1"</span>  @change<span class="token operator">=</span><span class="token string">"changeReplicas"</span> <span class="token operator">/</span><span class="token operator">></span>                      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>                  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"actions"</span> v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"!item.collapsed"</span><span class="token operator">></span>                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>button v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"item.editMode"</span> @click<span class="token operator">=</span><span class="token string">"saveInstanceItem(index)"</span><span class="token operator">></span>保存<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">"removeInstanceItem(index)"</span> <span class="token operator">:</span>disabled<span class="token operator">=</span><span class="token string">"instanceItems.length === 1"</span><span class="token operator">></span>删除<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">"primary"</span> @click<span class="token operator">=</span><span class="token string">"addInstanceItem"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"add-button"</span><span class="token operator">></span>          添加新实例        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">></span>      <span class="token operator">&lt;</span>span slot<span class="token operator">=</span><span class="token string">"footer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"dialog-footer"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>el<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">"createDialogVisible = false"</span><span class="token operator">></span>取消<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span>el<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">"primary"</span> @click<span class="token operator">=</span><span class="token string">"createDeployment"</span><span class="token operator">></span>创建<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>dialog<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 对话框 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>el<span class="token operator">-</span>dialog        title<span class="token operator">=</span><span class="token string">"副本数调整"</span>        v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"scaleDialogVisible"</span>        width<span class="token operator">=</span><span class="token string">"30%"</span>    <span class="token operator">></span>      <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token string">"text-align: center; padding: 20px;"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>label<span class="token operator">></span>实例数：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>input<span class="token operator">-</span>number v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"replicaCount"</span> <span class="token operator">:</span>min<span class="token operator">=</span><span class="token string">"1"</span> label<span class="token operator">=</span><span class="token string">"副本数:"</span> <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span>span slot<span class="token operator">=</span><span class="token string">"footer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"dialog-footer"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">"scaleDialogVisible = false"</span><span class="token operator">></span>取消<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">"primary"</span> @click<span class="token operator">=</span><span class="token string">"updateReplicas"</span><span class="token operator">></span>更新<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>dialog<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script setup<span class="token operator">></span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>nextTick<span class="token punctuation">,</span> onBeforeMount<span class="token punctuation">,</span> onBeforeUnmount<span class="token punctuation">,</span> reactive<span class="token punctuation">,</span> ref<span class="token punctuation">,</span> watch<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Loading <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@element-plus/icons-vue'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'element-plus/dist/index.css'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Refresh<span class="token punctuation">,</span> EditPen<span class="token punctuation">,</span> Search <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@element-plus/icons-vue'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>  onMounted <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> useRouter <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue-router'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ArrowLeft <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@element-plus/icons-vue'</span><span class="token punctuation">;</span><span class="token comment">// 在模板中可以直接使用 Refresh, EditPen, 和 Search</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>  <span class="token constant">CREATE_DEPLOYMENT</span><span class="token punctuation">,</span>  <span class="token constant">CREATE_NAMESPACE</span><span class="token punctuation">,</span> <span class="token constant">DELETE_DEPLOYMENT</span><span class="token punctuation">,</span>  <span class="token constant">DELETE_NAMESPACE</span><span class="token punctuation">,</span> <span class="token constant">DEPLOYMENT_DETAIL</span><span class="token punctuation">,</span> <span class="token constant">DEPLOYMENT_LIST</span><span class="token punctuation">,</span>  <span class="token constant">NAMESPACE_DETAIL</span><span class="token punctuation">,</span>  <span class="token constant">NAMESPACE_LIST</span><span class="token punctuation">,</span> <span class="token constant">RESTART_DEPLOYMENT</span><span class="token punctuation">,</span> <span class="token constant">UPDATE_DEPLOYMENT</span><span class="token punctuation">,</span> <span class="token constant">UPDATE_DEPLOYMENTSCALE</span><span class="token punctuation">,</span>  <span class="token constant">UPDATE_NAMESPACE</span><span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"../../../api/k8s.js"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Codemirror <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue-codemirror'</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> javascript<span class="token punctuation">&#125;</span> <span class="token keyword">from</span>  <span class="token string">'@codemirror/lang-javascript'</span><span class="token comment">// import &#123; javascript &#125; from 'codemirror/lang-javascript'</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> oneDark <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@codemirror/theme-one-dark'</span><span class="token keyword">import</span> _ <span class="token keyword">from</span> <span class="token string">'lodash'</span><span class="token punctuation">;</span><span class="token keyword">import</span> json2yaml <span class="token keyword">from</span> <span class="token string">'json2yaml'</span><span class="token keyword">import</span> yaml2obj <span class="token keyword">from</span> <span class="token string">'js-yaml'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>ElMessage<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"element-plus"</span><span class="token punctuation">;</span><span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">"@/router/index.js"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ElMessageBox <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'element-plus'</span><span class="token punctuation">;</span><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">"axios"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>value<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"lodash/seq.js"</span><span class="token punctuation">;</span><span class="token keyword">const</span> extensions <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">javascript</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>oneDark<span class="token punctuation">]</span><span class="token keyword">const</span> dialogSelectedNamespace <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 对话框的v-model</span><span class="token keyword">const</span> scaleDialogVisible<span class="token operator">=</span>  <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token keyword">const</span> replicaCount <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">const</span> currentRow <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token function-variable function">openScaleDiglog</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">row</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>  replicaCount<span class="token punctuation">.</span>value <span class="token operator">=</span> row<span class="token punctuation">.</span>Replicas  currentRow<span class="token punctuation">.</span>value <span class="token operator">=</span> row  scaleDialogVisible<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token comment">// 从localStorage加载保存的命名空间</span><span class="token keyword">const</span> <span class="token function-variable function">loadSelection</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  selectedNamespace<span class="token punctuation">.</span>value <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'selectedNamespace'</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">''</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// 保存当前选中的命名空间到localStorage</span><span class="token keyword">const</span> <span class="token function-variable function">saveSelection</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">'selectedNamespace'</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">updateReplicas</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> updateScale <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span>      <span class="token punctuation">&#123;</span>        <span class="token literal-property property">namespace</span><span class="token operator">:</span> selectedNamespace<span class="token punctuation">,</span>        <span class="token literal-property property">deploymentName</span><span class="token operator">:</span> currentRow<span class="token punctuation">.</span>value<span class="token punctuation">.</span>deploymentName<span class="token punctuation">,</span>        <span class="token literal-property property">scaleNum</span><span class="token operator">:</span> replicaCount<span class="token punctuation">.</span>value      <span class="token punctuation">&#125;</span>  <span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"更新副本数至:"</span><span class="token punctuation">,</span> replicaCount<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">UPDATE_DEPLOYMENTSCALE</span><span class="token punctuation">(</span>updateScale<span class="token punctuation">)</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>resp<span class="token punctuation">)</span>      <span class="token function">getDeployData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 出错时返回空数组</span>    <span class="token punctuation">&#125;</span>  <span class="token comment">// 在这里编写更新逻辑</span>  scaleDialogVisible<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// 关闭对话框</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">handleRowClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">row</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Pod'</span><span class="token punctuation">,</span>    <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">type</span><span class="token operator">:</span><span class="token string">'deployment'</span><span class="token punctuation">,</span><span class="token literal-property property">deploymentName</span><span class="token operator">:</span> row<span class="token punctuation">.</span>deploymentName <span class="token punctuation">,</span><span class="token literal-property property">namespace</span><span class="token operator">:</span> selectedNamespace<span class="token punctuation">.</span>value<span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> createDialogVisible <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> createForm <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">deploymentname</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>  <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>  <span class="token literal-property property">labels</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'apps'</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">''</span> <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token literal-property property">namespace</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>  <span class="token literal-property property">replicas</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> rules <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span> <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'请输入deployment名'</span><span class="token punctuation">,</span> <span class="token literal-property property">trigger</span><span class="token operator">:</span> <span class="token string">'blur'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 此处添加其他验证规则</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span> <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'请输入描述'</span><span class="token punctuation">,</span> <span class="token literal-property property">trigger</span><span class="token operator">:</span> <span class="token string">'blur'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 此处添加其他验证规则</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token literal-property property">namespace</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span> <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'请选择命名空间'</span><span class="token punctuation">,</span> <span class="token literal-property property">trigger</span><span class="token operator">:</span> <span class="token string">'change'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> formItems <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span>  <span class="token punctuation">&#123;</span> <span class="token literal-property property">id</span><span class="token operator">:</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'apps'</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">''</span> <span class="token punctuation">&#125;</span> <span class="token comment">// 初始标签项，第一项是不可删除的</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">addFormItem</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> newItem <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">id</span><span class="token operator">:</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token literal-property property">editable</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  formItems<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>newItem<span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>formItems<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">changeReplicas</span> <span class="token operator">=</span>  <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">removeFormItem</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> reversedIndex <span class="token operator">=</span> formItems<span class="token punctuation">.</span>value<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> index<span class="token punctuation">;</span> <span class="token comment">// 反转后的索引</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"reverse = "</span><span class="token punctuation">,</span>reversedIndex<span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>formItems<span class="token punctuation">.</span>value<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"no "</span><span class="token punctuation">,</span>index<span class="token punctuation">)</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>reversedIndex <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 确保不删除第一行标签项</span>      formItems<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>formItems<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> instanceItems <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">addInstanceItem</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 折叠所有现有的实例内容器</span>  instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    item<span class="token punctuation">.</span>collapsed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> id <span class="token operator">=</span> <span class="token function">generateUniqueId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> newItem <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">id</span><span class="token operator">:</span> id<span class="token punctuation">,</span>    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">image</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">image_tag</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">livenessCommand</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">dialogSelectedNamespace</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">livenessStartDelay</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 存活检查响应延时时间</span>    <span class="token literal-property property">livenessResDelay</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 存活检查间隔时间</span>    <span class="token literal-property property">livenessIntervalTime</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 存活检查健康阈值</span>    <span class="token literal-property property">livenessHealththreshold</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 存活检查不健康阈值</span>    <span class="token literal-property property">livenessUnHealththreshold</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">livenessselectedCheckMethod</span><span class="token operator">:</span><span class="token string">'http'</span><span class="token punctuation">,</span>    <span class="token literal-property property">lives_selectedProtocol</span><span class="token operator">:</span><span class="token string">'HTTP'</span><span class="token punctuation">,</span>    <span class="token comment">// 就绪检查的检查方法</span>    <span class="token literal-property property">ReadinessSelectedCheckMethod</span><span class="token operator">:</span><span class="token string">'http'</span><span class="token punctuation">,</span>    <span class="token comment">// 是否开启就绪检查</span>    <span class="token literal-property property">isReadinessCheckActive</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 是否开启存活检查</span>    <span class="token literal-property property">isLivenessCheckActive</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 就绪检查 检查的协议</span>    <span class="token literal-property property">readnessSelectedProtocol</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 就绪检查 检查的端口号</span>    <span class="token literal-property property">readnessHealthCheckPort</span><span class="token operator">:</span><span class="token string">'80'</span><span class="token punctuation">,</span>    <span class="token comment">// 就绪检查的路径</span>    <span class="token literal-property property">readnessHealthCheckPath</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 就绪检查TCP方式的端口号</span>    <span class="token literal-property property">readnessTcpCheckPort</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 就绪检查执行的命令</span>    <span class="token literal-property property">readnessCommand</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 就绪检查启动延时时间</span>    <span class="token literal-property property">readnessStartDelay</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 就绪检查响应时间</span>    <span class="token literal-property property">readnessResDelay</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 就绪检查间隔时间</span>    <span class="token literal-property property">readnessIntervalTime</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 就绪检查健康阈值</span>    <span class="token literal-property property">readnessHealththreshold</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 就绪检查不健康阈值</span>    <span class="token literal-property property">readnessUnHealththreshold</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">replicas</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">lives_tcpCheckPort</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">lives_healthCheckPath</span><span class="token operator">:</span><span class="token string">'/'</span><span class="token punctuation">,</span>    <span class="token literal-property property">lives_healthCheckPort</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">workspace</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">args</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">cmd</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">cpu_request</span><span class="token operator">:</span><span class="token string">'250'</span><span class="token punctuation">,</span>    <span class="token literal-property property">cpu_limit</span><span class="token operator">:</span><span class="token string">'500'</span><span class="token punctuation">,</span>    <span class="token literal-property property">memory_request</span><span class="token operator">:</span><span class="token string">'256'</span><span class="token punctuation">,</span>    <span class="token literal-property property">memory_limit</span><span class="token operator">:</span><span class="token string">'1024'</span><span class="token punctuation">,</span>    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">collapsed</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token literal-property property">editMode</span><span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>newItem<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// 函数用来把健康检查类型转换为相应的数字</span><span class="token keyword">const</span> <span class="token function-variable function">mapHealthCheckType</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">type</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span><span class="token string">"aaaaaaaaaaaaaaaaaaaaaaaaaaaa"</span><span class="token punctuation">)</span>  <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">case</span> <span class="token string">'http'</span><span class="token operator">:</span>      <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> <span class="token string">'tcp'</span><span class="token operator">:</span>      <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> <span class="token string">'exec'</span><span class="token operator">:</span>      <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token keyword">default</span><span class="token operator">:</span>      <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 或者任何合适的默认值</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">createDeployment</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> labels <span class="token operator">=</span> formItems<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>key <span class="token operator">&amp;&amp;</span> item<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      acc<span class="token punctuation">[</span>item<span class="token punctuation">.</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> item<span class="token punctuation">.</span>value<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> acc<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Instance Items before sending to backend:"</span><span class="token punctuation">,</span> instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>  instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Readiness Port for item:"</span><span class="token punctuation">,</span> item<span class="token punctuation">.</span>readnessHealthCheckPort<span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Parsed Port:"</span><span class="token punctuation">,</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>readnessHealthCheckPort<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 确认 parseInt 不是返回 NaN</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>readnessHealthCheckPort<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"Invalid port number: "</span><span class="token punctuation">,</span> item<span class="token punctuation">.</span>readnessHealthCheckPort<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"label = ================="</span><span class="token punctuation">,</span>labels<span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>createForm<span class="token punctuation">.</span>value<span class="token punctuation">.</span>replicas<span class="token punctuation">)</span>    <span class="token keyword">const</span> createParameters <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token string-property property">"namespace"</span><span class="token operator">:</span> createForm<span class="token punctuation">.</span>value<span class="token punctuation">.</span>namespace<span class="token punctuation">,</span>      <span class="token string-property property">"deploymentName"</span><span class="token operator">:</span> createForm<span class="token punctuation">.</span>value<span class="token punctuation">.</span>deploymentname<span class="token punctuation">,</span>      <span class="token string-property property">"podName"</span><span class="token operator">:</span> createForm<span class="token punctuation">.</span>value<span class="token punctuation">.</span>deploymentname<span class="token punctuation">,</span>      <span class="token string-property property">"label"</span><span class="token operator">:</span> labels<span class="token punctuation">,</span>      <span class="token string-property property">"replicas"</span><span class="token operator">:</span> createForm<span class="token punctuation">.</span>value<span class="token punctuation">.</span>replicas<span class="token punctuation">,</span>      <span class="token string-property property">"containers"</span><span class="token operator">:</span> instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token comment">// 如果是空字符串则设置为 false</span>        <span class="token string-property property">"name"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>name<span class="token punctuation">,</span>        <span class="token string-property property">"image"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>image<span class="token punctuation">,</span>        <span class="token string-property property">"version"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>image_tag<span class="token punctuation">,</span>        <span class="token comment">// "ports": item.ports, // 确保这个字段是一个 int32 数组</span>        <span class="token string-property property">"limits_cpu"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>cpu_limit<span class="token punctuation">,</span>        <span class="token string-property property">"limit_memory"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>memory_limit<span class="token punctuation">,</span>        <span class="token string-property property">"requests_cpu"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>cpu_request<span class="token punctuation">,</span>        <span class="token string-property property">"requests_memory"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>memory_request<span class="token punctuation">,</span>        <span class="token string-property property">"work_space"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>workspace<span class="token punctuation">,</span>        <span class="token string-property property">"command"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>cmd<span class="token punctuation">,</span>        <span class="token string-property property">"args"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>args<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 前提是 args 是以空格分隔的字符串</span>        <span class="token string-property property">"readiness_healthCheck"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>isReadinessCheckActive <span class="token operator">||</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token string-property property">"liveness_healthCheck"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>isLivenessCheckActive <span class="token operator">||</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token string-property property">"healthcheckTypeLive"</span><span class="token operator">:</span> <span class="token function">mapHealthCheckType</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>livenessselectedCheckMethod<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string-property property">"healthcheckTypeRead"</span><span class="token operator">:</span> <span class="token function">mapHealthCheckType</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>ReadinessSelectedCheckMethod<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string-property property">"resource"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token string-property property">"livenessProbe"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token string-property property">"path"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>lives_healthCheckPath<span class="token punctuation">,</span>          <span class="token string-property property">"port"</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>lives_healthCheckPort<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token string-property property">"cmd"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>livenessCommand<span class="token punctuation">,</span>          <span class="token string-property property">"initialDelaySecond"</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>livenessStartDelay<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token string-property property">"timeoutSeconds"</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>livenessResDelay<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token string-property property">"periodSeconds"</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>livenessIntervalTime<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token string-property property">"successThreshold"</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>livenessHealththreshold<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token string-property property">"failureThreshold"</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>livenessUnHealththreshold<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token string-property property">"readinessProbe"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token string-property property">"path"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>readnessHealthCheckPath<span class="token punctuation">,</span>          <span class="token string-property property">"port"</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>readnessHealthCheckPort<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token string-property property">"cmd"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>readnessCommand<span class="token punctuation">,</span>          <span class="token string-property property">"initialDelaySecond"</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>readnessStartDelay<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token string-property property">"timeoutSeconds"</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>readnessResDelay<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token string-property property">"periodSeconds"</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>readnessIntervalTime<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token string-property property">"successThreshold"</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>readnessHealththreshold<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token string-property property">"failureThreshold"</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>readnessUnHealththreshold<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>createParameters<span class="token punctuation">.</span>value<span class="token punctuation">)</span>    <span class="token comment">// 发送 createParameters.value 到后端...</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> resps <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">CREATE_DEPLOYMENT</span><span class="token punctuation">(</span>createParameters<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>resps<span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>resps<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        createDialogVisible<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span>        ElMessage<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">"创建成功"</span><span class="token punctuation">)</span>        <span class="token function">getDeployData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        ElMessage<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>resps<span class="token punctuation">.</span>data<span class="token punctuation">.</span>message<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 出错时返回空数组</span>    <span class="token punctuation">&#125;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>createForm<span class="token punctuation">.</span>value<span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"标签："</span><span class="token punctuation">,</span>formItems<span class="token punctuation">.</span>value<span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"~~~~~~~~~~~~~~~~"</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 调用 goToCreateDeployment 函数以响应对话框的打开</span><span class="token function">watch</span><span class="token punctuation">(</span>createDialogVisible<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">newVal</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>newVal<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">goToCreateDeployment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">generateUniqueId</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 生成唯一标识符的逻辑</span>  <span class="token keyword">const</span> timestamp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> randomSuffix <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>timestamp<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>randomSuffix<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">expandInstanceItem</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>editMode <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>collapsed <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">saveInstanceItem</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>editMode <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>collapsed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">removeInstanceItem</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">onSubmit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> formEl <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  formEl<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">valid</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>valid<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 提交表单</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'表单验证失败'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> newNamespace <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>  <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> currentPage <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">let</span> pageSize <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token keyword">const</span> small <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token keyword">const</span> background <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token keyword">const</span> disabled <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token keyword">const</span> dialogVisible <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> currentDeployName <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> yamlContent <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 新增命名空间列表和选中的命名空间</span><span class="token keyword">const</span> namespaces <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 用于存储命名空间列表</span><span class="token keyword">const</span> selectedNamespace <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'selectedNamespace'</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 用于存储用户选择的命名空间</span><span class="token comment">// 方法来获取命名空间列表</span><span class="token comment">// fetchNamespaces 函数使用 getNSData 的返回值来更新命名空间的下拉菜单</span><span class="token keyword">const</span> <span class="token function-variable function">fetchNamespaces</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  namespaces<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getNSData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// fetchNamespaces 函数使用 getNSData 的返回值来更新命名空间的下拉菜单</span><span class="token comment">// getNSData 函数获取命名空间并返回名称数组</span><span class="token keyword">const</span> <span class="token function-variable function">getNSData</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">NAMESPACE_LIST</span><span class="token punctuation">(</span>namespaceAllParameters<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>resp <span class="token operator">&amp;&amp;</span> resp<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span> <span class="token operator">&amp;&amp;</span> resp<span class="token punctuation">.</span>data <span class="token operator">&amp;&amp;</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>Items<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 只返回命名空间的名称数组</span>      <span class="token keyword">return</span> resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>Items<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">ns</span> <span class="token operator">=></span> ns<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'无法获取数据或数据格式不正确'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 出错时返回空数组</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> namespaceAllParameters <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">page_size</span><span class="token operator">:</span> <span class="token number">100000</span><span class="token punctuation">,</span>  <span class="token literal-property property">page_number</span><span class="token operator">:</span> currentPage<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token function-variable function">formatImages</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">images</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> images<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">image</span> <span class="token operator">=></span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>image<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/div></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">goToCreateDeployment</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  dialogSelectedNamespace<span class="token punctuation">.</span>value <span class="token operator">=</span> selectedNamespace<span class="token punctuation">.</span>value<span class="token punctuation">;</span>  createDialogVisible<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token comment">// 清空现有的实例内容器并添加一个新的实例内容器</span>  instanceItems<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token function">addInstanceItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">//编辑器配置</span><span class="token keyword">const</span> cmOptions <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 语言及语法模式</span>  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'text/yaml'</span><span class="token punctuation">,</span>  <span class="token comment">// 主题</span>  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token string">'monokai'</span><span class="token punctuation">,</span>  <span class="token literal-property property">lint</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token comment">// 显示行数</span>  <span class="token literal-property property">lineNumbers</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token literal-property property">smartIndent</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//智能缩进</span>  <span class="token literal-property property">indentUnit</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token comment">// 智能缩进单元长度为 4 个空格</span>  <span class="token literal-property property">styleActiveLine</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 显示选中行的样式</span>  <span class="token literal-property property">matchBrackets</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//每当光标位于匹配的方括号旁边时，都会使其高亮显示</span>  <span class="token literal-property property">readOnly</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>  <span class="token literal-property property">lineWrapping</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">//自动换行</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">scaleDeployment</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">row</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>row<span class="token punctuation">.</span>deploymentName<span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>selectedNamespace<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">restartDeployment</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">row</span><span class="token punctuation">)</span> <span class="token operator">=></span><span class="token punctuation">&#123;</span>  ElMessageBox<span class="token punctuation">.</span><span class="token function">confirm</span><span class="token punctuation">(</span>      <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">确定要重启Deployment "</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>row<span class="token punctuation">.</span>deploymentName<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">" 吗?</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>      <span class="token string">'警告'</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        <span class="token literal-property property">confirmButtonText</span><span class="token operator">:</span> <span class="token string">'确认'</span><span class="token punctuation">,</span>        <span class="token literal-property property">cancelButtonText</span><span class="token operator">:</span> <span class="token string">'取消'</span><span class="token punctuation">,</span>        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'warning'</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span>  <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> restarParameters <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">deploymentName</span><span class="token operator">:</span> row<span class="token punctuation">.</span>deploymentName<span class="token punctuation">,</span>      <span class="token literal-property property">namespace</span><span class="token operator">:</span> selectedNamespace    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">RESTART_DEPLOYMENT</span><span class="token punctuation">(</span>restarParameters<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"————————————————"</span><span class="token punctuation">,</span>resp<span class="token punctuation">)</span>      <span class="token function">ElMessage</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'success'</span><span class="token punctuation">,</span>        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Deployment "</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>row<span class="token punctuation">.</span>deploymentName<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">" 已重启</span><span class="token template-punctuation string">`</span></span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">getDeployData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>      ElMessage<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">重启失败: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>e<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">handleSizeChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>val<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> items per page</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>  namespaceAllParameters<span class="token punctuation">.</span>page_size <span class="token operator">=</span> val  localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">'nspageSize'</span><span class="token punctuation">,</span>val<span class="token punctuation">)</span>  <span class="token function">getNSData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> handleInput <span class="token operator">=</span> _<span class="token punctuation">.</span><span class="token function">debounce</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">await</span> <span class="token function">search</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 使用 lodash 的 debounce 函数来防抖，防止搜索操作太频繁</span><span class="token keyword">const</span> <span class="token function-variable function">updateDeploy</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span><span class="token punctuation">&#123;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> updatedJson <span class="token operator">=</span> yaml2obj<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>yamlContent<span class="token punctuation">.</span>value<span class="token punctuation">)</span>    <span class="token keyword">const</span> jsonString <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>updatedJson<span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"?????????"</span><span class="token punctuation">,</span>updatedJson<span class="token punctuation">)</span>    updateParameters<span class="token punctuation">.</span>deploymentName <span class="token operator">=</span> currentDeployName<span class="token punctuation">.</span>value    updateParameters<span class="token punctuation">.</span>content <span class="token operator">=</span> jsonString    <span class="token keyword">await</span> <span class="token function">updateDeployData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">await</span> <span class="token function">getDeployData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    ElMessage<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>e<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">onChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span><span class="token operator">=></span> <span class="token punctuation">&#123;</span>  yamlContent<span class="token punctuation">.</span>value <span class="token operator">=</span> val<span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">handleCurrentChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">current page: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>val<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>  currentPage<span class="token punctuation">.</span>value <span class="token operator">=</span> val  namespaceAllParameters<span class="token punctuation">.</span>page_number <span class="token operator">=</span> val  localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">'nscurrentPage'</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 将当前页保存在 localStorage</span>  <span class="token function">getNSData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">viewYAML</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">row</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'显示YAML信息'</span><span class="token punctuation">,</span> row<span class="token punctuation">.</span>deploymentName<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 这里可以编写显示YAML信息的逻辑</span>  <span class="token comment">// 假设提供了 `getYAMLContent` 方法来获取 YAML 内容</span>  <span class="token comment">// 直接使用传入的 row 作为 YAML 内容</span>  <span class="token function">getDeployDetailData</span><span class="token punctuation">(</span>row<span class="token punctuation">.</span>deploymentName<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">confirmDelete</span> <span class="token operator">=</span>  <span class="token punctuation">(</span><span class="token parameter">row</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>confirmDelete  ElMessageBox<span class="token punctuation">.</span><span class="token function">confirm</span><span class="token punctuation">(</span>      <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">确定要删除Deployment "</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>row<span class="token punctuation">.</span>deploymentName<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">" 吗?</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>      <span class="token string">'警告'</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        <span class="token literal-property property">confirmButtonText</span><span class="token operator">:</span> <span class="token string">'确认'</span><span class="token punctuation">,</span>        <span class="token literal-property property">cancelButtonText</span><span class="token operator">:</span> <span class="token string">'取消'</span><span class="token punctuation">,</span>        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'warning'</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span>  <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> deleteNSParameters <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">deploymentName</span><span class="token operator">:</span> row<span class="token punctuation">.</span>deploymentName<span class="token punctuation">,</span>      <span class="token literal-property property">namespace</span><span class="token operator">:</span> selectedNamespace<span class="token punctuation">.</span>value<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>deleteNSParameters<span class="token punctuation">.</span>value<span class="token punctuation">)</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">DELETE_DEPLOYMENT</span><span class="token punctuation">(</span>deleteNSParameters<span class="token punctuation">.</span>value<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"————————————————"</span><span class="token punctuation">,</span>resp<span class="token punctuation">)</span>      <span class="token function">ElMessage</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'success'</span><span class="token punctuation">,</span>        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Deployment "</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>row<span class="token punctuation">.</span>deploymentName<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">" 已被删除</span><span class="token template-punctuation string">`</span></span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">getDeployData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>      ElMessage<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">删除失败: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>e<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token function">ElMessage</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'info'</span><span class="token punctuation">,</span>      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'已取消删除'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">formatDateTime</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">dateTimeString</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> dateTimeString<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'T'</span><span class="token punctuation">,</span> <span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'Z'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// 示例数据和方法</span><span class="token keyword">const</span> searchText <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> tableData <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span>  <span class="token punctuation">&#123;</span>    <span class="token literal-property property">deploymentName</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token literal-property property">Labels</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">Status</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">Images</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">createTime</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>    <span class="token literal-property property">Operation</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>    <span class="token literal-property property">Replicas</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// ...其他数据项</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">search</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'执行搜索:'</span><span class="token punctuation">,</span> searchText<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> searchParameters <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">page_size</span><span class="token operator">:</span> pageSize<span class="token punctuation">,</span>    <span class="token literal-property property">page_number</span><span class="token operator">:</span> currentPage<span class="token punctuation">,</span>    <span class="token literal-property property">filterName</span><span class="token operator">:</span> searchText<span class="token punctuation">.</span>value<span class="token punctuation">,</span>    <span class="token literal-property property">namespace</span><span class="token operator">:</span> selectedNamespace  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">DEPLOYMENT_LIST</span><span class="token punctuation">(</span>searchParameters<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>resp <span class="token operator">&amp;&amp;</span> resp<span class="token punctuation">.</span>data <span class="token operator">&amp;&amp;</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>Items<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      tableData<span class="token punctuation">.</span>value <span class="token operator">=</span> resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>Items<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 计算运行中的副本数</span>        <span class="token keyword">const</span> runningReplicas <span class="token operator">=</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>replicas <span class="token operator">-</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>unavailableReplicas <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> expectedReplicas <span class="token operator">=</span> item<span class="token punctuation">.</span>spec<span class="token punctuation">.</span>replicas<span class="token punctuation">;</span>        <span class="token keyword">const</span> showLoading <span class="token operator">=</span> runningReplicas <span class="token operator">!==</span> expectedReplicas<span class="token punctuation">;</span> <span class="token comment">// 加载图标仅在期望和运行副本数不匹配时显示</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          <span class="token literal-property property">deploymentName</span><span class="token operator">:</span> item<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>name<span class="token punctuation">,</span>          <span class="token literal-property property">Labels</span><span class="token operator">:</span> <span class="token function">formatLabels</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>labels<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token literal-property property">showLoading</span><span class="token operator">:</span> showLoading<span class="token punctuation">,</span> <span class="token comment">// 添加 showLoading 标志</span>          <span class="token comment">// 更新状态显示为“运行副本数/期望副本数”格式</span>          <span class="token literal-property property">Status</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>runningReplicas<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>item<span class="token punctuation">.</span>spec<span class="token punctuation">.</span>replicas<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>          <span class="token literal-property property">Images</span><span class="token operator">:</span> item<span class="token punctuation">.</span>spec<span class="token punctuation">.</span>template<span class="token punctuation">.</span>spec<span class="token punctuation">.</span>containers<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">container</span> <span class="token operator">=></span> container<span class="token punctuation">.</span>image<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token literal-property property">createTime</span><span class="token operator">:</span> <span class="token function">formatDateTime</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>creationTimestamp<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token comment">// 其他属性...</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 更新部署计数</span>    deploymentCount<span class="token punctuation">.</span>value <span class="token operator">=</span> resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>total<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">refresh</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token function">getDeployData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'刷新表格数据'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> updateParameters <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">deploymentName</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>  <span class="token literal-property property">namespace</span><span class="token operator">:</span> selectedNamespace<span class="token punctuation">,</span>  <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token function-variable function">updateDeployData</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"你吗的"</span><span class="token punctuation">,</span>updateParameters<span class="token punctuation">.</span>content<span class="token punctuation">)</span>    <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">UPDATE_DEPLOYMENT</span><span class="token punctuation">(</span>updateParameters<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>resp<span class="token punctuation">.</span>code <span class="token operator">!==</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      ElMessage<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>message<span class="token punctuation">)</span>      <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    ElMessage<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">"更新成功"</span><span class="token punctuation">)</span>    dialogVisible<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span>  <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>    ElMessage<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>e<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> deploymentParameters <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">page_size</span><span class="token operator">:</span> pageSize<span class="token punctuation">,</span>  <span class="token literal-property property">page_number</span><span class="token operator">:</span> currentPage<span class="token punctuation">,</span>  <span class="token literal-property property">namespace</span><span class="token operator">:</span> selectedNamespace<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 设置watcher来监听selectedNamespace的改变</span><span class="token function">watch</span><span class="token punctuation">(</span>selectedNamespace<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">newNamespace</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 更新deploymentParameters中的namespace</span>  deploymentParameters<span class="token punctuation">.</span>namespace <span class="token operator">=</span> newNamespace<span class="token punctuation">;</span>  <span class="token comment">// 重新调用getDeployData以获取新命名空间的部署数据</span>  <span class="token function">getDeployData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> deploymentCount <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">// 在这里创建一个方法来将 Labels 对象转换为一个字符串数组</span><span class="token comment">// 格式化标签为字符串数组</span><span class="token keyword">const</span> <span class="token function-variable function">formatLabels</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">labelsMap</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> labelsMap <span class="token operator">?</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>labelsMap<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>key<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>value<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> systemNamespaces <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'default'</span><span class="token punctuation">,</span> <span class="token string">'kube-system'</span><span class="token punctuation">,</span> <span class="token string">'kube-public'</span><span class="token punctuation">,</span> <span class="token string">'kube-node-lease'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">getDeployData</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">DEPLOYMENT_LIST</span><span class="token punctuation">(</span>deploymentParameters<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>resp <span class="token operator">&amp;&amp;</span> resp<span class="token punctuation">.</span>data <span class="token operator">&amp;&amp;</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>Items<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      tableData<span class="token punctuation">.</span>value <span class="token operator">=</span> resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>Items<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 计算运行中的副本数</span>        <span class="token keyword">const</span> runningReplicas <span class="token operator">=</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>replicas <span class="token operator">-</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>unavailableReplicas <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> expectedReplicas <span class="token operator">=</span> item<span class="token punctuation">.</span>spec<span class="token punctuation">.</span>replicas<span class="token punctuation">;</span>        <span class="token keyword">const</span> showLoading <span class="token operator">=</span> runningReplicas <span class="token operator">!==</span> expectedReplicas<span class="token punctuation">;</span> <span class="token comment">// 加载图标仅在期望和运行副本数不匹配时显示</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          <span class="token literal-property property">deploymentName</span><span class="token operator">:</span> item<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>name<span class="token punctuation">,</span>          <span class="token literal-property property">Labels</span><span class="token operator">:</span> <span class="token function">formatLabels</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>labels<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token literal-property property">showLoading</span><span class="token operator">:</span> showLoading<span class="token punctuation">,</span> <span class="token comment">// 添加 showLoading 标志</span>          <span class="token comment">// 更新状态显示为“运行副本数/期望副本数”格式</span>          <span class="token literal-property property">Status</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>runningReplicas<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>item<span class="token punctuation">.</span>spec<span class="token punctuation">.</span>replicas<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>          <span class="token literal-property property">Images</span><span class="token operator">:</span> item<span class="token punctuation">.</span>spec<span class="token punctuation">.</span>template<span class="token punctuation">.</span>spec<span class="token punctuation">.</span>containers<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">container</span> <span class="token operator">=></span> container<span class="token punctuation">.</span>image<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token literal-property property">createTime</span><span class="token operator">:</span> <span class="token function">formatDateTime</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>creationTimestamp<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token literal-property property">Replicas</span><span class="token operator">:</span> item<span class="token punctuation">.</span>spec<span class="token punctuation">.</span>replicas          <span class="token comment">// 其他属性...</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 更新部署计数</span>    deploymentCount<span class="token punctuation">.</span>value <span class="token operator">=</span> resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>total<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">getDeployDetailData</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">deployName</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> DeploymentDetailparams <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">deploymentName</span><span class="token operator">:</span> deployName<span class="token punctuation">,</span>      <span class="token literal-property property">namespace</span><span class="token operator">:</span> selectedNamespace<span class="token punctuation">.</span>value    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"ddddddddd"</span><span class="token punctuation">,</span>DeploymentDetailparams<span class="token punctuation">)</span>    <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">DEPLOYMENT_DETAIL</span><span class="token punctuation">(</span>DeploymentDetailparams<span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"cccccccc"</span><span class="token punctuation">,</span>resp<span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"yaml ======="</span><span class="token punctuation">,</span>json2yaml<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>    yamlContent<span class="token punctuation">.</span>value <span class="token operator">=</span> json2yaml<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 确保将数据赋值给 yamlContent</span>    currentDeployName<span class="token punctuation">.</span>value <span class="token operator">=</span> resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>name    updateParameters<span class="token punctuation">.</span>content <span class="token operator">=</span> yamlContent<span class="token punctuation">.</span>value    <span class="token keyword">await</span>  <span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    dialogVisible<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"你吗"</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 在setup函数中定义定时器</span><span class="token keyword">let</span> refreshInterval <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token function">loadSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  refreshInterval <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token function">getDeployData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">30000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 每30秒刷新一次</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 组件卸载前保存命名空间</span><span class="token function">onBeforeUnmount</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token function">saveSelection</span><span class="token punctuation">(</span>selectedNamespace<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">onBeforeMount</span><span class="token punctuation">(</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token function">clearInterval</span><span class="token punctuation">(</span>refreshInterval<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 尝试从 localStorage 中读取状态</span>  <span class="token keyword">const</span> savedPageSize <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'nspageSize'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> savedCurrentPage <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'nscurrentPage'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 如果存在则更新到响应式变量中</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>savedPageSize<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    pageSize<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>savedPageSize<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>savedCurrentPage<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    currentPage<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>savedCurrentPage<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">getDeployData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token keyword">await</span> <span class="token function">fetchNamespaces</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取并更新命名空间列表</span>  <span class="token comment">// getNSAllData()</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>style scoped<span class="token operator">></span><span class="token punctuation">.</span>loading<span class="token operator">-</span>icon <span class="token punctuation">&#123;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 20px<span class="token punctuation">;</span> <span class="token comment">/* 或者您希望的任何尺寸 */</span>  <span class="token literal-property property">height</span><span class="token operator">:</span> 20px<span class="token punctuation">;</span> <span class="token comment">/* 保持与宽度相同以保持图标的纵横比 */</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 5px<span class="token punctuation">;</span> <span class="token comment">/* 添加一点空间在状态文本和图标之间 */</span>  <span class="token literal-property property">animation</span><span class="token operator">:</span> loading<span class="token operator">-</span>spin 2s linear infinite<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 如果需要，可以移除这个类，因为它可能会导致对齐问题 */</span><span class="token comment">/* .loader &#123;  animation: loader-spin 1s linear infinite;&#125; */</span>@keyframes loading<span class="token operator">-</span>spin <span class="token punctuation">&#123;</span>  <span class="token number">0</span><span class="token operator">%</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">transform</span><span class="token operator">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>0deg<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token number">100</span><span class="token operator">%</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">transform</span><span class="token operator">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>360deg<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>container <span class="token punctuation">&#123;</span>  <span class="token literal-property property">margin</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  background<span class="token operator">-</span>color<span class="token operator">:</span> #<span class="token constant">F2F2F2</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>deployment<span class="token operator">-</span>header <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>  justify<span class="token operator">-</span>content<span class="token operator">:</span> space<span class="token operator">-</span>between<span class="token punctuation">;</span>  <span class="token literal-property property">padding</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  <span class="token literal-property property">margin</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> <span class="token operator">-</span>10px<span class="token punctuation">;</span>  <span class="token literal-property property">background</span><span class="token operator">:</span> #<span class="token constant">FFF</span><span class="token punctuation">;</span>  <span class="token literal-property property">border</span><span class="token operator">:</span> 2px solid #ebeef5<span class="token punctuation">;</span>  box<span class="token operator">-</span>shadow<span class="token operator">:</span> <span class="token number">0</span> 2px 10px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 新增左侧部分样式，放置“命名空间：”文本和下拉框 */</span><span class="token punctuation">.</span>left<span class="token operator">-</span>section <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 确保下拉框和文本在同一行 */</span><span class="token punctuation">.</span>el<span class="token operator">-</span>select <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 为下拉框添加左侧间隔 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>header <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>  justify<span class="token operator">-</span>content<span class="token operator">:</span> space<span class="token operator">-</span>between<span class="token punctuation">;</span> <span class="token comment">/* 添加此属性对子元素进行分散对齐 */</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> 0px<span class="token punctuation">;</span>  <span class="token literal-property property">gap</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  <span class="token literal-property property">padding</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  <span class="token literal-property property">background</span><span class="token operator">:</span> #<span class="token constant">FFF</span><span class="token punctuation">;</span>  <span class="token literal-property property">border</span><span class="token operator">:</span> 2px solid #ebeef5<span class="token punctuation">;</span>  box<span class="token operator">-</span>shadow<span class="token operator">:</span> <span class="token number">0</span> 2px 12px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>search<span class="token operator">-</span>input <span class="token punctuation">&#123;</span>  <span class="token comment">/*flex-grow: 1;*/</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 200px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>table<span class="token operator">-</span>wrapper <span class="token punctuation">&#123;</span>  <span class="token literal-property property">background</span><span class="token operator">:</span> #<span class="token constant">FFF</span><span class="token punctuation">;</span>  <span class="token literal-property property">border</span><span class="token operator">:</span> 2px solid #ebeef5<span class="token punctuation">;</span> <span class="token comment">/* 浅色边框线 */</span>  box<span class="token operator">-</span>shadow<span class="token operator">:</span> <span class="token number">0</span> 2px 12px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>paginations <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>top<span class="token operator">:</span> 10px<span class="token punctuation">;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 20px<span class="token punctuation">;</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 左侧组合样式，创建按钮和搜索框靠在一起 */</span><span class="token punctuation">.</span>left<span class="token operator">-</span>group <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>  <span class="token literal-property property">gap</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* You can adjust the gap as needed */</span><span class="token punctuation">&#125;</span><span class="token comment">/* 右侧刷新按钮 */</span><span class="token punctuation">.</span>right<span class="token operator">-</span>group <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>yaml<span class="token operator">-</span>content <span class="token punctuation">&#123;</span>  background<span class="token operator">-</span>color<span class="token operator">:</span> #f5f5f5<span class="token punctuation">;</span>  border<span class="token operator">-</span>left<span class="token operator">:</span> 3px solid #4795EE<span class="token punctuation">;</span>  <span class="token literal-property property">padding</span><span class="token operator">:</span> 15px<span class="token punctuation">;</span>  white<span class="token operator">-</span>space<span class="token operator">:</span> pre<span class="token operator">-</span>wrap<span class="token punctuation">;</span>  text<span class="token operator">-</span>align<span class="token operator">:</span> left<span class="token punctuation">;</span>  <span class="token literal-property property">margin</span><span class="token operator">:</span> 20px <span class="token number">0</span><span class="token punctuation">;</span>  overflow<span class="token operator">-</span>x<span class="token operator">:</span> auto<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>status<span class="token operator">-</span>active <span class="token punctuation">&#123;</span>  <span class="token literal-property property">color</span><span class="token operator">:</span> #67C23A<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>status<span class="token operator">-</span>inactive <span class="token punctuation">&#123;</span>  <span class="token literal-property property">color</span><span class="token operator">:</span> red<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>dialog<span class="token operator">-</span>footer <span class="token punctuation">&#123;</span>  <span class="token comment">/*text-align: right;*/</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  justify<span class="token operator">-</span>content<span class="token operator">:</span> flex<span class="token operator">-</span>end<span class="token punctuation">;</span>  <span class="token literal-property property">padding</span><span class="token operator">:</span> 8px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>deployment<span class="token operator">-</span>header <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>  <span class="token literal-property property">height</span><span class="token operator">:</span> 30px<span class="token punctuation">;</span>  <span class="token literal-property property">padding</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  <span class="token literal-property property">margin</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> <span class="token operator">-</span>10px<span class="token punctuation">;</span>  <span class="token literal-property property">background</span><span class="token operator">:</span> #<span class="token constant">FFF</span><span class="token punctuation">;</span>  <span class="token literal-property property">border</span><span class="token operator">:</span> 2px solid #ebeef5<span class="token punctuation">;</span>  box<span class="token operator">-</span>shadow<span class="token operator">:</span> <span class="token number">0</span> 2px 10px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>form<span class="token operator">-</span>item<span class="token operator">-</span><span class="token keyword">with</span><span class="token operator">-</span>help <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>top<span class="token operator">:</span> 10px<span class="token punctuation">;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>form<span class="token operator">-</span>item<span class="token operator">-</span><span class="token keyword">with</span><span class="token operator">-</span>resource <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>top<span class="token operator">:</span> 10px<span class="token punctuation">;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>form<span class="token operator">-</span>item <span class="token punctuation">&#123;</span>  flex<span class="token operator">-</span>wrap<span class="token operator">:</span> wrap<span class="token punctuation">;</span> <span class="token comment">/* 确保换行 */</span>  <span class="token comment">/*align-items: center; !* 如果需要垂直居中 *!*/</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 保持垂直间距 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>item <span class="token punctuation">&#123;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 200px<span class="token punctuation">;</span>  margin<span class="token operator">-</span>right<span class="token operator">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>help<span class="token operator">-</span>text <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> block<span class="token punctuation">;</span> <span class="token comment">/* 保证帮助文本在新的行显示 */</span>  font<span class="token operator">-</span>size<span class="token operator">:</span> 12px<span class="token punctuation">;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 1000px<span class="token punctuation">;</span>  <span class="token literal-property property">color</span><span class="token operator">:</span> #<span class="token number">999999</span><span class="token punctuation">;</span>  margin<span class="token operator">-</span>top<span class="token operator">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span><span class="token keyword">with</span><span class="token operator">-</span>help <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>top<span class="token operator">:</span> 20px<span class="token punctuation">;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  flex<span class="token operator">-</span>direction<span class="token operator">:</span> column<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>deployname <span class="token punctuation">&#123;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 300px<span class="token punctuation">;</span> <span class="token comment">/* 限制这个div的宽度 */</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  flex<span class="token operator">-</span>direction<span class="token operator">:</span> column<span class="token punctuation">;</span> <span class="token comment">/* 让子元素垂直排列 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>containername <span class="token punctuation">&#123;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 250px<span class="token punctuation">;</span> <span class="token comment">/* 限制这个div的宽度 */</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> <span class="token operator">-</span>50px<span class="token punctuation">;</span>  flex<span class="token operator">-</span>direction<span class="token operator">:</span> column<span class="token punctuation">;</span> <span class="token comment">/* 让子元素垂直排列 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>add<span class="token operator">-</span>button <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>top<span class="token operator">:</span> <span class="token operator">-</span>20px<span class="token punctuation">;</span> <span class="token comment">/* 添加按钮与输入行之间的空间 */</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 200px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>container<span class="token operator">-</span>cpu <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  flex<span class="token operator">-</span>direction<span class="token operator">:</span> column<span class="token punctuation">;</span>  <span class="token comment">/*padding-left: -20px; !* 往右移动整个容器 *!*/</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>cpu<span class="token operator">-</span>label <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> 5px<span class="token punctuation">;</span> <span class="token comment">/* 调整为所需的间距 */</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> <span class="token operator">-</span>50px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>container <span class="token punctuation">&#123;</span>  <span class="token literal-property property">margin</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>item<span class="token operator">-</span>container <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>content<span class="token operator">-</span>container <span class="token punctuation">&#123;</span>  background<span class="token operator">-</span>color<span class="token operator">:</span> #<span class="token constant">F2F2F2</span><span class="token punctuation">;</span>  <span class="token literal-property property">padding</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 700px<span class="token punctuation">;</span>  justify<span class="token operator">-</span>content<span class="token operator">:</span> space<span class="token operator">-</span>between<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>  <span class="token literal-property property">transition</span><span class="token operator">:</span> height <span class="token number">0</span><span class="token punctuation">.</span>3s<span class="token punctuation">;</span>  <span class="token literal-property property">overflow</span><span class="token operator">:</span> hidden<span class="token punctuation">;</span>  <span class="token literal-property property">position</span><span class="token operator">:</span> relative<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>content<span class="token operator">-</span>container<span class="token punctuation">.</span>collapsed <span class="token punctuation">&#123;</span>  <span class="token literal-property property">height</span><span class="token operator">:</span> 40px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>info <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>actions <span class="token punctuation">&#123;</span>  <span class="token literal-property property">position</span><span class="token operator">:</span> absolute<span class="token punctuation">;</span>  <span class="token literal-property property">right</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 调整为需要的值 */</span>  <span class="token literal-property property">top</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 调整为需要的值 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>row <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>  <span class="token literal-property property">gap</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  <span class="token comment">/*margin-left: -50px;*/</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>row <span class="token punctuation">.</span>el<span class="token operator">-</span>input <span class="token punctuation">&#123;</span>  <span class="token literal-property property">flex</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>row label <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 或者需要的任何值 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>row <span class="token punctuation">.</span>el<span class="token operator">-</span>input <span class="token punctuation">.</span>el<span class="token operator">-</span>input__inner <span class="token punctuation">&#123;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span> <span class="token comment">/* 让输入框充满其容器 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>containername p <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 为“CPU：”下方添加一些间隔 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>form<span class="token operator">-</span>item<span class="token operator">-</span>resource <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 20px<span class="token punctuation">;</span> <span class="token comment">/* 整个表单项向右移动 20px */</span>  margin<span class="token operator">-</span>top<span class="token operator">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>custom<span class="token operator">-</span>form<span class="token operator">-</span>item <span class="token punctuation">&#123;</span>  <span class="token literal-property property">height</span><span class="token operator">:</span> auto<span class="token punctuation">;</span>  <span class="token literal-property property">overflow</span><span class="token operator">:</span> auto<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>check<span class="token operator">-</span>method<span class="token operator">-</span>container<span class="token punctuation">,</span><span class="token punctuation">.</span>execution<span class="token operator">-</span>command<span class="token operator">-</span>container <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 添加一些垂直间距 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>method<span class="token operator">-</span>label <span class="token punctuation">&#123;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 100px<span class="token punctuation">;</span>  <span class="token literal-property property">margin</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  margin<span class="token operator">-</span>right<span class="token operator">:</span> 20px<span class="token punctuation">;</span> <span class="token comment">/* 文本与选择框/输入框之间的间隔 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>command<span class="token operator">-</span>label <span class="token punctuation">&#123;</span>  <span class="token comment">/*margin-right: 20px; !* 文本与输入框之间的间隔 *!*/</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 100px<span class="token punctuation">;</span>  <span class="token literal-property property">margin</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>livenessdiv <span class="token punctuation">&#123;</span>  background<span class="token operator">-</span>color<span class="token operator">:</span> white<span class="token punctuation">;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 500px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>port<span class="token operator">-</span>range <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>healthContainer <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> <span class="token operator">-</span>50px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>el<span class="token operator">-</span>select<span class="token punctuation">,</span><span class="token punctuation">.</span>el<span class="token operator">-</span>input <span class="token punctuation">&#123;</span>  <span class="token comment">/*flex-grow: 1; !* 输入框和选择框将占据剩余空间 *!*/</span>  max<span class="token operator">-</span>width<span class="token operator">:</span> <span class="token function">calc</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token operator">%</span> <span class="token operator">-</span> 100px<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* 限制最大宽度，这里的100px是示例，可以根据实际情况调整 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>button<span class="token operator">-</span>group <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  justify<span class="token operator">-</span>content<span class="token operator">:</span> center<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>  <span class="token literal-property property">gap</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 调整按钮之间的间隔 */</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2、pod开发"><a href="#2、pod开发" class="headerlink" title="2、pod开发"></a>2、pod开发</h5><h5 id="（1）功能-1"><a href="#（1）功能-1" class="headerlink" title="（1）功能"></a>（1）功能</h5><p>列表、详情、更新、删除、日志、终端</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"container"</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 第一部分<span class="token operator">:</span> 头部 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"h-6"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>el<span class="token operator">-</span>menu        <span class="token operator">:</span><span class="token keyword">default</span><span class="token operator">-</span>active<span class="token operator">=</span><span class="token string">"activeIndex"</span>        <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"el-menu-demo"</span>        mode<span class="token operator">=</span><span class="token string">"horizontal"</span>        background<span class="token operator">-</span>color<span class="token operator">=</span><span class="token string">"#545c64"</span>        text<span class="token operator">-</span>color<span class="token operator">=</span><span class="token string">"#fff"</span>        active<span class="token operator">-</span>text<span class="token operator">-</span>color<span class="token operator">=</span><span class="token string">"#ffd04b"</span>        @select<span class="token operator">=</span><span class="token string">"handleSelect"</span>    <span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>menu<span class="token operator">-</span>item index<span class="token operator">=</span><span class="token string">"1"</span><span class="token operator">></span>Pod管理<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>menu<span class="token operator">-</span>item<span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>menu<span class="token operator">-</span>item index<span class="token operator">=</span><span class="token string">"2"</span><span class="token operator">></span>日志<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>menu<span class="token operator">-</span>item<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>menu<span class="token operator">-</span>item index<span class="token operator">=</span><span class="token string">"3"</span><span class="token operator">></span>详情<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>menu<span class="token operator">-</span>item<span class="token operator">></span><span class="token operator">--</span><span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>menu<span class="token operator">-</span>item index<span class="token operator">=</span><span class="token string">"3"</span><span class="token operator">></span><span class="token constant">YAML</span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>menu<span class="token operator">-</span>item<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>menu<span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"header shadow"</span> v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"activeIndex ==='1'"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"left-group"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">"text"</span> @click<span class="token operator">=</span><span class="token string">"goBack"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon style<span class="token operator">=</span><span class="token string">"font-size: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span>ArrowLeft <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>input placeholder<span class="token operator">=</span><span class="token string">"请输入内容"</span> v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"searchText"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"search-input"</span> @input<span class="token operator">=</span><span class="token string">"handleInput"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>template #append<span class="token operator">></span>            <span class="token operator">&lt;</span>el<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">"primary"</span> @click<span class="token operator">=</span><span class="token string">"search()"</span><span class="token operator">></span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon<span class="token operator">></span><span class="token operator">&lt;</span>Search <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 移动的刷新按钮，保留在右侧 <span class="token operator">--</span><span class="token operator">></span>      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"right-group"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">"refresh"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon<span class="token operator">></span><span class="token operator">&lt;</span>Refresh <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">></span>          <span class="token operator">&lt;</span>span<span class="token operator">></span> 刷新 <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"header shadow"</span> v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"activeIndex ==='3'"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"left-group"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">"text"</span> @click<span class="token operator">=</span><span class="token string">"goBack"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon style<span class="token operator">=</span><span class="token string">"font-size: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span>ArrowLeft <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"header shadow"</span> v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"activeIndex ==='2'"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"left-group"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">"text"</span> @click<span class="token operator">=</span><span class="token string">"goBack"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon style<span class="token operator">=</span><span class="token string">"font-size: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span>ArrowLeft <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 选择器容器 <span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"selectors"</span><span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 第一个选择器 <span class="token operator">--</span><span class="token operator">></span>          <span class="token operator">&lt;</span>el<span class="token operator">-</span>select v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"selectedValue1"</span> placeholder<span class="token operator">=</span><span class="token string">"请选择"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"selector"</span>  @change<span class="token operator">=</span><span class="token string">"handlePodChange"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>el<span class="token operator">-</span>option                v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"option in tableData"</span>                <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"option.podName"</span>                <span class="token operator">:</span>label<span class="token operator">=</span><span class="token string">"option.podName"</span>                <span class="token operator">:</span>value<span class="token operator">=</span><span class="token string">"option.podName"</span>            <span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>select<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 第二个选择器 <span class="token operator">--</span><span class="token operator">></span>          <span class="token operator">&lt;</span>el<span class="token operator">-</span>select v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"selectedValue2"</span> placeholder<span class="token operator">=</span><span class="token string">"请选择"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"selector"</span> @change<span class="token operator">=</span><span class="token string">"handleContainers"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>el<span class="token operator">-</span>option                v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"name in containerList"</span>                <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"name"</span>                <span class="token operator">:</span>label<span class="token operator">=</span><span class="token string">"name"</span>                <span class="token operator">:</span>value<span class="token operator">=</span><span class="token string">"name"</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>select<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 第三个选择器 <span class="token operator">--</span><span class="token operator">></span>          <span class="token operator">&lt;</span>el<span class="token operator">-</span>select v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"selectedLines"</span> placeholder<span class="token operator">=</span><span class="token string">"请选择"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"selector"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>el<span class="token operator">-</span>option                v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"option in linesOptions"</span>                <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"option.value"</span>                <span class="token operator">:</span>label<span class="token operator">=</span><span class="token string">"option.label"</span>                <span class="token operator">:</span>value<span class="token operator">=</span><span class="token string">"option.value"</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>select<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 日志容器 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"log-container"</span> v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"activeIndex ==='2'"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>codemirror          v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"rawLogData"</span>          placeholder<span class="token operator">=</span><span class="token string">""</span>          <span class="token operator">:</span>style<span class="token operator">=</span><span class="token string">"&#123; height: editorHeight &#125;"</span>          v<span class="token operator">-</span>bind<span class="token operator">=</span><span class="token string">"logOptions"</span>          <span class="token operator">:</span>extensions<span class="token operator">=</span><span class="token string">"extensions"</span>          disabled<span class="token operator">=</span><span class="token string">"true"</span>                <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 日志容器 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"log-container"</span> v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"activeIndex ==='3'"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>codemirror          v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"yamlContent"</span>          placeholder<span class="token operator">=</span><span class="token string">""</span>          <span class="token operator">:</span>style<span class="token operator">=</span><span class="token string">"&#123; height: editorHeight &#125;"</span>          v<span class="token operator">-</span>bind<span class="token operator">=</span><span class="token string">"logOptions"</span>          <span class="token operator">:</span>extensions<span class="token operator">=</span><span class="token string">"extensions"</span>      <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 第二部分<span class="token operator">:</span> 表格 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"table-wrapper shadow"</span> v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"activeIndex ==='1'"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>table <span class="token operator">:</span>data<span class="token operator">=</span><span class="token string">"tableData"</span> style<span class="token operator">=</span><span class="token string">"width: 100%"</span> row<span class="token operator">-</span>key<span class="token operator">=</span><span class="token string">"podName"</span>  <span class="token operator">></span>          <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column type<span class="token operator">=</span><span class="token string">"expand"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>template #<span class="token keyword">default</span><span class="token operator">=</span><span class="token string">"&#123; row &#125;"</span><span class="token operator">></span>              <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"parent-container"</span><span class="token operator">></span>                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"expanded-content"</span><span class="token operator">></span>                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>table <span class="token operator">:</span>data<span class="token operator">=</span><span class="token string">"row.expanded?.slice(1)"</span> style<span class="token operator">=</span><span class="token string">"width: 100%"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"row"</span><span class="token operator">></span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column                        <span class="token keyword">class</span><span class="token operator">-</span>name<span class="token operator">=</span><span class="token string">"text-center"</span>                        v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"(label, prop) in row.expanded[0]"</span>                        <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"prop"</span>                        <span class="token operator">:</span>label<span class="token operator">=</span><span class="token string">"label"</span>                        <span class="token operator">:</span>prop<span class="token operator">=</span><span class="token string">"prop"</span>                        align<span class="token operator">=</span><span class="token string">"center"</span>                        header<span class="token operator">-</span>align<span class="token operator">=</span><span class="token string">"center"</span><span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>                  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column prop<span class="token operator">=</span><span class="token string">"podName"</span> label<span class="token operator">=</span><span class="token string">"Pod名"</span> width<span class="token operator">=</span><span class="token string">"180px"</span> align<span class="token operator">=</span><span class="token string">"center"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>template #<span class="token keyword">default</span><span class="token operator">=</span><span class="token string">"&#123; row &#125;"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div<span class="token operator">></span>              <span class="token operator">&lt;</span>p style<span class="token operator">=</span><span class="token string">"color: #4795EE; margin: 0;"</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> row<span class="token punctuation">.</span>podName <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column prop<span class="token operator">=</span><span class="token string">"Status"</span> label<span class="token operator">=</span><span class="token string">"状态"</span> width<span class="token operator">=</span><span class="token string">"200px"</span> align<span class="token operator">=</span><span class="token string">"center"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>template #<span class="token keyword">default</span><span class="token operator">=</span><span class="token string">"&#123; row &#125;"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div<span class="token operator">></span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>tooltip <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"item"</span> effect<span class="token operator">=</span><span class="token string">"dark"</span> placement<span class="token operator">=</span><span class="token string">"top"</span> <span class="token operator">:</span>content<span class="token operator">=</span><span class="token string">"row.FailedMessage"</span><span class="token operator">></span>                <span class="token operator">&lt;</span>el<span class="token operator">-</span>tag <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ml-2"</span> <span class="token operator">:</span>type<span class="token operator">=</span><span class="token string">"getTagType(row.Status)"</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> row<span class="token punctuation">.</span>Status <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>tag<span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>tooltip<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column prop<span class="token operator">=</span><span class="token string">"HostIp"</span> label<span class="token operator">=</span><span class="token string">"实例所在节点IP"</span> align<span class="token operator">=</span><span class="token string">"center"</span> width<span class="token operator">=</span><span class="token string">"200px"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>template #<span class="token keyword">default</span><span class="token operator">=</span><span class="token string">"&#123; row &#125;"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token string">"display: flex; align-items: center;justify-content: center;height: 100%"</span><span class="token operator">></span>              <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> row<span class="token punctuation">.</span>HostIp <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>              <span class="token operator">&lt;</span>img v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"row.showLoading"</span> src<span class="token operator">=</span><span class="token string">"@/assets/load.svg"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"loading-icon"</span> alt<span class="token operator">=</span><span class="token string">"loading"</span><span class="token operator">/</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column prop<span class="token operator">=</span><span class="token string">"podIp"</span> label<span class="token operator">=</span><span class="token string">"实例IP"</span> align<span class="token operator">=</span><span class="token string">"center"</span> width<span class="token operator">=</span><span class="token string">"200px"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>template #<span class="token keyword">default</span><span class="token operator">=</span><span class="token string">"&#123; row &#125;"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token string">"display: flex; align-items: center;justify-content: center;height: 100%"</span><span class="token operator">></span>              <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> row<span class="token punctuation">.</span>podIp <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>              <span class="token operator">&lt;</span>img v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"row.showLoading"</span> src<span class="token operator">=</span><span class="token string">"@/assets/load.svg"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"loading-icon"</span> alt<span class="token operator">=</span><span class="token string">"loading"</span><span class="token operator">/</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column prop<span class="token operator">=</span><span class="token string">"RunningTime"</span> label<span class="token operator">=</span><span class="token string">"运行时间"</span> align<span class="token operator">=</span><span class="token string">"center"</span> width<span class="token operator">=</span><span class="token string">"155px"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>template #<span class="token keyword">default</span><span class="token operator">=</span><span class="token string">"&#123; row &#125;"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div<span class="token operator">></span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>tag <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ml-2"</span> type<span class="token operator">=</span><span class="token string">"warning"</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>row<span class="token punctuation">.</span>RunningTime<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>tag<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column prop<span class="token operator">=</span><span class="token string">"createTime"</span> label<span class="token operator">=</span><span class="token string">"创建时间"</span> align<span class="token operator">=</span><span class="token string">"center"</span> width<span class="token operator">=</span><span class="token string">"155px"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>template #<span class="token keyword">default</span><span class="token operator">=</span><span class="token string">"&#123; row &#125;"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div<span class="token operator">></span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>tag <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ml-2"</span> type<span class="token operator">=</span><span class="token string">"warning"</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>row<span class="token punctuation">.</span>createTime<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>tag<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column prop<span class="token operator">=</span><span class="token string">"restartCount"</span> label<span class="token operator">=</span><span class="token string">"重启次数"</span> align<span class="token operator">=</span><span class="token string">"center"</span> width<span class="token operator">=</span><span class="token string">"155px"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>template #<span class="token keyword">default</span><span class="token operator">=</span><span class="token string">"&#123; row &#125;"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div<span class="token operator">></span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>tag <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ml-2"</span> type<span class="token operator">=</span><span class="token string">"warning"</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>row<span class="token punctuation">.</span>restartCount<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>tag<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column prop<span class="token operator">=</span><span class="token string">"Operation"</span> label<span class="token operator">=</span><span class="token string">"操作"</span> align<span class="token operator">=</span><span class="token string">"center"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>template #<span class="token keyword">default</span><span class="token operator">=</span><span class="token string">"&#123; row &#125;"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"button-group"</span><span class="token operator">></span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>button size<span class="token operator">=</span><span class="token string">"small"</span> color<span class="token operator">=</span><span class="token string">"#5AABFF"</span>  plain @click<span class="token operator">=</span><span class="token string">"viewYAML(row)"</span><span class="token operator">></span>                <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon<span class="token operator">></span><span class="token operator">&lt;</span>EditPen <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">></span>                <span class="token operator">&lt;</span>span style<span class="token operator">=</span><span class="token string">"vertical-align: middle"</span><span class="token operator">></span> <span class="token constant">YAML</span> <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>button size<span class="token operator">=</span><span class="token string">"small"</span>  color<span class="token operator">=</span><span class="token string">"#F58D79"</span>  plain @click<span class="token operator">=</span><span class="token string">"confirmDelete(row)"</span><span class="token operator">></span>                <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon<span class="token operator">></span><span class="token operator">&lt;</span>Tickets <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">></span>                <span class="token operator">&lt;</span>span style<span class="token operator">=</span><span class="token string">"vertical-align: middle"</span><span class="token operator">></span> 删除 <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>pagination          v<span class="token operator">-</span>model<span class="token operator">:</span>current<span class="token operator">-</span>page<span class="token operator">=</span><span class="token string">"currentPage"</span>          v<span class="token operator">-</span>model<span class="token operator">:</span>page<span class="token operator">-</span>size<span class="token operator">=</span><span class="token string">"pageSize"</span>          <span class="token operator">:</span>page<span class="token operator">-</span>sizes<span class="token operator">=</span><span class="token string">"[5, 10, 20, 30]"</span>          <span class="token operator">:</span>small<span class="token operator">=</span><span class="token string">"small"</span>          <span class="token operator">:</span>disabled<span class="token operator">=</span><span class="token string">"disabled"</span>          <span class="token operator">:</span>background<span class="token operator">=</span><span class="token string">"background"</span>          layout<span class="token operator">=</span><span class="token string">"total, sizes, prev, pager, next, jumper"</span>          <span class="token operator">:</span>total<span class="token operator">=</span>podCount          <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"paginations"</span>          @size<span class="token operator">-</span>change<span class="token operator">=</span><span class="token string">"handleSizeChange"</span>          @current<span class="token operator">-</span>change<span class="token operator">=</span><span class="token string">"handleCurrentChange"</span>      <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>el<span class="token operator">-</span>dialog title<span class="token operator">=</span><span class="token string">"YAML信息"</span> v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"dialogVisible"</span> width<span class="token operator">=</span><span class="token string">"45%"</span> top<span class="token operator">=</span><span class="token string">"5%"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>codemirror          v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"yamlContent"</span>          placeholder<span class="token operator">=</span><span class="token string">"请输入代码..."</span>          <span class="token operator">:</span>style<span class="token operator">=</span><span class="token string">"&#123; height: '100%' &#125;"</span>          v<span class="token operator">-</span>bind<span class="token operator">=</span><span class="token string">"logOptions"</span>          <span class="token operator">:</span>extensions<span class="token operator">=</span><span class="token string">"extensions"</span>      <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span>template #footer<span class="token operator">></span>                <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"dialog-footer"</span><span class="token operator">></span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">"dialogVisible = false"</span><span class="token operator">></span>取 消<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>button  type<span class="token operator">=</span><span class="token string">"primary"</span> @click<span class="token operator">=</span><span class="token string">"updateDeploy()"</span><span class="token operator">></span>更 新<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>dialog<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script setup<span class="token operator">></span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>  <span class="token constant">DAEMONSET_DETAIL</span><span class="token punctuation">,</span>  <span class="token constant">DAEMONSET_POD_LIST</span><span class="token punctuation">,</span>  <span class="token constant">DELETE_DEPLOYMENT</span><span class="token punctuation">,</span> <span class="token constant">DELETE_POD</span><span class="token punctuation">,</span> <span class="token constant">DEPLOYMENT_DETAIL</span><span class="token punctuation">,</span>  <span class="token constant">DEPLOYMENT_LIST</span><span class="token punctuation">,</span>  <span class="token constant">DEPLOYMENT_POD_LIST</span><span class="token punctuation">,</span>  <span class="token constant">GET_NS_POD_COUNT</span><span class="token punctuation">,</span>  <span class="token constant">NAMESPACE_LIST</span><span class="token punctuation">,</span> <span class="token constant">POD_CONTAINERS</span><span class="token punctuation">,</span> <span class="token constant">POD_DETAIL</span><span class="token punctuation">,</span>  <span class="token constant">POD_LIST</span><span class="token punctuation">,</span> <span class="token constant">POD_LOGS</span><span class="token punctuation">,</span> <span class="token constant">STATEFULSET_POD_LIST</span><span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"../../../api/k8s.js"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>computed<span class="token punctuation">,</span> nextTick<span class="token punctuation">,</span> onBeforeMount<span class="token punctuation">,</span> reactive<span class="token punctuation">,</span> ref<span class="token punctuation">,</span> watch<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Codemirror <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue-codemirror'</span><span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">"@/router/index.js"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>ElMessage<span class="token punctuation">,</span> ElMessageBox<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"element-plus"</span><span class="token punctuation">;</span><span class="token keyword">import</span> json2yaml <span class="token keyword">from</span> <span class="token string">"json2yaml"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>javascript<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"@codemirror/lang-javascript"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>oneDark<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"@codemirror/theme-one-dark"</span><span class="token punctuation">;</span><span class="token keyword">import</span> _ <span class="token keyword">from</span> <span class="token string">"lodash"</span><span class="token punctuation">;</span><span class="token keyword">const</span> extensions <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">javascript</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>oneDark<span class="token punctuation">]</span><span class="token keyword">const</span> activeIndex <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> useRoute <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue-router'</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">handleSelect</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> keyPath</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> keyPath<span class="token punctuation">)</span>  activeIndex<span class="token punctuation">.</span>value <span class="token operator">=</span> key<span class="token punctuation">;</span> <span class="token comment">// 更新当前选中的菜单项</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">'1'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">getPodsData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 当选中Pod管理时，调用getPodsData函数</span>  <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">'3'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">getPodYamlData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> selectedPodName <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 用于双向绑定选中的Pod名称</span><span class="token comment">// 假设这是从某处获取的日志字符串</span><span class="token keyword">const</span> rawLogData <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">'暂无日志'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 将原始日志字符串分割成行数组</span><span class="token keyword">const</span> logLines <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> rawLogData<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> currentPage <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">const</span> namespaces <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 用于存储命名空间列表</span><span class="token keyword">const</span> selectedNamespace <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">'default'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 用于存储用户选择的命名空间</span><span class="token keyword">let</span> pageSize <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token keyword">const</span> small <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token keyword">const</span> background <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token keyword">const</span> disabled <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment">// 在 &lt;script setup> 中</span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> type<span class="token punctuation">,</span>deploymentName<span class="token punctuation">,</span> namespace <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>  <span class="token literal-property property">deploymentName</span><span class="token operator">:</span> String<span class="token punctuation">,</span>  <span class="token literal-property property">namespace</span><span class="token operator">:</span> String<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> route <span class="token operator">=</span> <span class="token function">useRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 假设有三组选择器选项</span><span class="token keyword">const</span> selectorOptions1 <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span>  <span class="token punctuation">&#123;</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">'选项 1.1'</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'1.1'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">'选项 1.2'</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'1.2'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// ...其他选项</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> selectorOptions2 <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span>  <span class="token punctuation">&#123;</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">'选项 2.1'</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'2.1'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">'选项 2.2'</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'2.2'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// ...其他选项</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> selectorOptions3 <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span>  <span class="token punctuation">&#123;</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">'选项 3.1'</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'3.1'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">'选项 3.2'</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'3.2'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// ...其他选项</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 第一个选择器变化时触发的函数</span><span class="token keyword">function</span> <span class="token function">handlePodChange</span><span class="token punctuation">(</span><span class="token parameter">newValue</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 当第一个选择器的值变化时，调用getPodDetailData函数</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"================================"</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>podN<span class="token punctuation">.</span>value<span class="token punctuation">)</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>podN<span class="token punctuation">.</span>value <span class="token operator">!==</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token function">getContainerLogs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token function">getPodDetailData</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> handleInput <span class="token operator">=</span> _<span class="token punctuation">.</span><span class="token function">debounce</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">await</span> <span class="token function">search</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 使用 lodash 的 debounce 函数来防抖，防止搜索操作太频繁</span><span class="token keyword">function</span> <span class="token function">handleContainers</span><span class="token punctuation">(</span><span class="token parameter">newValue</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 当第一个选择器的值变化时，调用getPodDetailData函数</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"================================"</span><span class="token punctuation">)</span>  <span class="token function">getContainerLogs</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 为每个选择器定义模型来持有选中的值</span><span class="token keyword">const</span> selectedValue1 <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> selectedValue2 <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> selectedLines <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> linesOptions <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token punctuation">&#123;</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">'50行'</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">50</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">'100行'</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">100</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">'300行'</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">300</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">'500行'</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">500</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">'1000行'</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1000</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> logOptions <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">tabSize</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'yaml'</span><span class="token punctuation">,</span> <span class="token literal-property property">json</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token string">'base16-light'</span><span class="token punctuation">,</span>  <span class="token literal-property property">styleActiveLine</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token literal-property property">lineNumbers</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token literal-property property">line</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token literal-property property">readOnly</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token literal-property property">indentWithTabs</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token literal-property property">smartIndent</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token literal-property property">indentUnit</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>  <span class="token literal-property property">foldgutter</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token literal-property property">gutters</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token string">'CodeMirror-linenumbers'</span><span class="token punctuation">,</span>    <span class="token string">'CodeMirror-foldgutter'</span><span class="token punctuation">,</span>    <span class="token string">'CodeMirror-lint-markers'</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token literal-property property">lineWrapping</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 代码折叠</span>  <span class="token literal-property property">foldGutter</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token literal-property property">matchBrackets</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 括号匹配</span>  <span class="token literal-property property">autoCloseBrackets</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token literal-property property">showCursorWhenSelecting</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token literal-property property">cursorHeight</span><span class="token operator">:</span> <span class="token number">0.85</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 计算编辑器高度</span><span class="token keyword">const</span> editorHeight <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> lineHeight <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span> <span class="token comment">// 假设每行的高度</span>  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>selectedLines<span class="token punctuation">.</span>value <span class="token operator">*</span> lineHeight<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">px</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 假设这是你的数据源</span><span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">tableData</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token comment">// 这里放入你的表格数据</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token comment">// 更多数据或状态...</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">search</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'执行搜索:'</span><span class="token punctuation">,</span> searchText<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">==</span> <span class="token string">'daemonset'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> searchParameters <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">page_size</span><span class="token operator">:</span> pageSize<span class="token punctuation">,</span>        <span class="token literal-property property">page_number</span><span class="token operator">:</span> currentPage<span class="token punctuation">,</span>        <span class="token literal-property property">filterName</span><span class="token operator">:</span> searchText<span class="token punctuation">.</span>value<span class="token punctuation">,</span>        <span class="token literal-property property">daemonsetName</span><span class="token operator">:</span> deploymentName<span class="token punctuation">,</span>        <span class="token literal-property property">namespace</span><span class="token operator">:</span> namespace      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>searchParameters<span class="token punctuation">)</span>      <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">DAEMONSET_POD_LIST</span><span class="token punctuation">(</span>searchParameters<span class="token punctuation">)</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"牛逼：：："</span><span class="token punctuation">,</span>resp<span class="token punctuation">)</span>      <span class="token comment">// // 初始化expandedData数组并添加表头</span>      <span class="token comment">// 遍历每个 Pod 并构造其展开信息</span>      <span class="token keyword">const</span> newTableData <span class="token operator">=</span> resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>items<span class="token operator">?.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> conditionsMessage <span class="token operator">=</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>conditions<span class="token operator">?.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">condition</span> <span class="token operator">=></span> condition<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">", "</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token comment">// 表头数据，将直接作为第一个元素添加到每个expanded中</span>        <span class="token keyword">const</span> headerData <span class="token operator">=</span> <span class="token punctuation">&#123;</span>          <span class="token literal-property property">containerName</span><span class="token operator">:</span> <span class="token string">'容器名称'</span><span class="token punctuation">,</span>          <span class="token literal-property property">image</span><span class="token operator">:</span> <span class="token string">'镜像版本号'</span><span class="token punctuation">,</span>          <span class="token literal-property property">podIp</span><span class="token operator">:</span> <span class="token string">'PodIP'</span><span class="token punctuation">,</span>          <span class="token literal-property property">restartCount</span><span class="token operator">:</span> <span class="token string">'重启次数'</span><span class="token punctuation">,</span>          <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'状态'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token comment">// 构造容器状态信息</span>        <span class="token comment">// 处理containerStatuses，以显示restartCount和state</span>        <span class="token keyword">const</span> podExpData <span class="token operator">=</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>containerStatuses <span class="token operator">||</span> item<span class="token punctuation">.</span>spec<span class="token punctuation">.</span>containers<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">container</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span>          <span class="token literal-property property">name</span><span class="token operator">:</span> container<span class="token punctuation">.</span>name<span class="token punctuation">,</span>          <span class="token literal-property property">image</span><span class="token operator">:</span> container<span class="token punctuation">.</span>image<span class="token punctuation">,</span>          <span class="token comment">// 如果没有containerStatuses，设置restartCount和state为"-"</span>          <span class="token literal-property property">restartCount</span><span class="token operator">:</span> <span class="token string">'-'</span><span class="token punctuation">,</span>          <span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'-'</span> <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">container</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>          <span class="token keyword">let</span> status <span class="token operator">=</span> <span class="token string">'-'</span><span class="token punctuation">;</span>          <span class="token keyword">let</span> conditionMessage <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>          <span class="token comment">// 解析容器状态</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>container<span class="token punctuation">.</span>state<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>container<span class="token punctuation">.</span>state<span class="token punctuation">.</span>running<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>              status <span class="token operator">=</span> <span class="token string">'运行中'</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>container<span class="token punctuation">.</span>state<span class="token punctuation">.</span>waiting<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>              status <span class="token operator">=</span> <span class="token string">'等待中'</span><span class="token punctuation">;</span>              conditionMessage <span class="token operator">=</span> container<span class="token punctuation">.</span>state<span class="token punctuation">.</span>waiting<span class="token punctuation">.</span>message <span class="token operator">||</span> conditionsMessage<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>container<span class="token punctuation">.</span>state<span class="token punctuation">.</span>terminated<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>              status <span class="token operator">=</span> <span class="token string">'已终止'</span><span class="token punctuation">;</span>              conditionMessage <span class="token operator">=</span> container<span class="token punctuation">.</span>state<span class="token punctuation">.</span>terminated<span class="token punctuation">.</span>message <span class="token operator">||</span> conditionsMessage<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 如果容器还没有状态（可能是pod还在Pending阶段），使用Pod的conditions信息</span>            conditionMessage <span class="token operator">=</span> conditionsMessage<span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span>          <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">containerName</span><span class="token operator">:</span> container<span class="token punctuation">.</span>name <span class="token operator">||</span> <span class="token string">'-'</span><span class="token punctuation">,</span>            <span class="token literal-property property">image</span><span class="token operator">:</span> container<span class="token punctuation">.</span>image <span class="token operator">||</span> <span class="token string">'-'</span><span class="token punctuation">,</span>            <span class="token literal-property property">podIp</span><span class="token operator">:</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>podIP <span class="token operator">||</span> <span class="token string">'-'</span><span class="token punctuation">,</span>            <span class="token literal-property property">restartCount</span><span class="token operator">:</span> container<span class="token punctuation">.</span>restartCount <span class="token operator">!==</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> container<span class="token punctuation">.</span>restartCount<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">'-'</span><span class="token punctuation">,</span>            <span class="token literal-property property">status</span><span class="token operator">:</span> status<span class="token punctuation">,</span>            <span class="token literal-property property">conditionMessage</span><span class="token operator">:</span> conditionMessage  <span class="token comment">// 存储条件消息，以便于前端显示提示</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        podExpData<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>headerData<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> failureMessage <span class="token operator">=</span> <span class="token function">getFailureMessage</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 构造表格数据项，并包含展开属性</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// ...其他属性...</span>          <span class="token literal-property property">FailedMessage</span><span class="token operator">:</span> failureMessage<span class="token punctuation">,</span>          <span class="token literal-property property">podName</span><span class="token operator">:</span> item<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>name<span class="token punctuation">,</span>          <span class="token literal-property property">Status</span><span class="token operator">:</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>phase<span class="token punctuation">,</span>          <span class="token literal-property property">HostIp</span><span class="token operator">:</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>hostIP<span class="token punctuation">,</span>          <span class="token literal-property property">podIp</span><span class="token operator">:</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>podIP<span class="token punctuation">,</span>          <span class="token literal-property property">RunningTime</span><span class="token operator">:</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>startTime <span class="token operator">?</span><span class="token function">calculateRunningTime</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>startTime<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token string">'0天0时'</span><span class="token punctuation">,</span>          <span class="token literal-property property">restartCount</span><span class="token operator">:</span> <span class="token function">calculateTotalRestartCount</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token literal-property property">createTime</span><span class="token operator">:</span> <span class="token function">formatDateTime</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>creationTimestamp<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token literal-property property">expanded</span><span class="token operator">:</span> podExpData<span class="token punctuation">,</span> <span class="token comment">// 添加expanded字段</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"================================"</span><span class="token punctuation">,</span>newTableData<span class="token punctuation">)</span>      tableData<span class="token punctuation">.</span>value <span class="token operator">=</span> newTableData      <span class="token comment">// 更新部署计数</span>      podCount<span class="token punctuation">.</span>value <span class="token operator">=</span> resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>total<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">"statefulset"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> searchParameters <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">page_size</span><span class="token operator">:</span> pageSize<span class="token punctuation">,</span>        <span class="token literal-property property">page_number</span><span class="token operator">:</span> currentPage<span class="token punctuation">,</span>        <span class="token literal-property property">filterName</span><span class="token operator">:</span> searchText<span class="token punctuation">.</span>value<span class="token punctuation">,</span>        <span class="token literal-property property">statefulsetName</span><span class="token operator">:</span> deploymentName<span class="token punctuation">,</span>        <span class="token literal-property property">namespace</span><span class="token operator">:</span> namespace      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">STATEFULSET_POD_LIST</span><span class="token punctuation">(</span>searchParameters<span class="token punctuation">)</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"牛逼：：："</span><span class="token punctuation">,</span> resp<span class="token punctuation">)</span>      <span class="token comment">// // 初始化expandedData数组并添加表头</span>      <span class="token comment">// 遍历每个 Pod 并构造其展开信息</span>      <span class="token keyword">const</span> newTableData <span class="token operator">=</span> resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>items<span class="token operator">?.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> conditionsMessage <span class="token operator">=</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>conditions<span class="token operator">?.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">condition</span> <span class="token operator">=></span> condition<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">", "</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token comment">// 表头数据，将直接作为第一个元素添加到每个expanded中</span>        <span class="token keyword">const</span> headerData <span class="token operator">=</span> <span class="token punctuation">&#123;</span>          <span class="token literal-property property">containerName</span><span class="token operator">:</span> <span class="token string">'容器名称'</span><span class="token punctuation">,</span>          <span class="token literal-property property">image</span><span class="token operator">:</span> <span class="token string">'镜像版本号'</span><span class="token punctuation">,</span>          <span class="token literal-property property">podIp</span><span class="token operator">:</span> <span class="token string">'PodIP'</span><span class="token punctuation">,</span>          <span class="token literal-property property">restartCount</span><span class="token operator">:</span> <span class="token string">'重启次数'</span><span class="token punctuation">,</span>          <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'状态'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token comment">// 构造容器状态信息</span>        <span class="token comment">// 处理containerStatuses，以显示restartCount和state</span>        <span class="token keyword">const</span> podExpData <span class="token operator">=</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>containerStatuses <span class="token operator">||</span> item<span class="token punctuation">.</span>spec<span class="token punctuation">.</span>containers<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">container</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span>          <span class="token literal-property property">name</span><span class="token operator">:</span> container<span class="token punctuation">.</span>name<span class="token punctuation">,</span>          <span class="token literal-property property">image</span><span class="token operator">:</span> container<span class="token punctuation">.</span>image<span class="token punctuation">,</span>          <span class="token comment">// 如果没有containerStatuses，设置restartCount和state为"-"</span>          <span class="token literal-property property">restartCount</span><span class="token operator">:</span> <span class="token string">'-'</span><span class="token punctuation">,</span>          <span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'-'</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">container</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>          <span class="token keyword">let</span> status <span class="token operator">=</span> <span class="token string">'-'</span><span class="token punctuation">;</span>          <span class="token keyword">let</span> conditionMessage <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>          <span class="token comment">// 解析容器状态</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>container<span class="token punctuation">.</span>state<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>container<span class="token punctuation">.</span>state<span class="token punctuation">.</span>running<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>              status <span class="token operator">=</span> <span class="token string">'运行中'</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>container<span class="token punctuation">.</span>state<span class="token punctuation">.</span>waiting<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>              status <span class="token operator">=</span> <span class="token string">'等待中'</span><span class="token punctuation">;</span>              conditionMessage <span class="token operator">=</span> container<span class="token punctuation">.</span>state<span class="token punctuation">.</span>waiting<span class="token punctuation">.</span>message <span class="token operator">||</span> conditionsMessage<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>container<span class="token punctuation">.</span>state<span class="token punctuation">.</span>terminated<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>              status <span class="token operator">=</span> <span class="token string">'已终止'</span><span class="token punctuation">;</span>              conditionMessage <span class="token operator">=</span> container<span class="token punctuation">.</span>state<span class="token punctuation">.</span>terminated<span class="token punctuation">.</span>message <span class="token operator">||</span> conditionsMessage<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 如果容器还没有状态（可能是pod还在Pending阶段），使用Pod的conditions信息</span>            conditionMessage <span class="token operator">=</span> conditionsMessage<span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span>          <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">containerName</span><span class="token operator">:</span> container<span class="token punctuation">.</span>name <span class="token operator">||</span> <span class="token string">'-'</span><span class="token punctuation">,</span>            <span class="token literal-property property">image</span><span class="token operator">:</span> container<span class="token punctuation">.</span>image <span class="token operator">||</span> <span class="token string">'-'</span><span class="token punctuation">,</span>            <span class="token literal-property property">podIp</span><span class="token operator">:</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>podIP <span class="token operator">||</span> <span class="token string">'-'</span><span class="token punctuation">,</span>            <span class="token literal-property property">restartCount</span><span class="token operator">:</span> container<span class="token punctuation">.</span>restartCount <span class="token operator">!==</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> container<span class="token punctuation">.</span>restartCount<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">'-'</span><span class="token punctuation">,</span>            <span class="token literal-property property">status</span><span class="token operator">:</span> status<span class="token punctuation">,</span>            <span class="token literal-property property">conditionMessage</span><span class="token operator">:</span> conditionMessage  <span class="token comment">// 存储条件消息，以便于前端显示提示</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        podExpData<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>headerData<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> failureMessage <span class="token operator">=</span> <span class="token function">getFailureMessage</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 构造表格数据项，并包含展开属性</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// ...其他属性...</span>          <span class="token literal-property property">FailedMessage</span><span class="token operator">:</span> failureMessage<span class="token punctuation">,</span>          <span class="token literal-property property">podName</span><span class="token operator">:</span> item<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>name<span class="token punctuation">,</span>          <span class="token literal-property property">Status</span><span class="token operator">:</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>phase<span class="token punctuation">,</span>          <span class="token literal-property property">HostIp</span><span class="token operator">:</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>hostIP<span class="token punctuation">,</span>          <span class="token literal-property property">podIp</span><span class="token operator">:</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>podIP<span class="token punctuation">,</span>          <span class="token literal-property property">RunningTime</span><span class="token operator">:</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>startTime <span class="token operator">?</span> <span class="token function">calculateRunningTime</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>startTime<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">'0天0时'</span><span class="token punctuation">,</span>          <span class="token literal-property property">restartCount</span><span class="token operator">:</span> <span class="token function">calculateTotalRestartCount</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token literal-property property">createTime</span><span class="token operator">:</span> <span class="token function">formatDateTime</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>creationTimestamp<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token literal-property property">expanded</span><span class="token operator">:</span> podExpData<span class="token punctuation">,</span> <span class="token comment">// 添加expanded字段</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"================================"</span><span class="token punctuation">,</span> newTableData<span class="token punctuation">)</span>      tableData<span class="token punctuation">.</span>value <span class="token operator">=</span> newTableData      podCount<span class="token punctuation">.</span>value <span class="token operator">=</span> resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>total<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">==</span> <span class="token string">'deployment'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> searchParameters <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">page_size</span><span class="token operator">:</span> pageSize<span class="token punctuation">,</span>        <span class="token literal-property property">page_number</span><span class="token operator">:</span> currentPage<span class="token punctuation">,</span>        <span class="token literal-property property">filterName</span><span class="token operator">:</span> searchText<span class="token punctuation">.</span>value<span class="token punctuation">,</span>        <span class="token literal-property property">deploymentName</span><span class="token operator">:</span> deploymentName<span class="token punctuation">,</span>        <span class="token literal-property property">namespace</span><span class="token operator">:</span> namespace      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">DEPLOYMENT_POD_LIST</span><span class="token punctuation">(</span>searchParameters<span class="token punctuation">)</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"牛逼：：："</span><span class="token punctuation">,</span> resp<span class="token punctuation">)</span>      <span class="token comment">// // 初始化expandedData数组并添加表头</span>      <span class="token comment">// 遍历每个 Pod 并构造其展开信息</span>      <span class="token keyword">const</span> newTableData <span class="token operator">=</span> resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>items<span class="token operator">?.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> conditionsMessage <span class="token operator">=</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>conditions<span class="token operator">?.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">condition</span> <span class="token operator">=></span> condition<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">", "</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token comment">// 表头数据，将直接作为第一个元素添加到每个expanded中</span>        <span class="token keyword">const</span> headerData <span class="token operator">=</span> <span class="token punctuation">&#123;</span>          <span class="token literal-property property">containerName</span><span class="token operator">:</span> <span class="token string">'容器名称'</span><span class="token punctuation">,</span>          <span class="token literal-property property">image</span><span class="token operator">:</span> <span class="token string">'镜像版本号'</span><span class="token punctuation">,</span>          <span class="token literal-property property">podIp</span><span class="token operator">:</span> <span class="token string">'PodIP'</span><span class="token punctuation">,</span>          <span class="token literal-property property">restartCount</span><span class="token operator">:</span> <span class="token string">'重启次数'</span><span class="token punctuation">,</span>          <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'状态'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token comment">// 构造容器状态信息</span>        <span class="token comment">// 处理containerStatuses，以显示restartCount和state</span>        <span class="token keyword">const</span> podExpData <span class="token operator">=</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>containerStatuses <span class="token operator">||</span> item<span class="token punctuation">.</span>spec<span class="token punctuation">.</span>containers<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">container</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span>          <span class="token literal-property property">name</span><span class="token operator">:</span> container<span class="token punctuation">.</span>name<span class="token punctuation">,</span>          <span class="token literal-property property">image</span><span class="token operator">:</span> container<span class="token punctuation">.</span>image<span class="token punctuation">,</span>          <span class="token comment">// 如果没有containerStatuses，设置restartCount和state为"-"</span>          <span class="token literal-property property">restartCount</span><span class="token operator">:</span> <span class="token string">'-'</span><span class="token punctuation">,</span>          <span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'-'</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">container</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>          <span class="token keyword">let</span> status <span class="token operator">=</span> <span class="token string">'-'</span><span class="token punctuation">;</span>          <span class="token keyword">let</span> conditionMessage <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>          <span class="token comment">// 解析容器状态</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>container<span class="token punctuation">.</span>state<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>container<span class="token punctuation">.</span>state<span class="token punctuation">.</span>running<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>              status <span class="token operator">=</span> <span class="token string">'运行中'</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>container<span class="token punctuation">.</span>state<span class="token punctuation">.</span>waiting<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>              status <span class="token operator">=</span> <span class="token string">'等待中'</span><span class="token punctuation">;</span>              conditionMessage <span class="token operator">=</span> container<span class="token punctuation">.</span>state<span class="token punctuation">.</span>waiting<span class="token punctuation">.</span>message <span class="token operator">||</span> conditionsMessage<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>container<span class="token punctuation">.</span>state<span class="token punctuation">.</span>terminated<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>              status <span class="token operator">=</span> <span class="token string">'已终止'</span><span class="token punctuation">;</span>              conditionMessage <span class="token operator">=</span> container<span class="token punctuation">.</span>state<span class="token punctuation">.</span>terminated<span class="token punctuation">.</span>message <span class="token operator">||</span> conditionsMessage<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 如果容器还没有状态（可能是pod还在Pending阶段），使用Pod的conditions信息</span>            conditionMessage <span class="token operator">=</span> conditionsMessage<span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span>          <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">containerName</span><span class="token operator">:</span> container<span class="token punctuation">.</span>name <span class="token operator">||</span> <span class="token string">'-'</span><span class="token punctuation">,</span>            <span class="token literal-property property">image</span><span class="token operator">:</span> container<span class="token punctuation">.</span>image <span class="token operator">||</span> <span class="token string">'-'</span><span class="token punctuation">,</span>            <span class="token literal-property property">podIp</span><span class="token operator">:</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>podIP <span class="token operator">||</span> <span class="token string">'-'</span><span class="token punctuation">,</span>            <span class="token literal-property property">restartCount</span><span class="token operator">:</span> container<span class="token punctuation">.</span>restartCount <span class="token operator">!==</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> container<span class="token punctuation">.</span>restartCount<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">'-'</span><span class="token punctuation">,</span>            <span class="token literal-property property">status</span><span class="token operator">:</span> status<span class="token punctuation">,</span>            <span class="token literal-property property">conditionMessage</span><span class="token operator">:</span> conditionMessage  <span class="token comment">// 存储条件消息，以便于前端显示提示</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        podExpData<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>headerData<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> failureMessage <span class="token operator">=</span> <span class="token function">getFailureMessage</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 构造表格数据项，并包含展开属性</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// ...其他属性...</span>          <span class="token literal-property property">FailedMessage</span><span class="token operator">:</span> failureMessage<span class="token punctuation">,</span>          <span class="token literal-property property">podName</span><span class="token operator">:</span> item<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>name<span class="token punctuation">,</span>          <span class="token literal-property property">Status</span><span class="token operator">:</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>phase<span class="token punctuation">,</span>          <span class="token literal-property property">HostIp</span><span class="token operator">:</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>hostIP<span class="token punctuation">,</span>          <span class="token literal-property property">podIp</span><span class="token operator">:</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>podIP<span class="token punctuation">,</span>          <span class="token literal-property property">RunningTime</span><span class="token operator">:</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>startTime <span class="token operator">?</span> <span class="token function">calculateRunningTime</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>startTime<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">'0天0时'</span><span class="token punctuation">,</span>          <span class="token literal-property property">restartCount</span><span class="token operator">:</span> <span class="token function">calculateTotalRestartCount</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token literal-property property">createTime</span><span class="token operator">:</span> <span class="token function">formatDateTime</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>creationTimestamp<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token literal-property property">expanded</span><span class="token operator">:</span> podExpData<span class="token punctuation">,</span> <span class="token comment">// 添加expanded字段</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"================================"</span><span class="token punctuation">,</span> newTableData<span class="token punctuation">)</span>      tableData<span class="token punctuation">.</span>value <span class="token operator">=</span> newTableData      podCount<span class="token punctuation">.</span>value <span class="token operator">=</span> resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>total<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">confirmDelete</span> <span class="token operator">=</span>  <span class="token punctuation">(</span><span class="token parameter">row</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>confirmDelete  ElMessageBox<span class="token punctuation">.</span><span class="token function">confirm</span><span class="token punctuation">(</span>      <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">确定要删除Pod"</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>row<span class="token punctuation">.</span>podName<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">" 吗?</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>      <span class="token string">'警告'</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        <span class="token literal-property property">confirmButtonText</span><span class="token operator">:</span> <span class="token string">'确认'</span><span class="token punctuation">,</span>        <span class="token literal-property property">cancelButtonText</span><span class="token operator">:</span> <span class="token string">'取消'</span><span class="token punctuation">,</span>        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'warning'</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span>  <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> deletePodParameters <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">podName</span><span class="token operator">:</span> row<span class="token punctuation">.</span>podName<span class="token punctuation">,</span>      <span class="token literal-property property">namespace</span><span class="token operator">:</span> namespace<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">DELETE_POD</span><span class="token punctuation">(</span>deletePodParameters<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"————————————————"</span><span class="token punctuation">,</span>resp<span class="token punctuation">)</span>      <span class="token function">ElMessage</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'success'</span><span class="token punctuation">,</span>        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Pod "</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>row<span class="token punctuation">.</span>podName<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">" 已被删除</span><span class="token template-punctuation string">`</span></span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">getPodsData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>      ElMessage<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">删除失败: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>e<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">getTagType</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">status</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> status <span class="token operator">===</span> <span class="token string">'Running'</span> <span class="token operator">?</span> <span class="token string">'success'</span> <span class="token operator">:</span> <span class="token string">'danger'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> dialogVisible <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> yamlContent <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> podCount <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">const</span> namespaceAllParameters <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">page_size</span><span class="token operator">:</span> <span class="token number">100000</span><span class="token punctuation">,</span>  <span class="token literal-property property">page_number</span><span class="token operator">:</span> currentPage<span class="token punctuation">.</span>value<span class="token punctuation">,</span>  <span class="token literal-property property">namespaces</span><span class="token operator">:</span> selectedNamespace<span class="token punctuation">.</span>value<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token function-variable function">refresh</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token function">getPodsData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'刷新表格数据'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> updateParameters <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">podName</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>  <span class="token literal-property property">namespace</span><span class="token operator">:</span> namespace<span class="token punctuation">,</span>  <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token function-variable function">goBack</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>  router<span class="token punctuation">.</span><span class="token function">go</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">handleSizeChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>val<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> items per page</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>  namespaceAllParameters<span class="token punctuation">.</span>page_size <span class="token operator">=</span> val  localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">'nspageSize'</span><span class="token punctuation">,</span>val<span class="token punctuation">)</span>  <span class="token function">getPodsData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">viewYAML</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">row</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'显示YAML信息'</span><span class="token punctuation">,</span> row<span class="token punctuation">.</span>podName<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 这里可以编写显示YAML信息的逻辑</span>  <span class="token comment">// 假设提供了 `getYAMLContent` 方法来获取 YAML 内容</span>  <span class="token comment">// 直接使用传入的 row 作为 YAML 内容</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">getPodYamlData</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>deploymentName<span class="token punctuation">,</span><span class="token string">"---------------????-----------------"</span><span class="token punctuation">)</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> PodDetailparams <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">daemonSetName</span><span class="token operator">:</span> deploymentName<span class="token punctuation">,</span>      <span class="token literal-property property">namespace</span><span class="token operator">:</span> namespace    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">DAEMONSET_DETAIL</span><span class="token punctuation">(</span>PodDetailparams<span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"yaml ======="</span><span class="token punctuation">,</span>json2yaml<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>    yamlContent<span class="token punctuation">.</span>value <span class="token operator">=</span> json2yaml<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 确保将数据赋值给 yamlContent</span>    updateParameters<span class="token punctuation">.</span>content <span class="token operator">=</span> yamlContent<span class="token punctuation">.</span>value  <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"你吗"</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> containerList <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">let</span> podN  <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token function-variable function">getPodDetailData</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">podName</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> PodDetailparams <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">podName</span><span class="token operator">:</span> podName<span class="token punctuation">,</span>      <span class="token literal-property property">namespace</span><span class="token operator">:</span> namespace    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    podN <span class="token operator">=</span> podName    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"ddddddddd"</span><span class="token punctuation">,</span>PodDetailparams<span class="token punctuation">)</span>    <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">POD_CONTAINERS</span><span class="token punctuation">(</span>PodDetailparams<span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"cccccccc"</span><span class="token punctuation">,</span>resp<span class="token punctuation">)</span>    containerList <span class="token operator">=</span> resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> item<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// console.log("yaml =======",json2yaml.stringify(resp.data))</span>    <span class="token comment">// yamlContent.value = json2yaml.stringify(resp.data); // 确保将数据赋值给 yamlContent</span>    <span class="token comment">// currentDeployName.value = resp.data.metadata.name</span>    <span class="token comment">// updateParameters.content = yamlContent.value</span>    <span class="token comment">// await  nextTick()</span>    <span class="token comment">// dialogVisible.value = true;</span>  <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"你吗"</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">getContainerLogs</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">containerName</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> PodDetailparams <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">podName</span><span class="token operator">:</span> podN<span class="token punctuation">,</span>      <span class="token literal-property property">namespace</span><span class="token operator">:</span> namespace<span class="token punctuation">,</span>      <span class="token literal-property property">containerName</span><span class="token operator">:</span> containerName    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"ddddddddd"</span><span class="token punctuation">,</span>PodDetailparams<span class="token punctuation">)</span>    <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">POD_LOGS</span><span class="token punctuation">(</span>PodDetailparams<span class="token punctuation">)</span>    rawLogData<span class="token punctuation">.</span>value <span class="token operator">=</span> resp<span class="token punctuation">.</span>data    <span class="token comment">// console.log("yaml =======",json2yaml.stringify(resp.data))</span>    <span class="token comment">// yamlContent.value = json2yaml.stringify(resp.data); // 确保将数据赋值给 yamlContent</span>    <span class="token comment">// currentDeployName.value = resp.data.metadata.name</span>    <span class="token comment">// updateParameters.content = yamlContent.value</span>    <span class="token comment">// await  nextTick()</span>    <span class="token comment">// dialogVisible.value = true;</span>  <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"你吗"</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">handleCurrentChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">current page: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>val<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>  currentPage<span class="token punctuation">.</span>value <span class="token operator">=</span> val  namespaceAllParameters<span class="token punctuation">.</span>page_number <span class="token operator">=</span> val  localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">'nscurrentPage'</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 将当前页保存在 localStorage</span>  <span class="token function">getPodsData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> searchText <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> tableData <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span>  <span class="token punctuation">&#123;</span>    <span class="token literal-property property">podName</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token literal-property property">Status</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">HostIp</span><span class="token operator">:</span> <span class="token string">'-'</span><span class="token punctuation">,</span>    <span class="token literal-property property">podIp</span><span class="token operator">:</span> <span class="token string">'-'</span><span class="token punctuation">,</span>    <span class="token literal-property property">RunningTime</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">creationTimestamp</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">restartCount</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">createTime</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>    <span class="token literal-property property">Operation</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>    <span class="token literal-property property">expanded</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">FailedMessage</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// ...其他数据项</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> podParameters <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">page_size</span><span class="token operator">:</span> pageSize<span class="token punctuation">,</span>  <span class="token literal-property property">page_number</span><span class="token operator">:</span> currentPage<span class="token punctuation">,</span>  <span class="token literal-property property">deploymentName</span><span class="token operator">:</span> deploymentName<span class="token punctuation">,</span>  <span class="token literal-property property">namespace</span><span class="token operator">:</span> namespace<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token function-variable function">calculateRunningTime</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">startTime</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> startedAt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>startTime<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> diff <span class="token operator">=</span> now <span class="token operator">-</span> startedAt<span class="token punctuation">;</span>  <span class="token keyword">const</span> diffDays <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>diff <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> diffHours <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>diff <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>diffDays<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">天</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>diffHours<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">时</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">getPodsData</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span><span class="token string">"typeaaaaa================================================================"</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>podParameters<span class="token punctuation">,</span><span class="token string">'--------------------------------'</span><span class="token punctuation">)</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">==</span> <span class="token string">'daemonset'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> podParameterss <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">page_size</span><span class="token operator">:</span> pageSize<span class="token punctuation">,</span>        <span class="token literal-property property">page_number</span><span class="token operator">:</span> currentPage<span class="token punctuation">,</span>        <span class="token literal-property property">daemonsetName</span><span class="token operator">:</span> deploymentName<span class="token punctuation">,</span>        <span class="token literal-property property">namespace</span><span class="token operator">:</span> namespace<span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">DAEMONSET_POD_LIST</span><span class="token punctuation">(</span>podParameterss<span class="token punctuation">)</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"牛逼：：："</span><span class="token punctuation">,</span>resp<span class="token punctuation">)</span>      <span class="token comment">// // 初始化expandedData数组并添加表头</span>      <span class="token comment">// 遍历每个 Pod 并构造其展开信息</span>      <span class="token keyword">const</span> newTableData <span class="token operator">=</span> resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>items<span class="token operator">?.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> conditionsMessage <span class="token operator">=</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>conditions<span class="token operator">?.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">condition</span> <span class="token operator">=></span> condition<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">", "</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token comment">// 表头数据，将直接作为第一个元素添加到每个expanded中</span>        <span class="token keyword">const</span> headerData <span class="token operator">=</span> <span class="token punctuation">&#123;</span>          <span class="token literal-property property">containerName</span><span class="token operator">:</span> <span class="token string">'容器名称'</span><span class="token punctuation">,</span>          <span class="token literal-property property">image</span><span class="token operator">:</span> <span class="token string">'镜像版本号'</span><span class="token punctuation">,</span>          <span class="token literal-property property">podIp</span><span class="token operator">:</span> <span class="token string">'PodIP'</span><span class="token punctuation">,</span>          <span class="token literal-property property">restartCount</span><span class="token operator">:</span> <span class="token string">'重启次数'</span><span class="token punctuation">,</span>          <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'状态'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token comment">// 构造容器状态信息</span>        <span class="token comment">// 处理containerStatuses，以显示restartCount和state</span>        <span class="token keyword">const</span> podExpData <span class="token operator">=</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>containerStatuses <span class="token operator">||</span> item<span class="token punctuation">.</span>spec<span class="token punctuation">.</span>containers<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">container</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span>          <span class="token literal-property property">name</span><span class="token operator">:</span> container<span class="token punctuation">.</span>name<span class="token punctuation">,</span>          <span class="token literal-property property">image</span><span class="token operator">:</span> container<span class="token punctuation">.</span>image<span class="token punctuation">,</span>          <span class="token comment">// 如果没有containerStatuses，设置restartCount和state为"-"</span>          <span class="token literal-property property">restartCount</span><span class="token operator">:</span> <span class="token string">'-'</span><span class="token punctuation">,</span>          <span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'-'</span> <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">container</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>          <span class="token keyword">let</span> status <span class="token operator">=</span> <span class="token string">'-'</span><span class="token punctuation">;</span>          <span class="token keyword">let</span> conditionMessage <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>          <span class="token comment">// 解析容器状态</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>container<span class="token punctuation">.</span>state<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>container<span class="token punctuation">.</span>state<span class="token punctuation">.</span>running<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>              status <span class="token operator">=</span> <span class="token string">'运行中'</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>container<span class="token punctuation">.</span>state<span class="token punctuation">.</span>waiting<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>              status <span class="token operator">=</span> <span class="token string">'等待中'</span><span class="token punctuation">;</span>              conditionMessage <span class="token operator">=</span> container<span class="token punctuation">.</span>state<span class="token punctuation">.</span>waiting<span class="token punctuation">.</span>message <span class="token operator">||</span> conditionsMessage<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>container<span class="token punctuation">.</span>state<span class="token punctuation">.</span>terminated<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>              status <span class="token operator">=</span> <span class="token string">'已终止'</span><span class="token punctuation">;</span>              conditionMessage <span class="token operator">=</span> container<span class="token punctuation">.</span>state<span class="token punctuation">.</span>terminated<span class="token punctuation">.</span>message <span class="token operator">||</span> conditionsMessage<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 如果容器还没有状态（可能是pod还在Pending阶段），使用Pod的conditions信息</span>            conditionMessage <span class="token operator">=</span> conditionsMessage<span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span>          <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">containerName</span><span class="token operator">:</span> container<span class="token punctuation">.</span>name <span class="token operator">||</span> <span class="token string">'-'</span><span class="token punctuation">,</span>            <span class="token literal-property property">image</span><span class="token operator">:</span> container<span class="token punctuation">.</span>image <span class="token operator">||</span> <span class="token string">'-'</span><span class="token punctuation">,</span>            <span class="token literal-property property">podIp</span><span class="token operator">:</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>podIP <span class="token operator">||</span> <span class="token string">'-'</span><span class="token punctuation">,</span>            <span class="token literal-property property">restartCount</span><span class="token operator">:</span> container<span class="token punctuation">.</span>restartCount <span class="token operator">!==</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> container<span class="token punctuation">.</span>restartCount<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">'-'</span><span class="token punctuation">,</span>            <span class="token literal-property property">status</span><span class="token operator">:</span> status<span class="token punctuation">,</span>            <span class="token literal-property property">conditionMessage</span><span class="token operator">:</span> conditionMessage  <span class="token comment">// 存储条件消息，以便于前端显示提示</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        podExpData<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>headerData<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> failureMessage <span class="token operator">=</span> <span class="token function">getFailureMessage</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 构造表格数据项，并包含展开属性</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// ...其他属性...</span>          <span class="token literal-property property">FailedMessage</span><span class="token operator">:</span> failureMessage<span class="token punctuation">,</span>          <span class="token literal-property property">podName</span><span class="token operator">:</span> item<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>name<span class="token punctuation">,</span>          <span class="token literal-property property">Status</span><span class="token operator">:</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>phase<span class="token punctuation">,</span>          <span class="token literal-property property">HostIp</span><span class="token operator">:</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>hostIP<span class="token punctuation">,</span>          <span class="token literal-property property">podIp</span><span class="token operator">:</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>podIP<span class="token punctuation">,</span>          <span class="token literal-property property">RunningTime</span><span class="token operator">:</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>startTime <span class="token operator">?</span><span class="token function">calculateRunningTime</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>startTime<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token string">'0天0时'</span><span class="token punctuation">,</span>          <span class="token literal-property property">restartCount</span><span class="token operator">:</span> <span class="token function">calculateTotalRestartCount</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token literal-property property">createTime</span><span class="token operator">:</span> <span class="token function">formatDateTime</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>creationTimestamp<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token literal-property property">expanded</span><span class="token operator">:</span> podExpData<span class="token punctuation">,</span> <span class="token comment">// 添加expanded字段</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"================================"</span><span class="token punctuation">,</span>newTableData<span class="token punctuation">)</span>      tableData<span class="token punctuation">.</span>value <span class="token operator">=</span> newTableData      <span class="token comment">// 更新部署计数</span>      podCount<span class="token punctuation">.</span>value <span class="token operator">=</span> resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>total<span class="token punctuation">;</span>        <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">==</span> <span class="token string">'statefulset'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> podParameters <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">page_size</span><span class="token operator">:</span> pageSize<span class="token punctuation">,</span>        <span class="token literal-property property">page_number</span><span class="token operator">:</span> currentPage<span class="token punctuation">,</span>        <span class="token literal-property property">statefulsetName</span><span class="token operator">:</span> deploymentName<span class="token punctuation">,</span>        <span class="token literal-property property">namespace</span><span class="token operator">:</span> namespace<span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">STATEFULSET_POD_LIST</span><span class="token punctuation">(</span>podParameters<span class="token punctuation">)</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"牛逼：：："</span><span class="token punctuation">,</span>resp<span class="token punctuation">)</span>      <span class="token comment">// // 初始化expandedData数组并添加表头</span>      <span class="token comment">// 遍历每个 Pod 并构造其展开信息</span>      <span class="token keyword">const</span> newTableData <span class="token operator">=</span> resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>items<span class="token operator">?.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> conditionsMessage <span class="token operator">=</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>conditions<span class="token operator">?.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">condition</span> <span class="token operator">=></span> condition<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">", "</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token comment">// 表头数据，将直接作为第一个元素添加到每个expanded中</span>        <span class="token keyword">const</span> headerData <span class="token operator">=</span> <span class="token punctuation">&#123;</span>          <span class="token literal-property property">containerName</span><span class="token operator">:</span> <span class="token string">'容器名称'</span><span class="token punctuation">,</span>          <span class="token literal-property property">image</span><span class="token operator">:</span> <span class="token string">'镜像版本号'</span><span class="token punctuation">,</span>          <span class="token literal-property property">podIp</span><span class="token operator">:</span> <span class="token string">'PodIP'</span><span class="token punctuation">,</span>          <span class="token literal-property property">restartCount</span><span class="token operator">:</span> <span class="token string">'重启次数'</span><span class="token punctuation">,</span>          <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'状态'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token comment">// 构造容器状态信息</span>        <span class="token comment">// 处理containerStatuses，以显示restartCount和state</span>        <span class="token keyword">const</span> podExpData <span class="token operator">=</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>containerStatuses <span class="token operator">||</span> item<span class="token punctuation">.</span>spec<span class="token punctuation">.</span>containers<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">container</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span>          <span class="token literal-property property">name</span><span class="token operator">:</span> container<span class="token punctuation">.</span>name<span class="token punctuation">,</span>          <span class="token literal-property property">image</span><span class="token operator">:</span> container<span class="token punctuation">.</span>image<span class="token punctuation">,</span>          <span class="token comment">// 如果没有containerStatuses，设置restartCount和state为"-"</span>          <span class="token literal-property property">restartCount</span><span class="token operator">:</span> <span class="token string">'-'</span><span class="token punctuation">,</span>          <span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'-'</span> <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">container</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>          <span class="token keyword">let</span> status <span class="token operator">=</span> <span class="token string">'-'</span><span class="token punctuation">;</span>          <span class="token keyword">let</span> conditionMessage <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>          <span class="token comment">// 解析容器状态</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>container<span class="token punctuation">.</span>state<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>container<span class="token punctuation">.</span>state<span class="token punctuation">.</span>running<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>              status <span class="token operator">=</span> <span class="token string">'运行中'</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>container<span class="token punctuation">.</span>state<span class="token punctuation">.</span>waiting<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>              status <span class="token operator">=</span> <span class="token string">'等待中'</span><span class="token punctuation">;</span>              conditionMessage <span class="token operator">=</span> container<span class="token punctuation">.</span>state<span class="token punctuation">.</span>waiting<span class="token punctuation">.</span>message <span class="token operator">||</span> conditionsMessage<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>container<span class="token punctuation">.</span>state<span class="token punctuation">.</span>terminated<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>              status <span class="token operator">=</span> <span class="token string">'已终止'</span><span class="token punctuation">;</span>              conditionMessage <span class="token operator">=</span> container<span class="token punctuation">.</span>state<span class="token punctuation">.</span>terminated<span class="token punctuation">.</span>message <span class="token operator">||</span> conditionsMessage<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 如果容器还没有状态（可能是pod还在Pending阶段），使用Pod的conditions信息</span>            conditionMessage <span class="token operator">=</span> conditionsMessage<span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span>          <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">containerName</span><span class="token operator">:</span> container<span class="token punctuation">.</span>name <span class="token operator">||</span> <span class="token string">'-'</span><span class="token punctuation">,</span>            <span class="token literal-property property">image</span><span class="token operator">:</span> container<span class="token punctuation">.</span>image <span class="token operator">||</span> <span class="token string">'-'</span><span class="token punctuation">,</span>            <span class="token literal-property property">podIp</span><span class="token operator">:</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>podIP <span class="token operator">||</span> <span class="token string">'-'</span><span class="token punctuation">,</span>            <span class="token literal-property property">restartCount</span><span class="token operator">:</span> container<span class="token punctuation">.</span>restartCount <span class="token operator">!==</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> container<span class="token punctuation">.</span>restartCount<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">'-'</span><span class="token punctuation">,</span>            <span class="token literal-property property">status</span><span class="token operator">:</span> status<span class="token punctuation">,</span>            <span class="token literal-property property">conditionMessage</span><span class="token operator">:</span> conditionMessage  <span class="token comment">// 存储条件消息，以便于前端显示提示</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        podExpData<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>headerData<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> failureMessage <span class="token operator">=</span> <span class="token function">getFailureMessage</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 构造表格数据项，并包含展开属性</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// ...其他属性...</span>          <span class="token literal-property property">FailedMessage</span><span class="token operator">:</span> failureMessage<span class="token punctuation">,</span>          <span class="token literal-property property">podName</span><span class="token operator">:</span> item<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>name<span class="token punctuation">,</span>          <span class="token literal-property property">Status</span><span class="token operator">:</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>phase<span class="token punctuation">,</span>          <span class="token literal-property property">HostIp</span><span class="token operator">:</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>hostIP<span class="token punctuation">,</span>          <span class="token literal-property property">podIp</span><span class="token operator">:</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>podIP<span class="token punctuation">,</span>          <span class="token literal-property property">RunningTime</span><span class="token operator">:</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>startTime <span class="token operator">?</span><span class="token function">calculateRunningTime</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>startTime<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token string">'0天0时'</span><span class="token punctuation">,</span>          <span class="token literal-property property">restartCount</span><span class="token operator">:</span> <span class="token function">calculateTotalRestartCount</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token literal-property property">createTime</span><span class="token operator">:</span> <span class="token function">formatDateTime</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>creationTimestamp<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token literal-property property">expanded</span><span class="token operator">:</span> podExpData<span class="token punctuation">,</span> <span class="token comment">// 添加expanded字段</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"================================"</span><span class="token punctuation">,</span>newTableData<span class="token punctuation">)</span>      tableData<span class="token punctuation">.</span>value <span class="token operator">=</span> newTableData      <span class="token comment">// 更新部署计数</span>      podCount<span class="token punctuation">.</span>value <span class="token operator">=</span> resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>total<span class="token punctuation">;</span>      <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">==</span> <span class="token string">'deployment'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">DEPLOYMENT_POD_LIST</span><span class="token punctuation">(</span>podParameters<span class="token punctuation">)</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"牛逼：：："</span><span class="token punctuation">,</span>resp<span class="token punctuation">)</span>      <span class="token comment">// // 初始化expandedData数组并添加表头</span>      <span class="token comment">// 遍历每个 Pod 并构造其展开信息</span>      <span class="token keyword">const</span> newTableData <span class="token operator">=</span> resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>items<span class="token operator">?.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> conditionsMessage <span class="token operator">=</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>conditions<span class="token operator">?.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">condition</span> <span class="token operator">=></span> condition<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">", "</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token comment">// 表头数据，将直接作为第一个元素添加到每个expanded中</span>        <span class="token keyword">const</span> headerData <span class="token operator">=</span> <span class="token punctuation">&#123;</span>          <span class="token literal-property property">containerName</span><span class="token operator">:</span> <span class="token string">'容器名称'</span><span class="token punctuation">,</span>          <span class="token literal-property property">image</span><span class="token operator">:</span> <span class="token string">'镜像版本号'</span><span class="token punctuation">,</span>          <span class="token literal-property property">podIp</span><span class="token operator">:</span> <span class="token string">'PodIP'</span><span class="token punctuation">,</span>          <span class="token literal-property property">restartCount</span><span class="token operator">:</span> <span class="token string">'重启次数'</span><span class="token punctuation">,</span>          <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'状态'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token comment">// 构造容器状态信息</span>        <span class="token comment">// 处理containerStatuses，以显示restartCount和state</span>        <span class="token keyword">const</span> podExpData <span class="token operator">=</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>containerStatuses <span class="token operator">||</span> item<span class="token punctuation">.</span>spec<span class="token punctuation">.</span>containers<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">container</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span>          <span class="token literal-property property">name</span><span class="token operator">:</span> container<span class="token punctuation">.</span>name<span class="token punctuation">,</span>          <span class="token literal-property property">image</span><span class="token operator">:</span> container<span class="token punctuation">.</span>image<span class="token punctuation">,</span>          <span class="token comment">// 如果没有containerStatuses，设置restartCount和state为"-"</span>          <span class="token literal-property property">restartCount</span><span class="token operator">:</span> <span class="token string">'-'</span><span class="token punctuation">,</span>          <span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'-'</span> <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">container</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>          <span class="token keyword">let</span> status <span class="token operator">=</span> <span class="token string">'-'</span><span class="token punctuation">;</span>          <span class="token keyword">let</span> conditionMessage <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>          <span class="token comment">// 解析容器状态</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>container<span class="token punctuation">.</span>state<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>container<span class="token punctuation">.</span>state<span class="token punctuation">.</span>running<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>              status <span class="token operator">=</span> <span class="token string">'运行中'</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>container<span class="token punctuation">.</span>state<span class="token punctuation">.</span>waiting<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>              status <span class="token operator">=</span> <span class="token string">'等待中'</span><span class="token punctuation">;</span>              conditionMessage <span class="token operator">=</span> container<span class="token punctuation">.</span>state<span class="token punctuation">.</span>waiting<span class="token punctuation">.</span>message <span class="token operator">||</span> conditionsMessage<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>container<span class="token punctuation">.</span>state<span class="token punctuation">.</span>terminated<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>              status <span class="token operator">=</span> <span class="token string">'已终止'</span><span class="token punctuation">;</span>              conditionMessage <span class="token operator">=</span> container<span class="token punctuation">.</span>state<span class="token punctuation">.</span>terminated<span class="token punctuation">.</span>message <span class="token operator">||</span> conditionsMessage<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 如果容器还没有状态（可能是pod还在Pending阶段），使用Pod的conditions信息</span>            conditionMessage <span class="token operator">=</span> conditionsMessage<span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span>          <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">containerName</span><span class="token operator">:</span> container<span class="token punctuation">.</span>name <span class="token operator">||</span> <span class="token string">'-'</span><span class="token punctuation">,</span>            <span class="token literal-property property">image</span><span class="token operator">:</span> container<span class="token punctuation">.</span>image <span class="token operator">||</span> <span class="token string">'-'</span><span class="token punctuation">,</span>            <span class="token literal-property property">podIp</span><span class="token operator">:</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>podIP <span class="token operator">||</span> <span class="token string">'-'</span><span class="token punctuation">,</span>            <span class="token literal-property property">restartCount</span><span class="token operator">:</span> container<span class="token punctuation">.</span>restartCount <span class="token operator">!==</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> container<span class="token punctuation">.</span>restartCount<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">'-'</span><span class="token punctuation">,</span>            <span class="token literal-property property">status</span><span class="token operator">:</span> status<span class="token punctuation">,</span>            <span class="token literal-property property">conditionMessage</span><span class="token operator">:</span> conditionMessage  <span class="token comment">// 存储条件消息，以便于前端显示提示</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        podExpData<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>headerData<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> failureMessage <span class="token operator">=</span> <span class="token function">getFailureMessage</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 构造表格数据项，并包含展开属性</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// ...其他属性...</span>          <span class="token literal-property property">FailedMessage</span><span class="token operator">:</span> failureMessage<span class="token punctuation">,</span>          <span class="token literal-property property">podName</span><span class="token operator">:</span> item<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>name<span class="token punctuation">,</span>          <span class="token literal-property property">Status</span><span class="token operator">:</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>phase<span class="token punctuation">,</span>          <span class="token literal-property property">HostIp</span><span class="token operator">:</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>hostIP<span class="token punctuation">,</span>          <span class="token literal-property property">podIp</span><span class="token operator">:</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>podIP<span class="token punctuation">,</span>          <span class="token literal-property property">RunningTime</span><span class="token operator">:</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>startTime <span class="token operator">?</span><span class="token function">calculateRunningTime</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>startTime<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token string">'0天0时'</span><span class="token punctuation">,</span>          <span class="token literal-property property">restartCount</span><span class="token operator">:</span> <span class="token function">calculateTotalRestartCount</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token literal-property property">createTime</span><span class="token operator">:</span> <span class="token function">formatDateTime</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>creationTimestamp<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token literal-property property">expanded</span><span class="token operator">:</span> podExpData<span class="token punctuation">,</span> <span class="token comment">// 添加expanded字段</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"================================"</span><span class="token punctuation">,</span>newTableData<span class="token punctuation">)</span>      tableData<span class="token punctuation">.</span>value <span class="token operator">=</span> newTableData      <span class="token comment">// 更新部署计数</span>      podCount<span class="token punctuation">.</span>value <span class="token operator">=</span> resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>total<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>state<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">'未知'</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>state<span class="token punctuation">.</span>running<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token string">'运行中'</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>state<span class="token punctuation">.</span>waiting<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">等待中 (</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>state<span class="token punctuation">.</span>waiting<span class="token punctuation">.</span>reason<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>state<span class="token punctuation">.</span>terminated<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">已终止 (</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>state<span class="token punctuation">.</span>terminated<span class="token punctuation">.</span>reason<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token string">'未知'</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">getFailureMessage</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">pod</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 假设失败信息在条件列表中</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>pod<span class="token punctuation">.</span>status <span class="token operator">&amp;&amp;</span> pod<span class="token punctuation">.</span>status<span class="token punctuation">.</span>conditions<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> unschedulableCondition <span class="token operator">=</span> pod<span class="token punctuation">.</span>status<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">condition</span> <span class="token operator">=></span> condition<span class="token punctuation">.</span>reason <span class="token operator">===</span> <span class="token string">'Unschedulable'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> unschedulableCondition <span class="token operator">?</span> unschedulableCondition<span class="token punctuation">.</span>message <span class="token operator">:</span> <span class="token string">'No failure message'</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> <span class="token string">'No failure message'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">calculateTotalRestartCount</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">pod</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>pod<span class="token punctuation">.</span>status <span class="token operator">&amp;&amp;</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>pod<span class="token punctuation">.</span>status<span class="token punctuation">.</span>containerStatuses<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> pod<span class="token punctuation">.</span>status<span class="token punctuation">.</span>containerStatuses<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">total<span class="token punctuation">,</span> containerStatus</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> total <span class="token operator">+</span> <span class="token punctuation">(</span>containerStatus<span class="token punctuation">.</span>restartCount <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> <span class="token string">'-'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// 设置watcher来监听selectedNamespace的改变</span><span class="token function">watch</span><span class="token punctuation">(</span>selectedNamespace<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">newNamespace</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 更新deploymentParameters中的namespace</span>  podParameters<span class="token punctuation">.</span>namespace <span class="token operator">=</span> newNamespace<span class="token punctuation">;</span>  <span class="token comment">// 重新调用getDeployData以获取新命名空间的部署数据</span>  <span class="token function">getPodsData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">formatDateTime</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">dateTimeString</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> dateTimeString<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'T'</span><span class="token punctuation">,</span> <span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'Z'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token function">onBeforeMount</span><span class="token punctuation">(</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 尝试从 localStorage 中读取状态</span>  <span class="token keyword">const</span> savedPageSize <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'nspageSize'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> savedCurrentPage <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'nscurrentPage'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 如果存在则更新到响应式变量中</span>  <span class="token comment">// if (savedPageSize) &#123;</span>  <span class="token comment">//   pageSize.value = parseInt(savedPageSize, 10);</span>  <span class="token comment">// &#125;</span>  <span class="token comment">// if (savedCurrentPage) &#123;</span>  <span class="token comment">//   currentPage.value = parseInt(savedCurrentPage, 10);</span>  <span class="token comment">// &#125;</span>  <span class="token function">getPodsData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// getNSAllData()</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>style scoped<span class="token operator">></span><span class="token punctuation">.</span>loading<span class="token operator">-</span>icon <span class="token punctuation">&#123;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 20px<span class="token punctuation">;</span> <span class="token comment">/* 或者您希望的任何尺寸 */</span>  <span class="token literal-property property">height</span><span class="token operator">:</span> 20px<span class="token punctuation">;</span> <span class="token comment">/* 保持与宽度相同以保持图标的纵横比 */</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 5px<span class="token punctuation">;</span> <span class="token comment">/* 添加一点空间在状态文本和图标之间 */</span>  <span class="token literal-property property">animation</span><span class="token operator">:</span> loading<span class="token operator">-</span>spin 2s linear infinite<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 如果需要，可以移除这个类，因为它可能会导致对齐问题 */</span><span class="token comment">/* .loader &#123;  animation: loader-spin 1s linear infinite;&#125; */</span>@keyframes loading<span class="token operator">-</span>spin <span class="token punctuation">&#123;</span>  <span class="token number">0</span><span class="token operator">%</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">transform</span><span class="token operator">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>0deg<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token number">100</span><span class="token operator">%</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">transform</span><span class="token operator">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>360deg<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>container <span class="token punctuation">&#123;</span>  <span class="token literal-property property">margin</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>deployment<span class="token operator">-</span>header <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>  justify<span class="token operator">-</span>content<span class="token operator">:</span> space<span class="token operator">-</span>between<span class="token punctuation">;</span>  <span class="token literal-property property">padding</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  <span class="token literal-property property">margin</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> <span class="token operator">-</span>10px<span class="token punctuation">;</span>  <span class="token literal-property property">background</span><span class="token operator">:</span> #<span class="token constant">FFF</span><span class="token punctuation">;</span>  <span class="token literal-property property">border</span><span class="token operator">:</span> 2px solid #ebeef5<span class="token punctuation">;</span>  box<span class="token operator">-</span>shadow<span class="token operator">:</span> <span class="token number">0</span> 2px 10px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 新增左侧部分样式，放置“命名空间：”文本和下拉框 */</span><span class="token punctuation">.</span>left<span class="token operator">-</span>section <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 确保下拉框和文本在同一行 */</span><span class="token punctuation">.</span>el<span class="token operator">-</span>select <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 为下拉框添加左侧间隔 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>header <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>  justify<span class="token operator">-</span>content<span class="token operator">:</span> space<span class="token operator">-</span>between<span class="token punctuation">;</span> <span class="token comment">/* 添加此属性对子元素进行分散对齐 */</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> 0px<span class="token punctuation">;</span>  <span class="token literal-property property">gap</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  <span class="token literal-property property">padding</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  <span class="token literal-property property">background</span><span class="token operator">:</span> #<span class="token constant">FFF</span><span class="token punctuation">;</span>  <span class="token literal-property property">border</span><span class="token operator">:</span> 2px solid #ebeef5<span class="token punctuation">;</span>  box<span class="token operator">-</span>shadow<span class="token operator">:</span> <span class="token number">0</span> 2px 12px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>search<span class="token operator">-</span>input <span class="token punctuation">&#123;</span>  <span class="token comment">/*flex-grow: 1;*/</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 200px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>table<span class="token operator">-</span>wrapper <span class="token punctuation">&#123;</span>  <span class="token literal-property property">background</span><span class="token operator">:</span> #<span class="token constant">FFF</span><span class="token punctuation">;</span>  <span class="token literal-property property">border</span><span class="token operator">:</span> 2px solid #ebeef5<span class="token punctuation">;</span> <span class="token comment">/* 浅色边框线 */</span>  box<span class="token operator">-</span>shadow<span class="token operator">:</span> <span class="token number">0</span> 2px 12px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>paginations <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>top<span class="token operator">:</span> 10px<span class="token punctuation">;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 20px<span class="token punctuation">;</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 左侧组合样式，创建按钮和搜索框靠在一起 */</span><span class="token punctuation">.</span>left<span class="token operator">-</span>group <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>  <span class="token literal-property property">gap</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* You can adjust the gap as needed */</span><span class="token punctuation">&#125;</span><span class="token comment">/* 右侧刷新按钮 */</span><span class="token punctuation">.</span>right<span class="token operator">-</span>group <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>yaml<span class="token operator">-</span>content <span class="token punctuation">&#123;</span>  background<span class="token operator">-</span>color<span class="token operator">:</span> #f5f5f5<span class="token punctuation">;</span>  border<span class="token operator">-</span>left<span class="token operator">:</span> 3px solid #4795EE<span class="token punctuation">;</span>  <span class="token literal-property property">padding</span><span class="token operator">:</span> 15px<span class="token punctuation">;</span>  white<span class="token operator">-</span>space<span class="token operator">:</span> pre<span class="token operator">-</span>wrap<span class="token punctuation">;</span>  text<span class="token operator">-</span>align<span class="token operator">:</span> left<span class="token punctuation">;</span>  <span class="token literal-property property">margin</span><span class="token operator">:</span> 20px <span class="token number">0</span><span class="token punctuation">;</span>  overflow<span class="token operator">-</span>x<span class="token operator">:</span> auto<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>status<span class="token operator">-</span>active <span class="token punctuation">&#123;</span>  <span class="token literal-property property">color</span><span class="token operator">:</span> #67C23A<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>status<span class="token operator">-</span>inactive <span class="token punctuation">&#123;</span>  <span class="token literal-property property">color</span><span class="token operator">:</span> red<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>dialog<span class="token operator">-</span>footer <span class="token punctuation">&#123;</span>  <span class="token comment">/*text-align: right;*/</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  justify<span class="token operator">-</span>content<span class="token operator">:</span> flex<span class="token operator">-</span>end<span class="token punctuation">;</span>  <span class="token literal-property property">padding</span><span class="token operator">:</span> 8px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>deployment<span class="token operator">-</span>header <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>  <span class="token literal-property property">height</span><span class="token operator">:</span> 30px<span class="token punctuation">;</span>  <span class="token literal-property property">padding</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  <span class="token literal-property property">margin</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> <span class="token operator">-</span>10px<span class="token punctuation">;</span>  <span class="token literal-property property">background</span><span class="token operator">:</span> #<span class="token constant">FFF</span><span class="token punctuation">;</span>  <span class="token literal-property property">border</span><span class="token operator">:</span> 2px solid #ebeef5<span class="token punctuation">;</span>  box<span class="token operator">-</span>shadow<span class="token operator">:</span> <span class="token number">0</span> 2px 10px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>form<span class="token operator">-</span>item<span class="token operator">-</span><span class="token keyword">with</span><span class="token operator">-</span>help <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>top<span class="token operator">:</span> 10px<span class="token punctuation">;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>form<span class="token operator">-</span>item<span class="token operator">-</span><span class="token keyword">with</span><span class="token operator">-</span>resource <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>top<span class="token operator">:</span> 10px<span class="token punctuation">;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>form<span class="token operator">-</span>item <span class="token punctuation">&#123;</span>  flex<span class="token operator">-</span>wrap<span class="token operator">:</span> wrap<span class="token punctuation">;</span> <span class="token comment">/* 确保换行 */</span>  <span class="token comment">/*align-items: center; !* 如果需要垂直居中 *!*/</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 保持垂直间距 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>item <span class="token punctuation">&#123;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 200px<span class="token punctuation">;</span>  margin<span class="token operator">-</span>right<span class="token operator">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>help<span class="token operator">-</span>text <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> block<span class="token punctuation">;</span> <span class="token comment">/* 保证帮助文本在新的行显示 */</span>  font<span class="token operator">-</span>size<span class="token operator">:</span> 12px<span class="token punctuation">;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 1000px<span class="token punctuation">;</span>  <span class="token literal-property property">color</span><span class="token operator">:</span> #<span class="token number">999999</span><span class="token punctuation">;</span>  margin<span class="token operator">-</span>top<span class="token operator">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span><span class="token keyword">with</span><span class="token operator">-</span>help <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>top<span class="token operator">:</span> 20px<span class="token punctuation">;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  flex<span class="token operator">-</span>direction<span class="token operator">:</span> column<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>deployname <span class="token punctuation">&#123;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 300px<span class="token punctuation">;</span> <span class="token comment">/* 限制这个div的宽度 */</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  flex<span class="token operator">-</span>direction<span class="token operator">:</span> column<span class="token punctuation">;</span> <span class="token comment">/* 让子元素垂直排列 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>containername <span class="token punctuation">&#123;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 250px<span class="token punctuation">;</span> <span class="token comment">/* 限制这个div的宽度 */</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> <span class="token operator">-</span>50px<span class="token punctuation">;</span>  flex<span class="token operator">-</span>direction<span class="token operator">:</span> column<span class="token punctuation">;</span> <span class="token comment">/* 让子元素垂直排列 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>add<span class="token operator">-</span>button <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>top<span class="token operator">:</span> <span class="token operator">-</span>20px<span class="token punctuation">;</span> <span class="token comment">/* 添加按钮与输入行之间的空间 */</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 200px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>container<span class="token operator">-</span>cpu <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  flex<span class="token operator">-</span>direction<span class="token operator">:</span> column<span class="token punctuation">;</span>  <span class="token comment">/*padding-left: -20px; !* 往右移动整个容器 *!*/</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>cpu<span class="token operator">-</span>label <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> 5px<span class="token punctuation">;</span> <span class="token comment">/* 调整为所需的间距 */</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> <span class="token operator">-</span>50px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>container <span class="token punctuation">&#123;</span>  <span class="token literal-property property">margin</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>item<span class="token operator">-</span>container <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>content<span class="token operator">-</span>container <span class="token punctuation">&#123;</span>  background<span class="token operator">-</span>color<span class="token operator">:</span> #<span class="token constant">F2F2F2</span><span class="token punctuation">;</span>  <span class="token literal-property property">padding</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 700px<span class="token punctuation">;</span>  justify<span class="token operator">-</span>content<span class="token operator">:</span> space<span class="token operator">-</span>between<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>  <span class="token literal-property property">transition</span><span class="token operator">:</span> height <span class="token number">0</span><span class="token punctuation">.</span>3s<span class="token punctuation">;</span>  <span class="token literal-property property">overflow</span><span class="token operator">:</span> hidden<span class="token punctuation">;</span>  <span class="token literal-property property">position</span><span class="token operator">:</span> relative<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>content<span class="token operator">-</span>container<span class="token punctuation">.</span>collapsed <span class="token punctuation">&#123;</span>  <span class="token literal-property property">height</span><span class="token operator">:</span> 40px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>info <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>actions <span class="token punctuation">&#123;</span>  <span class="token literal-property property">position</span><span class="token operator">:</span> absolute<span class="token punctuation">;</span>  <span class="token literal-property property">right</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 调整为需要的值 */</span>  <span class="token literal-property property">top</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 调整为需要的值 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>row <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>  <span class="token literal-property property">gap</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  <span class="token comment">/*margin-left: -50px;*/</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>row <span class="token punctuation">.</span>el<span class="token operator">-</span>input <span class="token punctuation">&#123;</span>  <span class="token literal-property property">flex</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>row label <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 或者需要的任何值 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>row <span class="token punctuation">.</span>el<span class="token operator">-</span>input <span class="token punctuation">.</span>el<span class="token operator">-</span>input__inner <span class="token punctuation">&#123;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span> <span class="token comment">/* 让输入框充满其容器 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>containername p <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 为“CPU：”下方添加一些间隔 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>form<span class="token operator">-</span>item<span class="token operator">-</span>resource <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 20px<span class="token punctuation">;</span> <span class="token comment">/* 整个表单项向右移动 20px */</span>  margin<span class="token operator">-</span>top<span class="token operator">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>custom<span class="token operator">-</span>form<span class="token operator">-</span>item <span class="token punctuation">&#123;</span>  <span class="token literal-property property">height</span><span class="token operator">:</span> auto<span class="token punctuation">;</span>  <span class="token literal-property property">overflow</span><span class="token operator">:</span> auto<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>check<span class="token operator">-</span>method<span class="token operator">-</span>container<span class="token punctuation">,</span><span class="token punctuation">.</span>execution<span class="token operator">-</span>command<span class="token operator">-</span>container <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 添加一些垂直间距 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>method<span class="token operator">-</span>label <span class="token punctuation">&#123;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 100px<span class="token punctuation">;</span>  <span class="token literal-property property">margin</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  margin<span class="token operator">-</span>right<span class="token operator">:</span> 20px<span class="token punctuation">;</span> <span class="token comment">/* 文本与选择框/输入框之间的间隔 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>command<span class="token operator">-</span>label <span class="token punctuation">&#123;</span>  <span class="token comment">/*margin-right: 20px; !* 文本与输入框之间的间隔 *!*/</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 100px<span class="token punctuation">;</span>  <span class="token literal-property property">margin</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>livenessdiv <span class="token punctuation">&#123;</span>  background<span class="token operator">-</span>color<span class="token operator">:</span> white<span class="token punctuation">;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 500px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>port<span class="token operator">-</span>range <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>healthContainer <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> <span class="token operator">-</span>50px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>el<span class="token operator">-</span>select<span class="token punctuation">,</span><span class="token punctuation">.</span>el<span class="token operator">-</span>input <span class="token punctuation">&#123;</span>  <span class="token comment">/*flex-grow: 1; !* 输入框和选择框将占据剩余空间 *!*/</span>  max<span class="token operator">-</span>width<span class="token operator">:</span> <span class="token function">calc</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token operator">%</span> <span class="token operator">-</span> 100px<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* 限制最大宽度，这里的100px是示例，可以根据实际情况调整 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>button<span class="token operator">-</span>group <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  justify<span class="token operator">-</span>content<span class="token operator">:</span> center<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>  <span class="token literal-property property">gap</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 调整按钮之间的间隔 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>paginations <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>top<span class="token operator">:</span> 10px<span class="token punctuation">;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 20px<span class="token punctuation">;</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>parent<span class="token operator">-</span>container <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  <span class="token comment">/* 设置父容器为flex布局 */</span>  justify<span class="token operator">-</span>content<span class="token operator">:</span> center<span class="token punctuation">;</span>  <span class="token comment">/* 水平居中 */</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>  <span class="token comment">/* 垂直居中 */</span>  <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>  <span class="token comment">/* 父容器需要有确定的高度 */</span>  background<span class="token operator">-</span>color<span class="token operator">:</span> #<span class="token constant">F3F4F7</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>expanded<span class="token operator">-</span>content <span class="token punctuation">&#123;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">95</span><span class="token operator">%</span><span class="token punctuation">;</span>  <span class="token literal-property property">border</span><span class="token operator">:</span> 1px solid #dcdcdc<span class="token punctuation">;</span> <span class="token comment">/* 表格四周的外边框 */</span>  background<span class="token operator">-</span>color<span class="token operator">:</span> white<span class="token punctuation">;</span>  margin<span class="token operator">-</span>top<span class="token operator">:</span> 10px<span class="token punctuation">;</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>row <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>cell <span class="token punctuation">&#123;</span>  <span class="token literal-property property">flex</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">/* 让所有单元格平均分配空间 */</span>  text<span class="token operator">-</span>align<span class="token operator">:</span> center<span class="token punctuation">;</span>  <span class="token literal-property property">padding</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 单元格内边距 */</span>  border<span class="token operator">-</span>top<span class="token operator">:</span> none<span class="token punctuation">;</span> <span class="token comment">/* 默认去除顶部边框 */</span><span class="token punctuation">&#125;</span><span class="token comment">/* 只给第一行的最底部添加边框 */</span><span class="token punctuation">.</span>row<span class="token operator">:</span>first<span class="token operator">-</span>child <span class="token punctuation">.</span>cell <span class="token punctuation">&#123;</span>  border<span class="token operator">-</span>bottom<span class="token operator">:</span> 1px solid #dcdcdc<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* CSS 类来居中表格单元格内容 */</span><span class="token punctuation">.</span>text<span class="token operator">-</span>center <span class="token punctuation">&#123;</span>  text<span class="token operator">-</span>align<span class="token operator">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token operator">:</span><span class="token operator">:</span>v<span class="token operator">-</span>deep <span class="token punctuation">.</span>text<span class="token operator">-</span>center <span class="token punctuation">&#123;</span>  text<span class="token operator">-</span>align<span class="token operator">:</span> center <span class="token operator">!</span>important<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 设置选择器的布局 */</span><span class="token punctuation">.</span>selectors <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span> <span class="token comment">/* 使用flex布局 */</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span> <span class="token comment">/* 垂直居中对齐 */</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 20px<span class="token punctuation">;</span> <span class="token comment">/* 距离返回按钮的左边距 */</span><span class="token punctuation">&#125;</span><span class="token comment">/* 设置选择器的样式 */</span><span class="token punctuation">.</span>selector <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>right<span class="token operator">:</span> 20px<span class="token punctuation">;</span> <span class="token comment">/* 选择器之间的右边距 */</span><span class="token punctuation">&#125;</span><span class="token comment">/* 移除最后一个选择器的右边距 */</span><span class="token punctuation">.</span>selector<span class="token operator">:</span>last<span class="token operator">-</span>child <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>right<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 日志行样式 */</span><span class="token punctuation">.</span>log<span class="token operator">-</span>line <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 行号样式 */</span><span class="token punctuation">.</span>line<span class="token operator">-</span>number <span class="token punctuation">&#123;</span>  <span class="token literal-property property">color</span><span class="token operator">:</span> #<span class="token number">999</span><span class="token punctuation">;</span>  min<span class="token operator">-</span>width<span class="token operator">:</span> 50px<span class="token punctuation">;</span> <span class="token comment">/* 为行号保留足够宽度 */</span>  text<span class="token operator">-</span>align<span class="token operator">:</span> right<span class="token punctuation">;</span> <span class="token comment">/* 行号右对齐 */</span>  padding<span class="token operator">-</span>right<span class="token operator">:</span> 15px<span class="token punctuation">;</span> <span class="token comment">/* 行号和内容之间的间距 */</span><span class="token punctuation">&#125;</span><span class="token comment">/* 日志内容样式 */</span><span class="token punctuation">.</span>line<span class="token operator">-</span>content <span class="token punctuation">&#123;</span>  <span class="token literal-property property">flex</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span>  white<span class="token operator">-</span>space<span class="token operator">:</span> pre<span class="token punctuation">;</span> <span class="token comment">/* 保留空格和格式 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>log<span class="token operator">-</span>container <span class="token punctuation">&#123;</span>  <span class="token literal-property property">height</span><span class="token operator">:</span> 700px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="3、DaemonSet开发"><a href="#3、DaemonSet开发" class="headerlink" title="3、DaemonSet开发"></a>3、DaemonSet开发</h5><h5 id="（1）功能-2"><a href="#（1）功能-2" class="headerlink" title="（1）功能"></a>（1）功能</h5><p>列表、详情、更新、删除</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 新的 div 容器，使用flex布局对齐内容 <span class="token operator">--</span><span class="token operator">></span>  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"deployment-header"</span> style<span class="token operator">=</span><span class="token string">"flex: 1"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"left-section"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>span<span class="token operator">></span>命名空间：<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>select v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"selectedNamespace"</span> placeholder<span class="token operator">=</span><span class="token string">"请选择"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>option            v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"namespace in namespaces"</span>            <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"namespace"</span>            <span class="token operator">:</span>label<span class="token operator">=</span><span class="token string">"namespace"</span>            <span class="token operator">:</span>value<span class="token operator">=</span><span class="token string">"namespace"</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>select<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 移动的刷新按钮，保留在右侧 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"right-group"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">"refresh"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon<span class="token operator">></span><span class="token operator">&lt;</span>Refresh <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">></span>        <span class="token operator">&lt;</span>span<span class="token operator">></span> 刷新 <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"container"</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 第一部分<span class="token operator">:</span> 头部 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"header shadow"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"left-group"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>button  type<span class="token operator">=</span><span class="token string">"primary"</span> @click<span class="token operator">=</span><span class="token string">"goToCreateDeployment()"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon<span class="token operator">></span><span class="token operator">&lt;</span>EditPen <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">></span>          <span class="token operator">&lt;</span>span style<span class="token operator">=</span><span class="token string">"vertical-align: middle"</span><span class="token operator">></span> 创建 <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>input placeholder<span class="token operator">=</span><span class="token string">"请输入内容"</span> v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"searchText"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"search-input"</span> @input<span class="token operator">=</span><span class="token string">"handleInput"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>template #append<span class="token operator">></span>            <span class="token operator">&lt;</span>el<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">"primary"</span> @click<span class="token operator">=</span><span class="token string">"search()"</span><span class="token operator">></span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon<span class="token operator">></span><span class="token operator">&lt;</span>Search <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 第二部分<span class="token operator">:</span> 表格 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"table-wrapper shadow"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>table <span class="token operator">:</span>data<span class="token operator">=</span><span class="token string">"tableData"</span> style<span class="token operator">=</span><span class="token string">"width: 100%"</span> <span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column prop<span class="token operator">=</span><span class="token string">"daemonsetName"</span> label<span class="token operator">=</span><span class="token string">"Daemonset名"</span> width<span class="token operator">=</span><span class="token string">"180px"</span> align<span class="token operator">=</span><span class="token string">"center"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>template #<span class="token keyword">default</span><span class="token operator">=</span><span class="token string">"&#123; row &#125;"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div<span class="token operator">></span>              <span class="token operator">&lt;</span>span style<span class="token operator">=</span><span class="token string">"vertical-align: middle; color: #1395FF; cursor: pointer;"</span> @click<span class="token operator">=</span><span class="token string">"handleRowClick(row)"</span><span class="token operator">></span>                <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> row<span class="token punctuation">.</span>daemonsetName <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>              <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column prop<span class="token operator">=</span><span class="token string">"Labels"</span> label<span class="token operator">=</span><span class="token string">"标签"</span> width<span class="token operator">=</span><span class="token string">"200px"</span> align<span class="token operator">=</span><span class="token string">"center"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>template #<span class="token keyword">default</span><span class="token operator">=</span><span class="token string">"&#123; row &#125;"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div<span class="token operator">></span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>tooltip                  v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"(label, index) in row.Labels"</span>                  <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"index"</span>                  <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"item"</span>                  effect<span class="token operator">=</span><span class="token string">"dark"</span>                  <span class="token operator">:</span>content<span class="token operator">=</span><span class="token string">"label"</span>                  placement<span class="token operator">=</span><span class="token string">"top"</span>              <span class="token operator">></span>                <span class="token operator">&lt;</span>el<span class="token operator">-</span>tag <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ml-2"</span> type<span class="token operator">=</span><span class="token string">"success"</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> label <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>tag<span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>tooltip<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column prop<span class="token operator">=</span><span class="token string">"Status"</span> label<span class="token operator">=</span><span class="token string">"Pod数量 (运行/期望)"</span> align<span class="token operator">=</span><span class="token string">"center"</span> width<span class="token operator">=</span><span class="token string">"200px"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>template #<span class="token keyword">default</span><span class="token operator">=</span><span class="token string">"&#123; row &#125;"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token string">"display: flex; align-items: center;justify-content: center;height: 100%"</span><span class="token operator">></span>              <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> row<span class="token punctuation">.</span>Status <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>              <span class="token operator">&lt;</span>img v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"row.showLoading"</span> src<span class="token operator">=</span><span class="token string">"@/assets/load.svg"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"loading-icon"</span> alt<span class="token operator">=</span><span class="token string">"loading"</span><span class="token operator">/</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column prop<span class="token operator">=</span><span class="token string">"createTime"</span> label<span class="token operator">=</span><span class="token string">"创建时间"</span> align<span class="token operator">=</span><span class="token string">"center"</span> width<span class="token operator">=</span><span class="token string">"155px"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>template #<span class="token keyword">default</span><span class="token operator">=</span><span class="token string">"&#123; row &#125;"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div<span class="token operator">></span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>tag <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ml-2"</span> type<span class="token operator">=</span><span class="token string">"warning"</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>row<span class="token punctuation">.</span>createTime<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>tag<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column prop<span class="token operator">=</span><span class="token string">"Images"</span> label<span class="token operator">=</span><span class="token string">"镜像"</span> align<span class="token operator">=</span><span class="token string">"center"</span> width<span class="token operator">=</span><span class="token string">"180px"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>template #<span class="token keyword">default</span><span class="token operator">=</span><span class="token string">"&#123; row &#125;"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div<span class="token operator">></span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>tooltip                  v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"(images, index) in row.Images"</span>                  <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"index"</span>                  <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"item"</span>                  effect<span class="token operator">=</span><span class="token string">"dark"</span>                  <span class="token operator">:</span>content<span class="token operator">=</span><span class="token string">"images"</span>                  placement<span class="token operator">=</span><span class="token string">"top"</span>              <span class="token operator">></span>                <span class="token operator">&lt;</span>el<span class="token operator">-</span>tag <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ml-2"</span> type<span class="token operator">=</span><span class="token string">"success"</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> images <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>tag<span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>tooltip<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column prop<span class="token operator">=</span><span class="token string">"Operation"</span> label<span class="token operator">=</span><span class="token string">"操作"</span> align<span class="token operator">=</span><span class="token string">"center"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>template #<span class="token keyword">default</span><span class="token operator">=</span><span class="token string">"&#123; row &#125;"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"button-group"</span><span class="token operator">></span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>button size<span class="token operator">=</span><span class="token string">"small"</span> color<span class="token operator">=</span><span class="token string">"#5AABFF"</span> <span class="token operator">:</span>dark<span class="token operator">=</span><span class="token string">"isDark"</span> plain @click<span class="token operator">=</span><span class="token string">"viewYAML(row)"</span><span class="token operator">></span>                <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon<span class="token operator">></span><span class="token operator">&lt;</span>EditPen <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">></span>                <span class="token operator">&lt;</span>span style<span class="token operator">=</span><span class="token string">"vertical-align: middle"</span><span class="token operator">></span> <span class="token constant">YAML</span> <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>button size<span class="token operator">=</span><span class="token string">"small"</span>  color<span class="token operator">=</span><span class="token string">"#F58D79"</span> <span class="token operator">:</span>dark<span class="token operator">=</span><span class="token string">"isDark"</span> plain @click<span class="token operator">=</span><span class="token string">"openScaleDiglog(row)"</span><span class="token operator">></span><span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>                <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon<span class="token operator">></span><span class="token operator">&lt;</span>Tickets <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">></span><span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>                <span class="token operator">&lt;</span>span style<span class="token operator">=</span><span class="token string">"vertical-align: middle"</span><span class="token operator">></span> 扩缩 <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span><span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>              <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span><span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>button size<span class="token operator">=</span><span class="token string">"small"</span>  color<span class="token operator">=</span><span class="token string">"#F58D79"</span> <span class="token operator">:</span>dark<span class="token operator">=</span><span class="token string">"isDark"</span> plain @click<span class="token operator">=</span><span class="token string">"restartDeployment(row)"</span><span class="token operator">></span><span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>                <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon<span class="token operator">></span><span class="token operator">&lt;</span>Tickets <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">></span><span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>                <span class="token operator">&lt;</span>span style<span class="token operator">=</span><span class="token string">"vertical-align: middle"</span><span class="token operator">></span> 重启 <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span><span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>              <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span><span class="token operator">--</span><span class="token operator">></span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>button size<span class="token operator">=</span><span class="token string">"small"</span>  color<span class="token operator">=</span><span class="token string">"#F58D79"</span> <span class="token operator">:</span>dark<span class="token operator">=</span><span class="token string">"isDark"</span> plain @click<span class="token operator">=</span><span class="token string">"confirmDelete(row)"</span><span class="token operator">></span>                <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon<span class="token operator">></span><span class="token operator">&lt;</span>Tickets <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">></span>                <span class="token operator">&lt;</span>span style<span class="token operator">=</span><span class="token string">"vertical-align: middle"</span><span class="token operator">></span> 删除 <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>pagination          v<span class="token operator">-</span>model<span class="token operator">:</span>current<span class="token operator">-</span>page<span class="token operator">=</span><span class="token string">"currentPage"</span>          v<span class="token operator">-</span>model<span class="token operator">:</span>page<span class="token operator">-</span>size<span class="token operator">=</span><span class="token string">"pageSize"</span>          <span class="token operator">:</span>page<span class="token operator">-</span>sizes<span class="token operator">=</span><span class="token string">"[5, 10, 20, 30]"</span>          <span class="token operator">:</span>small<span class="token operator">=</span><span class="token string">"small"</span>          <span class="token operator">:</span>disabled<span class="token operator">=</span><span class="token string">"disabled"</span>          <span class="token operator">:</span>background<span class="token operator">=</span><span class="token string">"background"</span>          layout<span class="token operator">=</span><span class="token string">"total, sizes, prev, pager, next, jumper"</span>          <span class="token operator">:</span>total<span class="token operator">=</span>deploymentCount          <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"paginations"</span>          @size<span class="token operator">-</span>change<span class="token operator">=</span><span class="token string">"handleSizeChange"</span>          @current<span class="token operator">-</span>change<span class="token operator">=</span><span class="token string">"handleCurrentChange"</span>      <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>el<span class="token operator">-</span>dialog title<span class="token operator">=</span><span class="token string">"YAML信息"</span> v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"dialogVisible"</span> width<span class="token operator">=</span><span class="token string">"45%"</span> top<span class="token operator">=</span><span class="token string">"5%"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>codemirror          v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"yamlContent"</span>          placeholder<span class="token operator">=</span><span class="token string">"请输入代码..."</span>          <span class="token operator">:</span>style<span class="token operator">=</span><span class="token string">"&#123; height: '100%' &#125;"</span>          v<span class="token operator">-</span>bind<span class="token operator">=</span><span class="token string">"cmOptions"</span>          <span class="token operator">:</span>extensions<span class="token operator">=</span><span class="token string">"extensions"</span>      <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span>template #footer<span class="token operator">></span>                <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"dialog-footer"</span><span class="token operator">></span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">"dialogVisible = false"</span><span class="token operator">></span>取 消<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>button  type<span class="token operator">=</span><span class="token string">"primary"</span> @click<span class="token operator">=</span><span class="token string">"updateDeploy()"</span><span class="token operator">></span>更 新<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>dialog<span class="token operator">></span>    <span class="token operator">&lt;</span>el<span class="token operator">-</span>dialog title<span class="token operator">=</span><span class="token string">"创建Daemonset"</span> v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"createDialogVisible"</span> width<span class="token operator">=</span><span class="token string">"60%"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>form ref<span class="token operator">=</span><span class="token string">"form"</span> <span class="token operator">:</span>model<span class="token operator">=</span><span class="token string">"createForm"</span> label<span class="token operator">-</span>position<span class="token operator">=</span><span class="token string">"left"</span> label<span class="token operator">-</span>width<span class="token operator">=</span><span class="token string">"180px"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-with-help"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"daemonset名："</span> prop<span class="token operator">=</span><span class="token string">"name"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-item-with-help"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-deployname"</span><span class="token operator">></span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"createForm.daemonsetName"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入daemonset名"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>              <span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"help-text"</span><span class="token operator">></span>                <span class="token function">最长63个字符，只能包含小写字母、数字及分隔符</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span>，且必须以小写字母开头，数字或小写字母结尾              <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"描述："</span> prop<span class="token operator">=</span><span class="token string">"description"</span> style<span class="token operator">=</span><span class="token string">"margin: 10px;margin-left: 20px"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>el<span class="token operator">-</span>input              type<span class="token operator">=</span><span class="token string">"textarea"</span>              v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"createForm.description"</span>              placeholder<span class="token operator">=</span><span class="token string">"请输入描述信息"</span>              <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"custom-textarea"</span>          <span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"标签："</span> prop<span class="token operator">=</span><span class="token string">"labels"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-item-with-help"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"(item, index) in formItems"</span> <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"item.id"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-item"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>el<span class="token operator">-</span>input                placeholder<span class="token operator">=</span><span class="token string">"Key"</span>                v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.key"</span>                <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-item"</span>                <span class="token operator">:</span>disabled<span class="token operator">=</span><span class="token string">"!item.editable"</span>            <span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>            <span class="token operator">&lt;</span>span<span class="token operator">></span> <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>            <span class="token operator">&lt;</span>el<span class="token operator">-</span>input                placeholder<span class="token operator">=</span><span class="token string">"Value"</span>                v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.value"</span>                <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-item"</span>            <span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>            <span class="token operator">&lt;</span>el<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">"removeFormItem(index)"</span> <span class="token operator">:</span>disabled<span class="token operator">=</span><span class="token string">"!item.editable"</span><span class="token operator">></span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon<span class="token operator">></span><span class="token operator">&lt;</span>CircleClose <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 将添加新行的按钮移动到循环外部 <span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>        <span class="token operator">&lt;</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span>el<span class="token operator">-</span>button              type<span class="token operator">=</span><span class="token string">"primary"</span>              @click<span class="token operator">=</span><span class="token string">"() => addFormItem(item)"</span>              <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"add-button"</span>          <span class="token operator">></span>            添加新标签          <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"命名空间："</span> prop<span class="token operator">=</span><span class="token string">"namespace"</span> style<span class="token operator">=</span><span class="token string">"margin: 10px"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>el<span class="token operator">-</span>select v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"createForm.namespace"</span> placeholder<span class="token operator">=</span><span class="token string">"请选择"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>el<span class="token operator">-</span>option                v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"namespace in namespaces"</span>                <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"namespace"</span>                <span class="token operator">:</span>label<span class="token operator">=</span><span class="token string">"namespace"</span>                <span class="token operator">:</span>value<span class="token operator">=</span><span class="token string">"namespace"</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>select<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"custom-form-item"</span> label<span class="token operator">=</span><span class="token string">"实例内容器："</span> style<span class="token operator">=</span><span class="token string">"margin: 10px"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"container"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"(item, index) in instanceItems"</span> <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"item.id"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"item-container"</span><span class="token operator">></span>              <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"content-container"</span> <span class="token operator">:</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"&#123; 'collapsed': item.collapsed &#125;"</span><span class="token operator">></span>                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"info"</span> v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"item.collapsed"</span><span class="token operator">></span>                  <span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> item<span class="token punctuation">.</span>name <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">/</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 显示名称 <span class="token operator">--</span><span class="token operator">></span>                  <span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> item<span class="token punctuation">.</span>image <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> item<span class="token punctuation">.</span>image_tag <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 显示镜像 <span class="token operator">--</span><span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"actions"</span> v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"item.collapsed"</span><span class="token operator">></span>                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">"expandInstanceItem(index)"</span><span class="token operator">></span>编辑<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">"removeInstanceItem(index)"</span> <span class="token operator">:</span>disabled<span class="token operator">=</span><span class="token string">"instanceItems.length === 1"</span><span class="token operator">></span>删除<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"info"</span> v<span class="token operator">-</span><span class="token keyword">else</span><span class="token operator">></span>                  <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>                  <span class="token operator">&lt;</span>span <span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> item<span class="token punctuation">.</span>name <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span><span class="token operator">--</span><span class="token operator">></span>                  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-with-help"</span> v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"!item.collapsed"</span><span class="token operator">></span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"名称："</span> prop<span class="token operator">=</span><span class="token string">"name"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-item-with-help"</span><span class="token operator">></span>                      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-containername"</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.name"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入容器名"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                        <span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"help-text"</span><span class="token operator">></span>                          <span class="token function">最长63个字符，只能包含小写字母、数字及分隔符</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span>，且不能以分隔符开头或结尾                        <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"镜像："</span> prop<span class="token operator">=</span><span class="token string">"image"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-item-with-help"</span><span class="token operator">></span>                      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-containername"</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.image"</span> placeholder<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"镜像版本："</span> prop<span class="token operator">=</span><span class="token string">"image_tag"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-item-with-resource"</span><span class="token operator">></span>                      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-containername"</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.image_tag"</span> placeholder<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"CPU/内存限制："</span> prop<span class="token operator">=</span><span class="token string">"form-item-with-help"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-item-resource"</span><span class="token operator">></span>                      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-container-cpu"</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"cpu-label"</span><span class="token operator">></span><span class="token constant">CPU</span>：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-row"</span><span class="token operator">></span>                          <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.cpu_request"</span> <span class="token operator">></span>                            <span class="token operator">&lt;</span>template #prepend<span class="token operator">></span>request<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>                          <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                          <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.cpu_limit"</span> <span class="token operator">></span>                            <span class="token operator">&lt;</span>template #prepend<span class="token operator">></span>limit<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>                          <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                          <span class="token operator">&lt;</span>label <span class="token operator">></span>m<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-container-memory"</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"cpu-label"</span><span class="token operator">></span>内存：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-row"</span><span class="token operator">></span>                          <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.memory_request"</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>template #prepend<span class="token operator">></span>request<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>                          <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                          <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.memory_limit"</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>template #prepend<span class="token operator">></span>limit<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>                          <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                          <span class="token operator">&lt;</span>label <span class="token operator">></span>MiB<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"工作目录："</span> prop<span class="token operator">=</span><span class="token string">"workspace"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-item-with-help"</span><span class="token operator">></span>                      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-containername"</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.workspace"</span> placeholder<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                        <span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"help-text"</span><span class="token operator">></span>                          指定容器运行后的工作目录                        <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"运行命令："</span> prop<span class="token operator">=</span><span class="token string">"cmd"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-item-with-help"</span><span class="token operator">></span>                      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-containername"</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.cmd"</span> placeholder<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                        <span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"help-text"</span><span class="token operator">></span>                          控制容器运行的输入命令                        <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"运行参数："</span> prop<span class="token operator">=</span><span class="token string">"args"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-item-with-help"</span><span class="token operator">></span>                      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-containername"</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.args"</span> placeholder<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                        <span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"help-text"</span><span class="token operator">></span>                          传递给容器运行命令的输入参数                        <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token constant">HTML</span> <span class="token operator">--</span><span class="token operator">></span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"容器健康检查"</span> prop<span class="token operator">=</span><span class="token string">"health"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-item-with-help"</span><span class="token operator">></span>                      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-healthContainer"</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>el<span class="token operator">-</span>checkbox v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.isLivenessCheckActive"</span><span class="token operator">></span>存活检查<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>checkbox<span class="token operator">></span>                        <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"item.isLivenessCheckActive"</span><span class="token operator">></span>                          <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"livenessdiv"</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"method-label"</span><span class="token operator">></span>检查方法：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                              <span class="token operator">&lt;</span>el<span class="token operator">-</span>select v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.livenessselectedCheckMethod"</span> placeholder<span class="token operator">=</span><span class="token string">"请选择"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>option label<span class="token operator">=</span><span class="token string">"HTTP"</span> value<span class="token operator">=</span><span class="token string">"http"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>option label<span class="token operator">=</span><span class="token string">"TCP"</span> value<span class="token operator">=</span><span class="token string">"tcp"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>option label<span class="token operator">=</span><span class="token string">"Exec"</span> value<span class="token operator">=</span><span class="token string">"exec"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>select<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token constant">HTTP</span>选项时显示 <span class="token operator">--</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"item.livenessselectedCheckMethod === 'http'"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"method-label"</span><span class="token operator">></span>检查协议：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>select v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.lives_selectedProtocol"</span> placeholder<span class="token operator">=</span><span class="token string">"请选择"</span><span class="token operator">></span>                                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>option label<span class="token operator">=</span><span class="token string">"HTTP"</span> value<span class="token operator">=</span><span class="token string">"http"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>                                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>option label<span class="token operator">=</span><span class="token string">"HTTPS"</span> value<span class="token operator">=</span><span class="token string">"https"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>                                <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>select<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                              <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>检查端口：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.lives_healthCheckPort"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入端口"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                                <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>端口范围<span class="token operator">:</span> <span class="token number">1</span><span class="token operator">~</span><span class="token number">65535</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                              <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>请求路径：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.lives_healthCheckPath"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入路径"</span> style<span class="token operator">=</span><span class="token string">"width: 200px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token constant">TCP</span>选项时显示 <span class="token operator">--</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">else</span><span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"item.livenessselectedCheckMethod === 'tcp'"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>检查端口：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.lives_healthCheckPort"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入端口"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                                <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>端口范围<span class="token operator">:</span> <span class="token number">1</span><span class="token operator">~</span><span class="token number">65535</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> Exec选项时显示 <span class="token operator">--</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">else</span><span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"item.livenessselectedCheckMethod === 'exec'"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"execution-command-container"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>执行命令：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.livenessCommand"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入命令"</span> style<span class="token operator">=</span><span class="token string">"width: 200px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 启动延时始终显示 <span class="token operator">--</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>启动延时：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                              <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.livenessStartDelay"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                              <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>范围：<span class="token number">0</span><span class="token operator">~</span><span class="token number">60</span>秒<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 响应超时始终显示 <span class="token operator">--</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>响应延时：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                              <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.livenessResDelay"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                              <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>范围：<span class="token number">2</span><span class="token operator">~</span><span class="token number">60</span>秒<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 间隔时间始终显示 <span class="token operator">--</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>间隔时间：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                              <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.livenessIntervalTime"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                              <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>范围：<span class="token number">2</span><span class="token operator">~</span><span class="token number">300</span>秒<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 健康阈值始终显示 <span class="token operator">--</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>健康阈值：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                              <span class="token operator">&lt;</span>el<span class="token operator">-</span>input disabled v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.livenessHealththreshold"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                              <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>范围：<span class="token number">1</span>次<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 不健康阈值始终显示 <span class="token operator">--</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>不健康阈值：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                              <span class="token operator">&lt;</span>el<span class="token operator">-</span>input  v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.livenessUnHealththreshold"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                              <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>范围：<span class="token number">1</span><span class="token operator">~</span><span class="token number">10</span>次<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                          <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 就绪性检查 <span class="token operator">--</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>div<span class="token operator">></span>                          <span class="token operator">&lt;</span>el<span class="token operator">-</span>checkbox v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.isReadinessCheckActive"</span><span class="token operator">></span>就绪检查<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>checkbox<span class="token operator">></span>                          <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"item.isReadinessCheckActive"</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"livenessdiv"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"method-label"</span><span class="token operator">></span>检查方法：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>select v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.ReadinessSelectedCheckMethod"</span> placeholder<span class="token operator">=</span><span class="token string">"请选择"</span><span class="token operator">></span>                                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>option label<span class="token operator">=</span><span class="token string">"HTTP"</span> value<span class="token operator">=</span><span class="token string">"http"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>                                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>option label<span class="token operator">=</span><span class="token string">"TCP"</span> value<span class="token operator">=</span><span class="token string">"tcp"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>                                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>option label<span class="token operator">=</span><span class="token string">"Exec"</span> value<span class="token operator">=</span><span class="token string">"exec"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>                                <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>select<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token constant">HTTP</span>选项时显示 <span class="token operator">--</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"item.ReadinessSelectedCheckMethod === 'http'"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                                  <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"method-label"</span><span class="token operator">></span>检查协议：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>select v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.readnessSelectedProtocol"</span> placeholder<span class="token operator">=</span><span class="token string">"请选择"</span><span class="token operator">></span>                                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>option label<span class="token operator">=</span><span class="token string">"HTTP"</span> value<span class="token operator">=</span><span class="token string">"http"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>                                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>option label<span class="token operator">=</span><span class="token string">"HTTPS"</span> value<span class="token operator">=</span><span class="token string">"https"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>                                  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>select<span class="token operator">></span>                                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                                  <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>检查端口：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.readnessHealthCheckPort"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入端口"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                                  <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>端口范围<span class="token operator">:</span> <span class="token number">1</span><span class="token operator">~</span><span class="token number">65535</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                                  <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>请求路径：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.readnessHealthCheckPath"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入路径"</span> style<span class="token operator">=</span><span class="token string">"width: 200px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token constant">TCP</span>选项时显示 <span class="token operator">--</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">else</span><span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"item.ReadinessSelectedCheckMethod === 'tcp'"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                                  <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>检查端口：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.readnessHealthCheckPort"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入端口"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                                  <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>端口范围<span class="token operator">:</span> <span class="token number">1</span><span class="token operator">~</span><span class="token number">65535</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> Exec选项时显示 <span class="token operator">--</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">else</span><span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"item.ReadinessSelectedCheckMethod === 'exec'"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"execution-command-container"</span><span class="token operator">></span>                                  <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>执行命令：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.readnessCommand"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入命令"</span> style<span class="token operator">=</span><span class="token string">"width: 200px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 启动延时始终显示 <span class="token operator">--</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>启动延时：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.readnessStartDelay"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                                <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>范围：<span class="token number">0</span><span class="token operator">~</span><span class="token number">60</span>秒<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 响应超时始终显示 <span class="token operator">--</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>响应延时：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.readnessResDelay"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                                <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>范围：<span class="token number">2</span><span class="token operator">~</span><span class="token number">60</span>秒<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 间隔时间始终显示 <span class="token operator">--</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>间隔时间：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.readnessIntervalTime"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                                <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>范围：<span class="token number">2</span><span class="token operator">~</span><span class="token number">300</span>秒<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 健康阈值始终显示 <span class="token operator">--</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>健康阈值：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>input  v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.readnessHealththreshold"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                                <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>范围：<span class="token number">1</span><span class="token operator">~</span><span class="token number">10</span>次<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 不健康阈值始终显示 <span class="token operator">--</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>不健康阈值：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>input  v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.readnessUnHealththreshold"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                                <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>范围：<span class="token number">1</span><span class="token operator">~</span><span class="token number">10</span>次<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                          <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"副本数："</span> prop<span class="token operator">=</span><span class="token string">"replica"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-item-with-help"</span><span class="token operator">></span>                      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-containername"</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>el<span class="token operator">-</span>input<span class="token operator">-</span>number v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"createForm.replicas"</span> <span class="token operator">:</span>min<span class="token operator">=</span><span class="token string">"1"</span>  @change<span class="token operator">=</span><span class="token string">"changeReplicas"</span> <span class="token operator">/</span><span class="token operator">></span>                      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>                  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"actions"</span> v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"!item.collapsed"</span><span class="token operator">></span>                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>button v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"item.editMode"</span> @click<span class="token operator">=</span><span class="token string">"saveInstanceItem(index)"</span><span class="token operator">></span>保存<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">"removeInstanceItem(index)"</span> <span class="token operator">:</span>disabled<span class="token operator">=</span><span class="token string">"instanceItems.length === 1"</span><span class="token operator">></span>删除<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">"primary"</span> @click<span class="token operator">=</span><span class="token string">"addInstanceItem"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"add-button"</span><span class="token operator">></span>          添加新实例        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">></span>      <span class="token operator">&lt;</span>span slot<span class="token operator">=</span><span class="token string">"footer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"dialog-footer"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>el<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">"createDialogVisible = false"</span><span class="token operator">></span>取消<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span>el<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">"primary"</span> @click<span class="token operator">=</span><span class="token string">"createDeployment"</span><span class="token operator">></span>创建<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>dialog<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 对话框 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>el<span class="token operator">-</span>dialog        title<span class="token operator">=</span><span class="token string">"副本数调整"</span>        v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"scaleDialogVisible"</span>        width<span class="token operator">=</span><span class="token string">"30%"</span>    <span class="token operator">></span>      <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token string">"text-align: center; padding: 20px;"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>label<span class="token operator">></span>实例数：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>input<span class="token operator">-</span>number v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"replicaCount"</span> <span class="token operator">:</span>min<span class="token operator">=</span><span class="token string">"1"</span> label<span class="token operator">=</span><span class="token string">"副本数:"</span> <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span>span slot<span class="token operator">=</span><span class="token string">"footer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"dialog-footer"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">"scaleDialogVisible = false"</span><span class="token operator">></span>取消<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">"primary"</span> @click<span class="token operator">=</span><span class="token string">"updateReplicas"</span><span class="token operator">></span>更新<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>dialog<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script setup<span class="token operator">></span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>nextTick<span class="token punctuation">,</span> onBeforeMount<span class="token punctuation">,</span> onBeforeUnmount<span class="token punctuation">,</span> reactive<span class="token punctuation">,</span> ref<span class="token punctuation">,</span> watch<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Loading <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@element-plus/icons-vue'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'element-plus/dist/index.css'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Refresh<span class="token punctuation">,</span> EditPen<span class="token punctuation">,</span> Search <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@element-plus/icons-vue'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>  onMounted <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> useRouter <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue-router'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ArrowLeft <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@element-plus/icons-vue'</span><span class="token punctuation">;</span><span class="token comment">// 在模板中可以直接使用 Refresh, EditPen, 和 Search</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>  <span class="token constant">CREATE_DAEMONSET</span><span class="token punctuation">,</span>  <span class="token constant">CREATE_DEPLOYMENT</span><span class="token punctuation">,</span>  <span class="token constant">CREATE_NAMESPACE</span><span class="token punctuation">,</span> <span class="token constant">DAEMONSET_DETAIL</span><span class="token punctuation">,</span> <span class="token constant">DAEMONSET_LIST</span><span class="token punctuation">,</span> <span class="token constant">DELETE_DAEMONSET</span><span class="token punctuation">,</span> <span class="token constant">DELETE_DEPLOYMENT</span><span class="token punctuation">,</span>  <span class="token constant">DELETE_NAMESPACE</span><span class="token punctuation">,</span> <span class="token constant">DEPLOYMENT_DETAIL</span><span class="token punctuation">,</span> <span class="token constant">DEPLOYMENT_LIST</span><span class="token punctuation">,</span>  <span class="token constant">NAMESPACE_DETAIL</span><span class="token punctuation">,</span>  <span class="token constant">NAMESPACE_LIST</span><span class="token punctuation">,</span> <span class="token constant">RESTART_DEPLOYMENT</span><span class="token punctuation">,</span> <span class="token constant">UPDATE_DAEMONSET</span><span class="token punctuation">,</span> <span class="token constant">UPDATE_DEPLOYMENT</span><span class="token punctuation">,</span> <span class="token constant">UPDATE_DEPLOYMENTSCALE</span><span class="token punctuation">,</span>  <span class="token constant">UPDATE_NAMESPACE</span><span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"../../../api/k8s.js"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Codemirror <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue-codemirror'</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> javascript<span class="token punctuation">&#125;</span> <span class="token keyword">from</span>  <span class="token string">'@codemirror/lang-javascript'</span><span class="token comment">// import &#123; javascript &#125; from 'codemirror/lang-javascript'</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> oneDark <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@codemirror/theme-one-dark'</span><span class="token keyword">import</span> _ <span class="token keyword">from</span> <span class="token string">'lodash'</span><span class="token punctuation">;</span><span class="token keyword">import</span> json2yaml <span class="token keyword">from</span> <span class="token string">'json2yaml'</span><span class="token keyword">import</span> yaml2obj <span class="token keyword">from</span> <span class="token string">'js-yaml'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>ElMessage<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"element-plus"</span><span class="token punctuation">;</span><span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">"@/router/index.js"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ElMessageBox <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'element-plus'</span><span class="token punctuation">;</span><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">"axios"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>value<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"lodash/seq.js"</span><span class="token punctuation">;</span><span class="token keyword">const</span> extensions <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">javascript</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>oneDark<span class="token punctuation">]</span><span class="token keyword">const</span> dialogSelectedNamespace <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 对话框的v-model</span><span class="token keyword">const</span> scaleDialogVisible<span class="token operator">=</span>  <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token keyword">const</span> replicaCount <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">const</span> currentRow <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token function-variable function">openScaleDiglog</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">row</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>  replicaCount<span class="token punctuation">.</span>value <span class="token operator">=</span> row<span class="token punctuation">.</span>Replicas  currentRow<span class="token punctuation">.</span>value <span class="token operator">=</span> row  scaleDialogVisible<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token comment">// 从localStorage加载保存的命名空间</span><span class="token keyword">const</span> <span class="token function-variable function">loadSelection</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  selectedNamespace<span class="token punctuation">.</span>value <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'selectedNamespace'</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">''</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// 保存当前选中的命名空间到localStorage</span><span class="token keyword">const</span> <span class="token function-variable function">saveSelection</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">'selectedNamespace'</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">updateReplicas</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> updateScale <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span>      <span class="token punctuation">&#123;</span>        <span class="token literal-property property">namespace</span><span class="token operator">:</span> selectedNamespace<span class="token punctuation">,</span>        <span class="token literal-property property">deploymentName</span><span class="token operator">:</span> currentRow<span class="token punctuation">.</span>value<span class="token punctuation">.</span>deploymentName<span class="token punctuation">,</span>        <span class="token literal-property property">scaleNum</span><span class="token operator">:</span> replicaCount<span class="token punctuation">.</span>value      <span class="token punctuation">&#125;</span>  <span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"更新副本数至:"</span><span class="token punctuation">,</span> replicaCount<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">UPDATE_DEPLOYMENTSCALE</span><span class="token punctuation">(</span>updateScale<span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>resp<span class="token punctuation">)</span>    <span class="token function">getDaemonsetData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 出错时返回空数组</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 在这里编写更新逻辑</span>  scaleDialogVisible<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// 关闭对话框</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">handleRowClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">row</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Pod'</span><span class="token punctuation">,</span>    <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'daemonset'</span><span class="token punctuation">,</span><span class="token literal-property property">deploymentName</span><span class="token operator">:</span> row<span class="token punctuation">.</span>daemonsetName <span class="token punctuation">,</span><span class="token literal-property property">namespace</span><span class="token operator">:</span> selectedNamespace<span class="token punctuation">.</span>value<span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> createDialogVisible <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> createForm <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">daemonsetName</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>  <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>  <span class="token literal-property property">labels</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'apps'</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">''</span> <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token literal-property property">namespace</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>  <span class="token literal-property property">replicas</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> rules <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span> <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'请输入deployment名'</span><span class="token punctuation">,</span> <span class="token literal-property property">trigger</span><span class="token operator">:</span> <span class="token string">'blur'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 此处添加其他验证规则</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span> <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'请输入描述'</span><span class="token punctuation">,</span> <span class="token literal-property property">trigger</span><span class="token operator">:</span> <span class="token string">'blur'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 此处添加其他验证规则</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token literal-property property">namespace</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span> <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'请选择命名空间'</span><span class="token punctuation">,</span> <span class="token literal-property property">trigger</span><span class="token operator">:</span> <span class="token string">'change'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> formItems <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span>  <span class="token punctuation">&#123;</span> <span class="token literal-property property">id</span><span class="token operator">:</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'apps'</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">''</span> <span class="token punctuation">&#125;</span> <span class="token comment">// 初始标签项，第一项是不可删除的</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">addFormItem</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> newItem <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">id</span><span class="token operator">:</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token literal-property property">editable</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  formItems<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>newItem<span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>formItems<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">changeReplicas</span> <span class="token operator">=</span>  <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">removeFormItem</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> reversedIndex <span class="token operator">=</span> formItems<span class="token punctuation">.</span>value<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> index<span class="token punctuation">;</span> <span class="token comment">// 反转后的索引</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"reverse = "</span><span class="token punctuation">,</span>reversedIndex<span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>formItems<span class="token punctuation">.</span>value<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"no "</span><span class="token punctuation">,</span>index<span class="token punctuation">)</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>reversedIndex <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 确保不删除第一行标签项</span>    formItems<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>formItems<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> instanceItems <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">addInstanceItem</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 折叠所有现有的实例内容器</span>  instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    item<span class="token punctuation">.</span>collapsed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> id <span class="token operator">=</span> <span class="token function">generateUniqueId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> newItem <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">id</span><span class="token operator">:</span> id<span class="token punctuation">,</span>    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">image</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">image_tag</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">livenessCommand</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">dialogSelectedNamespace</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">livenessStartDelay</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 存活检查响应延时时间</span>    <span class="token literal-property property">livenessResDelay</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 存活检查间隔时间</span>    <span class="token literal-property property">livenessIntervalTime</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 存活检查健康阈值</span>    <span class="token literal-property property">livenessHealththreshold</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 存活检查不健康阈值</span>    <span class="token literal-property property">livenessUnHealththreshold</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">livenessselectedCheckMethod</span><span class="token operator">:</span><span class="token string">'http'</span><span class="token punctuation">,</span>    <span class="token literal-property property">lives_selectedProtocol</span><span class="token operator">:</span><span class="token string">'HTTP'</span><span class="token punctuation">,</span>    <span class="token comment">// 就绪检查的检查方法</span>    <span class="token literal-property property">ReadinessSelectedCheckMethod</span><span class="token operator">:</span><span class="token string">'http'</span><span class="token punctuation">,</span>    <span class="token comment">// 是否开启就绪检查</span>    <span class="token literal-property property">isReadinessCheckActive</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 是否开启存活检查</span>    <span class="token literal-property property">isLivenessCheckActive</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 就绪检查 检查的协议</span>    <span class="token literal-property property">readnessSelectedProtocol</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 就绪检查 检查的端口号</span>    <span class="token literal-property property">readnessHealthCheckPort</span><span class="token operator">:</span><span class="token string">'80'</span><span class="token punctuation">,</span>    <span class="token comment">// 就绪检查的路径</span>    <span class="token literal-property property">readnessHealthCheckPath</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 就绪检查TCP方式的端口号</span>    <span class="token literal-property property">readnessTcpCheckPort</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 就绪检查执行的命令</span>    <span class="token literal-property property">readnessCommand</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 就绪检查启动延时时间</span>    <span class="token literal-property property">readnessStartDelay</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 就绪检查响应时间</span>    <span class="token literal-property property">readnessResDelay</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 就绪检查间隔时间</span>    <span class="token literal-property property">readnessIntervalTime</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 就绪检查健康阈值</span>    <span class="token literal-property property">readnessHealththreshold</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 就绪检查不健康阈值</span>    <span class="token literal-property property">readnessUnHealththreshold</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">replicas</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">lives_tcpCheckPort</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">lives_healthCheckPath</span><span class="token operator">:</span><span class="token string">'/'</span><span class="token punctuation">,</span>    <span class="token literal-property property">lives_healthCheckPort</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">workspace</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">args</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">cmd</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">cpu_request</span><span class="token operator">:</span><span class="token string">'250'</span><span class="token punctuation">,</span>    <span class="token literal-property property">cpu_limit</span><span class="token operator">:</span><span class="token string">'500'</span><span class="token punctuation">,</span>    <span class="token literal-property property">memory_request</span><span class="token operator">:</span><span class="token string">'256'</span><span class="token punctuation">,</span>    <span class="token literal-property property">memory_limit</span><span class="token operator">:</span><span class="token string">'1024'</span><span class="token punctuation">,</span>    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">collapsed</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token literal-property property">editMode</span><span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>newItem<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// 函数用来把健康检查类型转换为相应的数字</span><span class="token keyword">const</span> <span class="token function-variable function">mapHealthCheckType</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">type</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span><span class="token string">"aaaaaaaaaaaaaaaaaaaaaaaaaaaa"</span><span class="token punctuation">)</span>  <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">case</span> <span class="token string">'http'</span><span class="token operator">:</span>      <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> <span class="token string">'tcp'</span><span class="token operator">:</span>      <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> <span class="token string">'exec'</span><span class="token operator">:</span>      <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token keyword">default</span><span class="token operator">:</span>      <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 或者任何合适的默认值</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">createDeployment</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> labels <span class="token operator">=</span> formItems<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>key <span class="token operator">&amp;&amp;</span> item<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      acc<span class="token punctuation">[</span>item<span class="token punctuation">.</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> item<span class="token punctuation">.</span>value<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> acc<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Instance Items before sending to backend:"</span><span class="token punctuation">,</span> instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>  instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Readiness Port for item:"</span><span class="token punctuation">,</span> item<span class="token punctuation">.</span>readnessHealthCheckPort<span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Parsed Port:"</span><span class="token punctuation">,</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>readnessHealthCheckPort<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 确认 parseInt 不是返回 NaN</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>readnessHealthCheckPort<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"Invalid port number: "</span><span class="token punctuation">,</span> item<span class="token punctuation">.</span>readnessHealthCheckPort<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"label = ================="</span><span class="token punctuation">,</span>labels<span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>createForm<span class="token punctuation">.</span>value<span class="token punctuation">.</span>replicas<span class="token punctuation">)</span>  <span class="token keyword">const</span> createParameters <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token string-property property">"namespace"</span><span class="token operator">:</span> createForm<span class="token punctuation">.</span>value<span class="token punctuation">.</span>namespace<span class="token punctuation">,</span>    <span class="token string-property property">"daemonsetName"</span><span class="token operator">:</span> createForm<span class="token punctuation">.</span>value<span class="token punctuation">.</span>daemonsetName<span class="token punctuation">,</span>    <span class="token string-property property">"podName"</span><span class="token operator">:</span> createForm<span class="token punctuation">.</span>value<span class="token punctuation">.</span>daemonsetName<span class="token punctuation">,</span>    <span class="token string-property property">"label"</span><span class="token operator">:</span> labels<span class="token punctuation">,</span>    <span class="token string-property property">"replicas"</span><span class="token operator">:</span> createForm<span class="token punctuation">.</span>value<span class="token punctuation">.</span>replicas<span class="token punctuation">,</span>    <span class="token string-property property">"containers"</span><span class="token operator">:</span> instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// 如果是空字符串则设置为 false</span>      <span class="token string-property property">"name"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>name<span class="token punctuation">,</span>      <span class="token string-property property">"image"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>image<span class="token punctuation">,</span>      <span class="token string-property property">"version"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>image_tag<span class="token punctuation">,</span>      <span class="token comment">// "ports": item.ports, // 确保这个字段是一个 int32 数组</span>      <span class="token string-property property">"limits_cpu"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>cpu_limit<span class="token punctuation">,</span>      <span class="token string-property property">"limit_memory"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>memory_limit<span class="token punctuation">,</span>      <span class="token string-property property">"requests_cpu"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>cpu_request<span class="token punctuation">,</span>      <span class="token string-property property">"requests_memory"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>memory_request<span class="token punctuation">,</span>      <span class="token string-property property">"work_space"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>workspace<span class="token punctuation">,</span>      <span class="token string-property property">"command"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>cmd<span class="token punctuation">,</span>      <span class="token string-property property">"args"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>args<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 前提是 args 是以空格分隔的字符串</span>      <span class="token string-property property">"readiness_healthCheck"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>isReadinessCheckActive <span class="token operator">||</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      <span class="token string-property property">"liveness_healthCheck"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>isLivenessCheckActive <span class="token operator">||</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      <span class="token string-property property">"healthcheckTypeLive"</span><span class="token operator">:</span> <span class="token function">mapHealthCheckType</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>livenessselectedCheckMethod<span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token string-property property">"healthcheckTypeRead"</span><span class="token operator">:</span> <span class="token function">mapHealthCheckType</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>ReadinessSelectedCheckMethod<span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token string-property property">"resource"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token string-property property">"livenessProbe"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token string-property property">"path"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>lives_healthCheckPath<span class="token punctuation">,</span>        <span class="token string-property property">"port"</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>lives_healthCheckPort<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string-property property">"cmd"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>livenessCommand<span class="token punctuation">,</span>        <span class="token string-property property">"initialDelaySecond"</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>livenessStartDelay<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string-property property">"timeoutSeconds"</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>livenessResDelay<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string-property property">"periodSeconds"</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>livenessIntervalTime<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string-property property">"successThreshold"</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>livenessHealththreshold<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string-property property">"failureThreshold"</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>livenessUnHealththreshold<span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token string-property property">"readinessProbe"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token string-property property">"path"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>readnessHealthCheckPath<span class="token punctuation">,</span>        <span class="token string-property property">"port"</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>readnessHealthCheckPort<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string-property property">"cmd"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>readnessCommand<span class="token punctuation">,</span>        <span class="token string-property property">"initialDelaySecond"</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>readnessStartDelay<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string-property property">"timeoutSeconds"</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>readnessResDelay<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string-property property">"periodSeconds"</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>readnessIntervalTime<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string-property property">"successThreshold"</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>readnessHealththreshold<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string-property property">"failureThreshold"</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>readnessUnHealththreshold<span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>createParameters<span class="token punctuation">.</span>value<span class="token punctuation">)</span>  <span class="token comment">// 发送 createParameters.value 到后端...</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> resps <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">CREATE_DAEMONSET</span><span class="token punctuation">(</span>createParameters<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>resps<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>resps<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      createDialogVisible<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span>      ElMessage<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">"创建成功"</span><span class="token punctuation">)</span>      <span class="token function">getDaemonsetData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      ElMessage<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>resps<span class="token punctuation">.</span>data<span class="token punctuation">.</span>message<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 出错时返回空数组</span>  <span class="token punctuation">&#125;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>createForm<span class="token punctuation">.</span>value<span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"标签："</span><span class="token punctuation">,</span>formItems<span class="token punctuation">.</span>value<span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"~~~~~~~~~~~~~~~~"</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 调用 goToCreateDeployment 函数以响应对话框的打开</span><span class="token function">watch</span><span class="token punctuation">(</span>createDialogVisible<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">newVal</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>newVal<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">goToCreateDeployment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">generateUniqueId</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 生成唯一标识符的逻辑</span>  <span class="token keyword">const</span> timestamp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> randomSuffix <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>timestamp<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>randomSuffix<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">expandInstanceItem</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>editMode <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>collapsed <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">saveInstanceItem</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>editMode <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>collapsed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">removeInstanceItem</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">onSubmit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> formEl <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  formEl<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">valid</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>valid<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 提交表单</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'表单验证失败'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> newNamespace <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>  <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> currentPage <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">let</span> pageSize <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token keyword">const</span> small <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token keyword">const</span> background <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token keyword">const</span> disabled <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token keyword">const</span> dialogVisible <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> currentDeployName <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> yamlContent <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 新增命名空间列表和选中的命名空间</span><span class="token keyword">const</span> namespaces <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 用于存储命名空间列表</span><span class="token keyword">const</span> selectedNamespace <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'selectedNamespace'</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 用于存储用户选择的命名空间</span><span class="token comment">// 方法来获取命名空间列表</span><span class="token comment">// fetchNamespaces 函数使用 getNSData 的返回值来更新命名空间的下拉菜单</span><span class="token keyword">const</span> <span class="token function-variable function">fetchNamespaces</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  namespaces<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getNSData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// fetchNamespaces 函数使用 getNSData 的返回值来更新命名空间的下拉菜单</span><span class="token comment">// getNSData 函数获取命名空间并返回名称数组</span><span class="token keyword">const</span> <span class="token function-variable function">getNSData</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">NAMESPACE_LIST</span><span class="token punctuation">(</span>namespaceAllParameters<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>resp <span class="token operator">&amp;&amp;</span> resp<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span> <span class="token operator">&amp;&amp;</span> resp<span class="token punctuation">.</span>data <span class="token operator">&amp;&amp;</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>Items<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 只返回命名空间的名称数组</span>      <span class="token keyword">return</span> resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>Items<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">ns</span> <span class="token operator">=></span> ns<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'无法获取数据或数据格式不正确'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 出错时返回空数组</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> namespaceAllParameters <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">page_size</span><span class="token operator">:</span> <span class="token number">100000</span><span class="token punctuation">,</span>  <span class="token literal-property property">page_number</span><span class="token operator">:</span> currentPage<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token function-variable function">formatImages</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">images</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> images<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">image</span> <span class="token operator">=></span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>image<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/div></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">goToCreateDeployment</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  dialogSelectedNamespace<span class="token punctuation">.</span>value <span class="token operator">=</span> selectedNamespace<span class="token punctuation">.</span>value<span class="token punctuation">;</span>  createDialogVisible<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token comment">// 清空现有的实例内容器并添加一个新的实例内容器</span>  instanceItems<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token function">addInstanceItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">//编辑器配置</span><span class="token keyword">const</span> cmOptions <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 语言及语法模式</span>  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'text/yaml'</span><span class="token punctuation">,</span>  <span class="token comment">// 主题</span>  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token string">'monokai'</span><span class="token punctuation">,</span>  <span class="token literal-property property">lint</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token comment">// 显示行数</span>  <span class="token literal-property property">lineNumbers</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token literal-property property">smartIndent</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//智能缩进</span>  <span class="token literal-property property">indentUnit</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token comment">// 智能缩进单元长度为 4 个空格</span>  <span class="token literal-property property">styleActiveLine</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 显示选中行的样式</span>  <span class="token literal-property property">matchBrackets</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//每当光标位于匹配的方括号旁边时，都会使其高亮显示</span>  <span class="token literal-property property">readOnly</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>  <span class="token literal-property property">lineWrapping</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">//自动换行</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">scaleDeployment</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">row</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>row<span class="token punctuation">.</span>deploymentName<span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>selectedNamespace<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">restartDeployment</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">row</span><span class="token punctuation">)</span> <span class="token operator">=></span><span class="token punctuation">&#123;</span>  ElMessageBox<span class="token punctuation">.</span><span class="token function">confirm</span><span class="token punctuation">(</span>      <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">确定要重启Deployment "</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>row<span class="token punctuation">.</span>deploymentName<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">" 吗?</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>      <span class="token string">'警告'</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        <span class="token literal-property property">confirmButtonText</span><span class="token operator">:</span> <span class="token string">'确认'</span><span class="token punctuation">,</span>        <span class="token literal-property property">cancelButtonText</span><span class="token operator">:</span> <span class="token string">'取消'</span><span class="token punctuation">,</span>        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'warning'</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span>  <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> restarParameters <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">deploymentName</span><span class="token operator">:</span> row<span class="token punctuation">.</span>deploymentName<span class="token punctuation">,</span>      <span class="token literal-property property">namespace</span><span class="token operator">:</span> selectedNamespace    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">RESTART_DEPLOYMENT</span><span class="token punctuation">(</span>restarParameters<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"————————————————"</span><span class="token punctuation">,</span>resp<span class="token punctuation">)</span>      <span class="token function">ElMessage</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'success'</span><span class="token punctuation">,</span>        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Deployment "</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>row<span class="token punctuation">.</span>deploymentName<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">" 已重启</span><span class="token template-punctuation string">`</span></span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">getDaemonsetData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>      ElMessage<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">重启失败: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>e<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">handleSizeChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>val<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> items per page</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>  namespaceAllParameters<span class="token punctuation">.</span>page_size <span class="token operator">=</span> val  localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">'nspageSize'</span><span class="token punctuation">,</span>val<span class="token punctuation">)</span>  <span class="token function">getNSData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> handleInput <span class="token operator">=</span> _<span class="token punctuation">.</span><span class="token function">debounce</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">await</span> <span class="token function">search</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 使用 lodash 的 debounce 函数来防抖，防止搜索操作太频繁</span><span class="token keyword">const</span> <span class="token function-variable function">updateDeploy</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span><span class="token punctuation">&#123;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> updatedJson <span class="token operator">=</span> yaml2obj<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>yamlContent<span class="token punctuation">.</span>value<span class="token punctuation">)</span>    <span class="token keyword">const</span> jsonString <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>updatedJson<span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"?????????"</span><span class="token punctuation">,</span>updatedJson<span class="token punctuation">)</span>    updateParameters<span class="token punctuation">.</span>deploymentName <span class="token operator">=</span> currentDeployName<span class="token punctuation">.</span>value    updateParameters<span class="token punctuation">.</span>content <span class="token operator">=</span> jsonString    <span class="token keyword">await</span> <span class="token function">updateDeployData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">await</span> <span class="token function">getDaemonsetData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    ElMessage<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>e<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">onChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span><span class="token operator">=></span> <span class="token punctuation">&#123;</span>  yamlContent<span class="token punctuation">.</span>value <span class="token operator">=</span> val<span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">handleCurrentChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">current page: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>val<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>  currentPage<span class="token punctuation">.</span>value <span class="token operator">=</span> val  namespaceAllParameters<span class="token punctuation">.</span>page_number <span class="token operator">=</span> val  localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">'nscurrentPage'</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 将当前页保存在 localStorage</span>  <span class="token function">getNSData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">viewYAML</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">row</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'显示YAML信息'</span><span class="token punctuation">,</span> row<span class="token punctuation">.</span>daemonsetName<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 这里可以编写显示YAML信息的逻辑</span>  <span class="token comment">// 假设提供了 `getYAMLContent` 方法来获取 YAML 内容</span>  <span class="token comment">// 直接使用传入的 row 作为 YAML 内容</span>  <span class="token function">getDeployDetailData</span><span class="token punctuation">(</span>row<span class="token punctuation">.</span>daemonsetName<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">confirmDelete</span> <span class="token operator">=</span>  <span class="token punctuation">(</span><span class="token parameter">row</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>confirmDelete  ElMessageBox<span class="token punctuation">.</span><span class="token function">confirm</span><span class="token punctuation">(</span>      <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">确定要删除Daemonset "</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>row<span class="token punctuation">.</span>daemonsetName<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">" 吗?</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>      <span class="token string">'警告'</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        <span class="token literal-property property">confirmButtonText</span><span class="token operator">:</span> <span class="token string">'确认'</span><span class="token punctuation">,</span>        <span class="token literal-property property">cancelButtonText</span><span class="token operator">:</span> <span class="token string">'取消'</span><span class="token punctuation">,</span>        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'warning'</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span>  <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> deleteNSParameters <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">daemonSetName</span><span class="token operator">:</span> row<span class="token punctuation">.</span>daemonsetName<span class="token punctuation">,</span>      <span class="token literal-property property">namespace</span><span class="token operator">:</span> selectedNamespace<span class="token punctuation">.</span>value<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>deleteNSParameters<span class="token punctuation">.</span>value<span class="token punctuation">)</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">DELETE_DAEMONSET</span><span class="token punctuation">(</span>deleteNSParameters<span class="token punctuation">.</span>value<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"————————————————"</span><span class="token punctuation">,</span>resp<span class="token punctuation">)</span>      <span class="token function">ElMessage</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'success'</span><span class="token punctuation">,</span>        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">daemonset "</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>row<span class="token punctuation">.</span>daemonsetName<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">" 已被删除</span><span class="token template-punctuation string">`</span></span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">getDaemonsetData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>      ElMessage<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">删除失败: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>e<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token function">ElMessage</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'info'</span><span class="token punctuation">,</span>      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'已取消删除'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">formatDateTime</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">dateTimeString</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> dateTimeString<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'T'</span><span class="token punctuation">,</span> <span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'Z'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// 示例数据和方法</span><span class="token keyword">const</span> searchText <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> tableData <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span>  <span class="token punctuation">&#123;</span>    <span class="token literal-property property">daemonsetName</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token literal-property property">Labels</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">Status</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">Images</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">createTime</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>    <span class="token literal-property property">Operation</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>    <span class="token literal-property property">Replicas</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// ...其他数据项</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">search</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'执行搜索:'</span><span class="token punctuation">,</span> searchText<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> searchParameters <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">page_size</span><span class="token operator">:</span> pageSize<span class="token punctuation">,</span>    <span class="token literal-property property">page_number</span><span class="token operator">:</span> currentPage<span class="token punctuation">,</span>    <span class="token literal-property property">filterName</span><span class="token operator">:</span> searchText<span class="token punctuation">.</span>value<span class="token punctuation">,</span>    <span class="token literal-property property">namespace</span><span class="token operator">:</span> selectedNamespace  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">DAEMONSET_LIST</span><span class="token punctuation">(</span>deploymentParameters<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>resp <span class="token operator">&amp;&amp;</span> resp<span class="token punctuation">.</span>data <span class="token operator">&amp;&amp;</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>items<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      tableData<span class="token punctuation">.</span>value <span class="token operator">=</span> resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> statuss <span class="token operator">=</span> item<span class="token punctuation">.</span>status<span class="token punctuation">;</span>        <span class="token keyword">const</span> specs <span class="token operator">=</span> item<span class="token punctuation">.</span>spec<span class="token punctuation">;</span>        <span class="token comment">// 运行中的副本数</span>        <span class="token keyword">const</span> runningReplicas <span class="token operator">=</span> statuss<span class="token punctuation">.</span>currentNumberScheduled<span class="token punctuation">;</span>        <span class="token comment">// 无法用的副本数</span>        <span class="token keyword">const</span> unavailableReplicas <span class="token operator">=</span> statuss<span class="token punctuation">.</span>numberUnavailable<span class="token punctuation">;</span>        <span class="token comment">// 是否展示加载图标 - 如果还有Pods未在运行状态，则显示加载图标</span>        <span class="token keyword">const</span> showLoading <span class="token operator">=</span> statuss<span class="token punctuation">.</span>desiredNumberScheduled <span class="token operator">!==</span> statuss<span class="token punctuation">.</span>currentNumberScheduled<span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          <span class="token literal-property property">daemonsetName</span><span class="token operator">:</span> item<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>name<span class="token punctuation">,</span>          <span class="token literal-property property">Labels</span><span class="token operator">:</span> <span class="token function">formatLabels</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>labels<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token literal-property property">showLoading</span><span class="token operator">:</span> showLoading<span class="token punctuation">,</span> <span class="token comment">// 添加 showLoading 标志</span>          <span class="token comment">// 更新状态显示为“运行副本数/期望副本数”格式</span>          <span class="token literal-property property">Status</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>runningReplicas <span class="token operator">-</span> <span class="token punctuation">(</span>unavailableReplicas <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>runningReplicas<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>          <span class="token literal-property property">Images</span><span class="token operator">:</span> item<span class="token punctuation">.</span>spec<span class="token punctuation">.</span>template<span class="token punctuation">.</span>spec<span class="token punctuation">.</span>containers<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">container</span> <span class="token operator">=></span> container<span class="token punctuation">.</span>image<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token literal-property property">createTime</span><span class="token operator">:</span> <span class="token function">formatDateTime</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>creationTimestamp<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token literal-property property">Replicas</span><span class="token operator">:</span> item<span class="token punctuation">.</span>spec<span class="token punctuation">.</span>replicas          <span class="token comment">// 其他属性...</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>tableData<span class="token punctuation">.</span>value<span class="token punctuation">,</span><span class="token string">"wocao================================================================"</span><span class="token punctuation">)</span>    <span class="token comment">// 更新部署计数</span>    deploymentCount<span class="token punctuation">.</span>value <span class="token operator">=</span> resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>count<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">refresh</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token function">getDaemonsetData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'刷新表格数据'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> updateParameters <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">deploymentName</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>  <span class="token literal-property property">namespace</span><span class="token operator">:</span> selectedNamespace<span class="token punctuation">,</span>  <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token function-variable function">updateDeployData</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"你吗的"</span><span class="token punctuation">,</span>updateParameters<span class="token punctuation">.</span>content<span class="token punctuation">)</span>    <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">UPDATE_DAEMONSET</span><span class="token punctuation">(</span>updateParameters<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>resp<span class="token punctuation">.</span>code <span class="token operator">!==</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      ElMessage<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>message<span class="token punctuation">)</span>      <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    ElMessage<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">"更新成功"</span><span class="token punctuation">)</span>    dialogVisible<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span>  <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>    ElMessage<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>e<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> deploymentParameters <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">page_size</span><span class="token operator">:</span> pageSize<span class="token punctuation">,</span>  <span class="token literal-property property">page_number</span><span class="token operator">:</span> currentPage<span class="token punctuation">,</span>  <span class="token literal-property property">namespace</span><span class="token operator">:</span> selectedNamespace<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 设置watcher来监听selectedNamespace的改变</span><span class="token function">watch</span><span class="token punctuation">(</span>selectedNamespace<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">newNamespace</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 更新deploymentParameters中的namespace</span>  deploymentParameters<span class="token punctuation">.</span>namespace <span class="token operator">=</span> newNamespace<span class="token punctuation">;</span>  <span class="token comment">// 重新调用getDeployData以获取新命名空间的部署数据</span>  <span class="token function">getDaemonsetData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> deploymentCount <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">// 在这里创建一个方法来将 Labels 对象转换为一个字符串数组</span><span class="token comment">// 格式化标签为字符串数组</span><span class="token keyword">const</span> <span class="token function-variable function">formatLabels</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">labelsMap</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> labelsMap <span class="token operator">?</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>labelsMap<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>key<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>value<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> systemNamespaces <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'default'</span><span class="token punctuation">,</span> <span class="token string">'kube-system'</span><span class="token punctuation">,</span> <span class="token string">'kube-public'</span><span class="token punctuation">,</span> <span class="token string">'kube-node-lease'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">getDaemonsetData</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">DAEMONSET_LIST</span><span class="token punctuation">(</span>deploymentParameters<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>resp <span class="token operator">&amp;&amp;</span> resp<span class="token punctuation">.</span>data <span class="token operator">&amp;&amp;</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>items<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      tableData<span class="token punctuation">.</span>value <span class="token operator">=</span> resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> statuss <span class="token operator">=</span> item<span class="token punctuation">.</span>status<span class="token punctuation">;</span>        <span class="token keyword">const</span> specs <span class="token operator">=</span> item<span class="token punctuation">.</span>spec<span class="token punctuation">;</span>        <span class="token comment">// 运行中的副本数</span>        <span class="token keyword">const</span> runningReplicas <span class="token operator">=</span> statuss<span class="token punctuation">.</span>currentNumberScheduled<span class="token punctuation">;</span>        <span class="token comment">// 无法用的副本数</span>        <span class="token keyword">const</span> unavailableReplicas <span class="token operator">=</span> statuss<span class="token punctuation">.</span>numberUnavailable<span class="token punctuation">;</span>        <span class="token comment">// 是否展示加载图标 - 如果还有Pods未在运行状态，则显示加载图标</span>        <span class="token keyword">const</span> showLoading <span class="token operator">=</span> statuss<span class="token punctuation">.</span>desiredNumberScheduled <span class="token operator">!==</span> statuss<span class="token punctuation">.</span>currentNumberScheduled<span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          <span class="token literal-property property">daemonsetName</span><span class="token operator">:</span> item<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>name<span class="token punctuation">,</span>          <span class="token literal-property property">Labels</span><span class="token operator">:</span> <span class="token function">formatLabels</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>labels<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token literal-property property">showLoading</span><span class="token operator">:</span> showLoading<span class="token punctuation">,</span> <span class="token comment">// 添加 showLoading 标志</span>          <span class="token comment">// 更新状态显示为“运行副本数/期望副本数”格式</span>          <span class="token literal-property property">Status</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>runningReplicas <span class="token operator">-</span> <span class="token punctuation">(</span>unavailableReplicas <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>runningReplicas<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>          <span class="token literal-property property">Images</span><span class="token operator">:</span> item<span class="token punctuation">.</span>spec<span class="token punctuation">.</span>template<span class="token punctuation">.</span>spec<span class="token punctuation">.</span>containers<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">container</span> <span class="token operator">=></span> container<span class="token punctuation">.</span>image<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token literal-property property">createTime</span><span class="token operator">:</span> <span class="token function">formatDateTime</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>creationTimestamp<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token literal-property property">Replicas</span><span class="token operator">:</span> item<span class="token punctuation">.</span>spec<span class="token punctuation">.</span>replicas          <span class="token comment">// 其他属性...</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>tableData<span class="token punctuation">.</span>value<span class="token punctuation">,</span><span class="token string">"wocao================================================================"</span><span class="token punctuation">)</span>    <span class="token comment">// 更新部署计数</span>    deploymentCount<span class="token punctuation">.</span>value <span class="token operator">=</span> resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>count<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">getDeployDetailData</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">daemonsetName</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> daemonsetDetailparams <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">daemonSetName</span><span class="token operator">:</span> daemonsetName<span class="token punctuation">,</span>      <span class="token literal-property property">namespace</span><span class="token operator">:</span> selectedNamespace<span class="token punctuation">.</span>value    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"ddddddddd"</span><span class="token punctuation">,</span>daemonsetDetailparams<span class="token punctuation">)</span>    <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">DAEMONSET_DETAIL</span><span class="token punctuation">(</span>daemonsetDetailparams<span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"cccccccc"</span><span class="token punctuation">,</span>resp<span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"yaml ======="</span><span class="token punctuation">,</span>json2yaml<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>    yamlContent<span class="token punctuation">.</span>value <span class="token operator">=</span> json2yaml<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 确保将数据赋值给 yamlContent</span>    currentDeployName<span class="token punctuation">.</span>value <span class="token operator">=</span> resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>name    updateParameters<span class="token punctuation">.</span>content <span class="token operator">=</span> yamlContent<span class="token punctuation">.</span>value    <span class="token keyword">await</span>  <span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    dialogVisible<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"你吗"</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 在setup函数中定义定时器</span><span class="token keyword">let</span> refreshInterval <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token function">loadSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  refreshInterval <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token function">getDaemonsetData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">30000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 每30秒刷新一次</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 组件卸载前保存命名空间</span><span class="token function">onBeforeUnmount</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token function">saveSelection</span><span class="token punctuation">(</span>selectedNamespace<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">onBeforeMount</span><span class="token punctuation">(</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token function">clearInterval</span><span class="token punctuation">(</span>refreshInterval<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 尝试从 localStorage 中读取状态</span>  <span class="token keyword">const</span> savedPageSize <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'nspageSize'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> savedCurrentPage <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'nscurrentPage'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 如果存在则更新到响应式变量中</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>savedPageSize<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    pageSize<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>savedPageSize<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>savedCurrentPage<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    currentPage<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>savedCurrentPage<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">getDaemonsetData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token keyword">await</span> <span class="token function">fetchNamespaces</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取并更新命名空间列表</span>  <span class="token comment">// getNSAllData()</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>style scoped<span class="token operator">></span><span class="token punctuation">.</span>loading<span class="token operator">-</span>icon <span class="token punctuation">&#123;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 20px<span class="token punctuation">;</span> <span class="token comment">/* 或者您希望的任何尺寸 */</span>  <span class="token literal-property property">height</span><span class="token operator">:</span> 20px<span class="token punctuation">;</span> <span class="token comment">/* 保持与宽度相同以保持图标的纵横比 */</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 5px<span class="token punctuation">;</span> <span class="token comment">/* 添加一点空间在状态文本和图标之间 */</span>  <span class="token literal-property property">animation</span><span class="token operator">:</span> loading<span class="token operator">-</span>spin 2s linear infinite<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 如果需要，可以移除这个类，因为它可能会导致对齐问题 */</span><span class="token comment">/* .loader &#123;  animation: loader-spin 1s linear infinite;&#125; */</span>@keyframes loading<span class="token operator">-</span>spin <span class="token punctuation">&#123;</span>  <span class="token number">0</span><span class="token operator">%</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">transform</span><span class="token operator">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>0deg<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token number">100</span><span class="token operator">%</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">transform</span><span class="token operator">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>360deg<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>container <span class="token punctuation">&#123;</span>  <span class="token literal-property property">margin</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  background<span class="token operator">-</span>color<span class="token operator">:</span> #<span class="token constant">F2F2F2</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>deployment<span class="token operator">-</span>header <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>  justify<span class="token operator">-</span>content<span class="token operator">:</span> space<span class="token operator">-</span>between<span class="token punctuation">;</span>  <span class="token literal-property property">padding</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  <span class="token literal-property property">margin</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> <span class="token operator">-</span>10px<span class="token punctuation">;</span>  <span class="token literal-property property">background</span><span class="token operator">:</span> #<span class="token constant">FFF</span><span class="token punctuation">;</span>  <span class="token literal-property property">border</span><span class="token operator">:</span> 2px solid #ebeef5<span class="token punctuation">;</span>  box<span class="token operator">-</span>shadow<span class="token operator">:</span> <span class="token number">0</span> 2px 10px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 新增左侧部分样式，放置“命名空间：”文本和下拉框 */</span><span class="token punctuation">.</span>left<span class="token operator">-</span>section <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 确保下拉框和文本在同一行 */</span><span class="token punctuation">.</span>el<span class="token operator">-</span>select <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 为下拉框添加左侧间隔 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>header <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>  justify<span class="token operator">-</span>content<span class="token operator">:</span> space<span class="token operator">-</span>between<span class="token punctuation">;</span> <span class="token comment">/* 添加此属性对子元素进行分散对齐 */</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> 0px<span class="token punctuation">;</span>  <span class="token literal-property property">gap</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  <span class="token literal-property property">padding</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  <span class="token literal-property property">background</span><span class="token operator">:</span> #<span class="token constant">FFF</span><span class="token punctuation">;</span>  <span class="token literal-property property">border</span><span class="token operator">:</span> 2px solid #ebeef5<span class="token punctuation">;</span>  box<span class="token operator">-</span>shadow<span class="token operator">:</span> <span class="token number">0</span> 2px 12px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>search<span class="token operator">-</span>input <span class="token punctuation">&#123;</span>  <span class="token comment">/*flex-grow: 1;*/</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 200px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>table<span class="token operator">-</span>wrapper <span class="token punctuation">&#123;</span>  <span class="token literal-property property">background</span><span class="token operator">:</span> #<span class="token constant">FFF</span><span class="token punctuation">;</span>  <span class="token literal-property property">border</span><span class="token operator">:</span> 2px solid #ebeef5<span class="token punctuation">;</span> <span class="token comment">/* 浅色边框线 */</span>  box<span class="token operator">-</span>shadow<span class="token operator">:</span> <span class="token number">0</span> 2px 12px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>paginations <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>top<span class="token operator">:</span> 10px<span class="token punctuation">;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 20px<span class="token punctuation">;</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 左侧组合样式，创建按钮和搜索框靠在一起 */</span><span class="token punctuation">.</span>left<span class="token operator">-</span>group <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>  <span class="token literal-property property">gap</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* You can adjust the gap as needed */</span><span class="token punctuation">&#125;</span><span class="token comment">/* 右侧刷新按钮 */</span><span class="token punctuation">.</span>right<span class="token operator">-</span>group <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>yaml<span class="token operator">-</span>content <span class="token punctuation">&#123;</span>  background<span class="token operator">-</span>color<span class="token operator">:</span> #f5f5f5<span class="token punctuation">;</span>  border<span class="token operator">-</span>left<span class="token operator">:</span> 3px solid #4795EE<span class="token punctuation">;</span>  <span class="token literal-property property">padding</span><span class="token operator">:</span> 15px<span class="token punctuation">;</span>  white<span class="token operator">-</span>space<span class="token operator">:</span> pre<span class="token operator">-</span>wrap<span class="token punctuation">;</span>  text<span class="token operator">-</span>align<span class="token operator">:</span> left<span class="token punctuation">;</span>  <span class="token literal-property property">margin</span><span class="token operator">:</span> 20px <span class="token number">0</span><span class="token punctuation">;</span>  overflow<span class="token operator">-</span>x<span class="token operator">:</span> auto<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>status<span class="token operator">-</span>active <span class="token punctuation">&#123;</span>  <span class="token literal-property property">color</span><span class="token operator">:</span> #67C23A<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>status<span class="token operator">-</span>inactive <span class="token punctuation">&#123;</span>  <span class="token literal-property property">color</span><span class="token operator">:</span> red<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>dialog<span class="token operator">-</span>footer <span class="token punctuation">&#123;</span>  <span class="token comment">/*text-align: right;*/</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  justify<span class="token operator">-</span>content<span class="token operator">:</span> flex<span class="token operator">-</span>end<span class="token punctuation">;</span>  <span class="token literal-property property">padding</span><span class="token operator">:</span> 8px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>deployment<span class="token operator">-</span>header <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>  <span class="token literal-property property">height</span><span class="token operator">:</span> 30px<span class="token punctuation">;</span>  <span class="token literal-property property">padding</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  <span class="token literal-property property">margin</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> <span class="token operator">-</span>10px<span class="token punctuation">;</span>  <span class="token literal-property property">background</span><span class="token operator">:</span> #<span class="token constant">FFF</span><span class="token punctuation">;</span>  <span class="token literal-property property">border</span><span class="token operator">:</span> 2px solid #ebeef5<span class="token punctuation">;</span>  box<span class="token operator">-</span>shadow<span class="token operator">:</span> <span class="token number">0</span> 2px 10px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>form<span class="token operator">-</span>item<span class="token operator">-</span><span class="token keyword">with</span><span class="token operator">-</span>help <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>top<span class="token operator">:</span> 10px<span class="token punctuation">;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>form<span class="token operator">-</span>item<span class="token operator">-</span><span class="token keyword">with</span><span class="token operator">-</span>resource <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>top<span class="token operator">:</span> 10px<span class="token punctuation">;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>form<span class="token operator">-</span>item <span class="token punctuation">&#123;</span>  flex<span class="token operator">-</span>wrap<span class="token operator">:</span> wrap<span class="token punctuation">;</span> <span class="token comment">/* 确保换行 */</span>  <span class="token comment">/*align-items: center; !* 如果需要垂直居中 *!*/</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 保持垂直间距 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>item <span class="token punctuation">&#123;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 200px<span class="token punctuation">;</span>  margin<span class="token operator">-</span>right<span class="token operator">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>help<span class="token operator">-</span>text <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> block<span class="token punctuation">;</span> <span class="token comment">/* 保证帮助文本在新的行显示 */</span>  font<span class="token operator">-</span>size<span class="token operator">:</span> 12px<span class="token punctuation">;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 1000px<span class="token punctuation">;</span>  <span class="token literal-property property">color</span><span class="token operator">:</span> #<span class="token number">999999</span><span class="token punctuation">;</span>  margin<span class="token operator">-</span>top<span class="token operator">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span><span class="token keyword">with</span><span class="token operator">-</span>help <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>top<span class="token operator">:</span> 20px<span class="token punctuation">;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  flex<span class="token operator">-</span>direction<span class="token operator">:</span> column<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>deployname <span class="token punctuation">&#123;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 300px<span class="token punctuation">;</span> <span class="token comment">/* 限制这个div的宽度 */</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  flex<span class="token operator">-</span>direction<span class="token operator">:</span> column<span class="token punctuation">;</span> <span class="token comment">/* 让子元素垂直排列 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>containername <span class="token punctuation">&#123;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 250px<span class="token punctuation">;</span> <span class="token comment">/* 限制这个div的宽度 */</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> <span class="token operator">-</span>50px<span class="token punctuation">;</span>  flex<span class="token operator">-</span>direction<span class="token operator">:</span> column<span class="token punctuation">;</span> <span class="token comment">/* 让子元素垂直排列 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>add<span class="token operator">-</span>button <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>top<span class="token operator">:</span> <span class="token operator">-</span>20px<span class="token punctuation">;</span> <span class="token comment">/* 添加按钮与输入行之间的空间 */</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 200px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>container<span class="token operator">-</span>cpu <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  flex<span class="token operator">-</span>direction<span class="token operator">:</span> column<span class="token punctuation">;</span>  <span class="token comment">/*padding-left: -20px; !* 往右移动整个容器 *!*/</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>cpu<span class="token operator">-</span>label <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> 5px<span class="token punctuation">;</span> <span class="token comment">/* 调整为所需的间距 */</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> <span class="token operator">-</span>50px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>container <span class="token punctuation">&#123;</span>  <span class="token literal-property property">margin</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>item<span class="token operator">-</span>container <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>content<span class="token operator">-</span>container <span class="token punctuation">&#123;</span>  background<span class="token operator">-</span>color<span class="token operator">:</span> #<span class="token constant">F2F2F2</span><span class="token punctuation">;</span>  <span class="token literal-property property">padding</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 700px<span class="token punctuation">;</span>  justify<span class="token operator">-</span>content<span class="token operator">:</span> space<span class="token operator">-</span>between<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>  <span class="token literal-property property">transition</span><span class="token operator">:</span> height <span class="token number">0</span><span class="token punctuation">.</span>3s<span class="token punctuation">;</span>  <span class="token literal-property property">overflow</span><span class="token operator">:</span> hidden<span class="token punctuation">;</span>  <span class="token literal-property property">position</span><span class="token operator">:</span> relative<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>content<span class="token operator">-</span>container<span class="token punctuation">.</span>collapsed <span class="token punctuation">&#123;</span>  <span class="token literal-property property">height</span><span class="token operator">:</span> 40px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>info <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>actions <span class="token punctuation">&#123;</span>  <span class="token literal-property property">position</span><span class="token operator">:</span> absolute<span class="token punctuation">;</span>  <span class="token literal-property property">right</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 调整为需要的值 */</span>  <span class="token literal-property property">top</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 调整为需要的值 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>row <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>  <span class="token literal-property property">gap</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  <span class="token comment">/*margin-left: -50px;*/</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>row <span class="token punctuation">.</span>el<span class="token operator">-</span>input <span class="token punctuation">&#123;</span>  <span class="token literal-property property">flex</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>row label <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 或者需要的任何值 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>row <span class="token punctuation">.</span>el<span class="token operator">-</span>input <span class="token punctuation">.</span>el<span class="token operator">-</span>input__inner <span class="token punctuation">&#123;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span> <span class="token comment">/* 让输入框充满其容器 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>containername p <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 为“CPU：”下方添加一些间隔 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>form<span class="token operator">-</span>item<span class="token operator">-</span>resource <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 20px<span class="token punctuation">;</span> <span class="token comment">/* 整个表单项向右移动 20px */</span>  margin<span class="token operator">-</span>top<span class="token operator">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>custom<span class="token operator">-</span>form<span class="token operator">-</span>item <span class="token punctuation">&#123;</span>  <span class="token literal-property property">height</span><span class="token operator">:</span> auto<span class="token punctuation">;</span>  <span class="token literal-property property">overflow</span><span class="token operator">:</span> auto<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>check<span class="token operator">-</span>method<span class="token operator">-</span>container<span class="token punctuation">,</span><span class="token punctuation">.</span>execution<span class="token operator">-</span>command<span class="token operator">-</span>container <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 添加一些垂直间距 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>method<span class="token operator">-</span>label <span class="token punctuation">&#123;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 100px<span class="token punctuation">;</span>  <span class="token literal-property property">margin</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  margin<span class="token operator">-</span>right<span class="token operator">:</span> 20px<span class="token punctuation">;</span> <span class="token comment">/* 文本与选择框/输入框之间的间隔 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>command<span class="token operator">-</span>label <span class="token punctuation">&#123;</span>  <span class="token comment">/*margin-right: 20px; !* 文本与输入框之间的间隔 *!*/</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 100px<span class="token punctuation">;</span>  <span class="token literal-property property">margin</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>livenessdiv <span class="token punctuation">&#123;</span>  background<span class="token operator">-</span>color<span class="token operator">:</span> white<span class="token punctuation">;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 500px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>port<span class="token operator">-</span>range <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>healthContainer <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> <span class="token operator">-</span>50px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>el<span class="token operator">-</span>select<span class="token punctuation">,</span><span class="token punctuation">.</span>el<span class="token operator">-</span>input <span class="token punctuation">&#123;</span>  <span class="token comment">/*flex-grow: 1; !* 输入框和选择框将占据剩余空间 *!*/</span>  max<span class="token operator">-</span>width<span class="token operator">:</span> <span class="token function">calc</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token operator">%</span> <span class="token operator">-</span> 100px<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* 限制最大宽度，这里的100px是示例，可以根据实际情况调整 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>button<span class="token operator">-</span>group <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  justify<span class="token operator">-</span>content<span class="token operator">:</span> center<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>  <span class="token literal-property property">gap</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 调整按钮之间的间隔 */</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="4、statefulset开发"><a href="#4、statefulset开发" class="headerlink" title="4、statefulset开发"></a>4、statefulset开发</h5><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 新的 div 容器，使用flex布局对齐内容 <span class="token operator">--</span><span class="token operator">></span>  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"deployment-header"</span> style<span class="token operator">=</span><span class="token string">"flex: 1"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"left-section"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>span<span class="token operator">></span>命名空间：<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>select v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"selectedNamespace"</span> placeholder<span class="token operator">=</span><span class="token string">"请选择"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>option            v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"namespace in namespaces"</span>            <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"namespace"</span>            <span class="token operator">:</span>label<span class="token operator">=</span><span class="token string">"namespace"</span>            <span class="token operator">:</span>value<span class="token operator">=</span><span class="token string">"namespace"</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>select<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 移动的刷新按钮，保留在右侧 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"right-group"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">"refresh"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon<span class="token operator">></span><span class="token operator">&lt;</span>Refresh <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">></span>        <span class="token operator">&lt;</span>span<span class="token operator">></span> 刷新 <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"container"</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 第一部分<span class="token operator">:</span> 头部 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"header shadow"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"left-group"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>button  type<span class="token operator">=</span><span class="token string">"primary"</span> @click<span class="token operator">=</span><span class="token string">"goToCreateDeployment()"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon<span class="token operator">></span><span class="token operator">&lt;</span>EditPen <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">></span>          <span class="token operator">&lt;</span>span style<span class="token operator">=</span><span class="token string">"vertical-align: middle"</span><span class="token operator">></span> 创建 <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>input placeholder<span class="token operator">=</span><span class="token string">"请输入内容"</span> v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"searchText"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"search-input"</span> @input<span class="token operator">=</span><span class="token string">"handleInput"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>template #append<span class="token operator">></span>            <span class="token operator">&lt;</span>el<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">"primary"</span> @click<span class="token operator">=</span><span class="token string">"search()"</span><span class="token operator">></span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon<span class="token operator">></span><span class="token operator">&lt;</span>Search <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 第二部分<span class="token operator">:</span> 表格 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"table-wrapper shadow"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>table <span class="token operator">:</span>data<span class="token operator">=</span><span class="token string">"tableData"</span> style<span class="token operator">=</span><span class="token string">"width: 100%"</span> <span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column prop<span class="token operator">=</span><span class="token string">"statefulsetName"</span> label<span class="token operator">=</span><span class="token string">"Statefulset名"</span> width<span class="token operator">=</span><span class="token string">"180px"</span> align<span class="token operator">=</span><span class="token string">"center"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>template #<span class="token keyword">default</span><span class="token operator">=</span><span class="token string">"&#123; row &#125;"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div<span class="token operator">></span>              <span class="token operator">&lt;</span>span style<span class="token operator">=</span><span class="token string">"vertical-align: middle; color: #1395FF; cursor: pointer;"</span> @click<span class="token operator">=</span><span class="token string">"handleRowClick(row)"</span><span class="token operator">></span>                <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> row<span class="token punctuation">.</span>statefulsetName <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>              <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column prop<span class="token operator">=</span><span class="token string">"Labels"</span> label<span class="token operator">=</span><span class="token string">"标签"</span> width<span class="token operator">=</span><span class="token string">"200px"</span> align<span class="token operator">=</span><span class="token string">"center"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>template #<span class="token keyword">default</span><span class="token operator">=</span><span class="token string">"&#123; row &#125;"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div<span class="token operator">></span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>tooltip                  v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"(label, index) in row.Labels"</span>                  <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"index"</span>                  <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"item"</span>                  effect<span class="token operator">=</span><span class="token string">"dark"</span>                  <span class="token operator">:</span>content<span class="token operator">=</span><span class="token string">"label"</span>                  placement<span class="token operator">=</span><span class="token string">"top"</span>              <span class="token operator">></span>                <span class="token operator">&lt;</span>el<span class="token operator">-</span>tag <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ml-2"</span> type<span class="token operator">=</span><span class="token string">"success"</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> label <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>tag<span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>tooltip<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column prop<span class="token operator">=</span><span class="token string">"Status"</span> label<span class="token operator">=</span><span class="token string">"Pod数量 (运行/期望)"</span> align<span class="token operator">=</span><span class="token string">"center"</span> width<span class="token operator">=</span><span class="token string">"200px"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>template #<span class="token keyword">default</span><span class="token operator">=</span><span class="token string">"&#123; row &#125;"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token string">"display: flex; align-items: center;justify-content: center;height: 100%"</span><span class="token operator">></span>              <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> row<span class="token punctuation">.</span>Status <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>              <span class="token operator">&lt;</span>img v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"row.showLoading"</span> src<span class="token operator">=</span><span class="token string">"@/assets/load.svg"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"loading-icon"</span> alt<span class="token operator">=</span><span class="token string">"loading"</span><span class="token operator">/</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column prop<span class="token operator">=</span><span class="token string">"createTime"</span> label<span class="token operator">=</span><span class="token string">"创建时间"</span> align<span class="token operator">=</span><span class="token string">"center"</span> width<span class="token operator">=</span><span class="token string">"155px"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>template #<span class="token keyword">default</span><span class="token operator">=</span><span class="token string">"&#123; row &#125;"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div<span class="token operator">></span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>tag <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ml-2"</span> type<span class="token operator">=</span><span class="token string">"warning"</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>row<span class="token punctuation">.</span>createTime<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>tag<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column prop<span class="token operator">=</span><span class="token string">"Images"</span> label<span class="token operator">=</span><span class="token string">"镜像"</span> align<span class="token operator">=</span><span class="token string">"center"</span> width<span class="token operator">=</span><span class="token string">"180px"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>template #<span class="token keyword">default</span><span class="token operator">=</span><span class="token string">"&#123; row &#125;"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div<span class="token operator">></span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>tooltip                  v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"(images, index) in row.Images"</span>                  <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"index"</span>                  <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"item"</span>                  effect<span class="token operator">=</span><span class="token string">"dark"</span>                  <span class="token operator">:</span>content<span class="token operator">=</span><span class="token string">"images"</span>                  placement<span class="token operator">=</span><span class="token string">"top"</span>              <span class="token operator">></span>                <span class="token operator">&lt;</span>el<span class="token operator">-</span>tag <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ml-2"</span> type<span class="token operator">=</span><span class="token string">"success"</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> images <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>tag<span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>tooltip<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column prop<span class="token operator">=</span><span class="token string">"Operation"</span> label<span class="token operator">=</span><span class="token string">"操作"</span> align<span class="token operator">=</span><span class="token string">"center"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>template #<span class="token keyword">default</span><span class="token operator">=</span><span class="token string">"&#123; row &#125;"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"button-group"</span><span class="token operator">></span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>button size<span class="token operator">=</span><span class="token string">"small"</span> color<span class="token operator">=</span><span class="token string">"#5AABFF"</span> <span class="token operator">:</span>dark<span class="token operator">=</span><span class="token string">"isDark"</span> plain @click<span class="token operator">=</span><span class="token string">"viewYAML(row)"</span><span class="token operator">></span>                <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon<span class="token operator">></span><span class="token operator">&lt;</span>EditPen <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">></span>                <span class="token operator">&lt;</span>span style<span class="token operator">=</span><span class="token string">"vertical-align: middle"</span><span class="token operator">></span> <span class="token constant">YAML</span> <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>button size<span class="token operator">=</span><span class="token string">"small"</span>  color<span class="token operator">=</span><span class="token string">"#F58D79"</span> <span class="token operator">:</span>dark<span class="token operator">=</span><span class="token string">"isDark"</span> plain @click<span class="token operator">=</span><span class="token string">"openScaleDiglog(row)"</span><span class="token operator">></span><span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>                <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon<span class="token operator">></span><span class="token operator">&lt;</span>Tickets <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">></span><span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>                <span class="token operator">&lt;</span>span style<span class="token operator">=</span><span class="token string">"vertical-align: middle"</span><span class="token operator">></span> 扩缩 <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span><span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>              <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span><span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>button size<span class="token operator">=</span><span class="token string">"small"</span>  color<span class="token operator">=</span><span class="token string">"#F58D79"</span> <span class="token operator">:</span>dark<span class="token operator">=</span><span class="token string">"isDark"</span> plain @click<span class="token operator">=</span><span class="token string">"restartDeployment(row)"</span><span class="token operator">></span><span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>                <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon<span class="token operator">></span><span class="token operator">&lt;</span>Tickets <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">></span><span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>                <span class="token operator">&lt;</span>span style<span class="token operator">=</span><span class="token string">"vertical-align: middle"</span><span class="token operator">></span> 重启 <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span><span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>              <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span><span class="token operator">--</span><span class="token operator">></span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>button size<span class="token operator">=</span><span class="token string">"small"</span>  color<span class="token operator">=</span><span class="token string">"#F58D79"</span> <span class="token operator">:</span>dark<span class="token operator">=</span><span class="token string">"isDark"</span> plain @click<span class="token operator">=</span><span class="token string">"confirmDelete(row)"</span><span class="token operator">></span>                <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon<span class="token operator">></span><span class="token operator">&lt;</span>Tickets <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">></span>                <span class="token operator">&lt;</span>span style<span class="token operator">=</span><span class="token string">"vertical-align: middle"</span><span class="token operator">></span> 删除 <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>pagination          v<span class="token operator">-</span>model<span class="token operator">:</span>current<span class="token operator">-</span>page<span class="token operator">=</span><span class="token string">"currentPage"</span>          v<span class="token operator">-</span>model<span class="token operator">:</span>page<span class="token operator">-</span>size<span class="token operator">=</span><span class="token string">"pageSize"</span>          <span class="token operator">:</span>page<span class="token operator">-</span>sizes<span class="token operator">=</span><span class="token string">"[5, 10, 20, 30]"</span>          <span class="token operator">:</span>small<span class="token operator">=</span><span class="token string">"small"</span>          <span class="token operator">:</span>disabled<span class="token operator">=</span><span class="token string">"disabled"</span>          <span class="token operator">:</span>background<span class="token operator">=</span><span class="token string">"background"</span>          layout<span class="token operator">=</span><span class="token string">"total, sizes, prev, pager, next, jumper"</span>          <span class="token operator">:</span>total<span class="token operator">=</span>deploymentCount          <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"paginations"</span>          @size<span class="token operator">-</span>change<span class="token operator">=</span><span class="token string">"handleSizeChange"</span>          @current<span class="token operator">-</span>change<span class="token operator">=</span><span class="token string">"handleCurrentChange"</span>      <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>el<span class="token operator">-</span>dialog title<span class="token operator">=</span><span class="token string">"YAML信息"</span> v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"dialogVisible"</span> width<span class="token operator">=</span><span class="token string">"45%"</span> top<span class="token operator">=</span><span class="token string">"5%"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>codemirror          v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"yamlContent"</span>          placeholder<span class="token operator">=</span><span class="token string">"请输入代码..."</span>          <span class="token operator">:</span>style<span class="token operator">=</span><span class="token string">"&#123; height: '100%' &#125;"</span>          v<span class="token operator">-</span>bind<span class="token operator">=</span><span class="token string">"cmOptions"</span>          <span class="token operator">:</span>extensions<span class="token operator">=</span><span class="token string">"extensions"</span>      <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span>template #footer<span class="token operator">></span>                <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"dialog-footer"</span><span class="token operator">></span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">"dialogVisible = false"</span><span class="token operator">></span>取 消<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>button  type<span class="token operator">=</span><span class="token string">"primary"</span> @click<span class="token operator">=</span><span class="token string">"updateDeploy()"</span><span class="token operator">></span>更 新<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>dialog<span class="token operator">></span>    <span class="token operator">&lt;</span>el<span class="token operator">-</span>dialog title<span class="token operator">=</span><span class="token string">"创建StatefulSet"</span> v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"createDialogVisible"</span> width<span class="token operator">=</span><span class="token string">"60%"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>form ref<span class="token operator">=</span><span class="token string">"form"</span> <span class="token operator">:</span>model<span class="token operator">=</span><span class="token string">"createForm"</span> label<span class="token operator">-</span>position<span class="token operator">=</span><span class="token string">"left"</span> label<span class="token operator">-</span>width<span class="token operator">=</span><span class="token string">"180px"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-with-help"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"StatefulSet名："</span> prop<span class="token operator">=</span><span class="token string">"name"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-item-with-help"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-deployname"</span><span class="token operator">></span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"createForm.StatefulSetName"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入StatefulSet名"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>              <span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"help-text"</span><span class="token operator">></span>                <span class="token function">最长63个字符，只能包含小写字母、数字及分隔符</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span>，且必须以小写字母开头，数字或小写字母结尾              <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"描述："</span> prop<span class="token operator">=</span><span class="token string">"description"</span> style<span class="token operator">=</span><span class="token string">"margin: 10px;margin-left: 20px"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>el<span class="token operator">-</span>input              type<span class="token operator">=</span><span class="token string">"textarea"</span>              v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"createForm.description"</span>              placeholder<span class="token operator">=</span><span class="token string">"请输入描述信息"</span>              <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"custom-textarea"</span>          <span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"标签："</span> prop<span class="token operator">=</span><span class="token string">"labels"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-item-with-help"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"(item, index) in formItems"</span> <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"item.id"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-item"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>el<span class="token operator">-</span>input                placeholder<span class="token operator">=</span><span class="token string">"Key"</span>                v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.key"</span>                <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-item"</span>                <span class="token operator">:</span>disabled<span class="token operator">=</span><span class="token string">"!item.editable"</span>            <span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>            <span class="token operator">&lt;</span>span<span class="token operator">></span> <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>            <span class="token operator">&lt;</span>el<span class="token operator">-</span>input                placeholder<span class="token operator">=</span><span class="token string">"Value"</span>                v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.value"</span>                <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-item"</span>            <span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>            <span class="token operator">&lt;</span>el<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">"removeFormItem(index)"</span> <span class="token operator">:</span>disabled<span class="token operator">=</span><span class="token string">"!item.editable"</span><span class="token operator">></span>              <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon<span class="token operator">></span><span class="token operator">&lt;</span>CircleClose <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 将添加新行的按钮移动到循环外部 <span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>        <span class="token operator">&lt;</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span>el<span class="token operator">-</span>button              type<span class="token operator">=</span><span class="token string">"primary"</span>              @click<span class="token operator">=</span><span class="token string">"() => addFormItem(item)"</span>              <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"add-button"</span>          <span class="token operator">></span>            添加新标签          <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"命名空间："</span> prop<span class="token operator">=</span><span class="token string">"namespace"</span> style<span class="token operator">=</span><span class="token string">"margin: 10px"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>el<span class="token operator">-</span>select v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"createForm.namespace"</span> placeholder<span class="token operator">=</span><span class="token string">"请选择"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>el<span class="token operator">-</span>option                v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"namespace in namespaces"</span>                <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"namespace"</span>                <span class="token operator">:</span>label<span class="token operator">=</span><span class="token string">"namespace"</span>                <span class="token operator">:</span>value<span class="token operator">=</span><span class="token string">"namespace"</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>select<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"custom-form-item"</span> label<span class="token operator">=</span><span class="token string">"实例内容器："</span> style<span class="token operator">=</span><span class="token string">"margin: 10px"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"container"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"(item, index) in instanceItems"</span> <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"item.id"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"item-container"</span><span class="token operator">></span>              <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"content-container"</span> <span class="token operator">:</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"&#123; 'collapsed': item.collapsed &#125;"</span><span class="token operator">></span>                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"info"</span> v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"item.collapsed"</span><span class="token operator">></span>                  <span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> item<span class="token punctuation">.</span>name <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">/</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 显示名称 <span class="token operator">--</span><span class="token operator">></span>                  <span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> item<span class="token punctuation">.</span>image <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> item<span class="token punctuation">.</span>image_tag <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 显示镜像 <span class="token operator">--</span><span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"actions"</span> v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"item.collapsed"</span><span class="token operator">></span>                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">"expandInstanceItem(index)"</span><span class="token operator">></span>编辑<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">"removeInstanceItem(index)"</span> <span class="token operator">:</span>disabled<span class="token operator">=</span><span class="token string">"instanceItems.length === 1"</span><span class="token operator">></span>删除<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"info"</span> v<span class="token operator">-</span><span class="token keyword">else</span><span class="token operator">></span>                  <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>                  <span class="token operator">&lt;</span>span <span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> item<span class="token punctuation">.</span>name <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span><span class="token operator">--</span><span class="token operator">></span>                  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-with-help"</span> v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"!item.collapsed"</span><span class="token operator">></span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"名称："</span> prop<span class="token operator">=</span><span class="token string">"name"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-item-with-help"</span><span class="token operator">></span>                      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-containername"</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.name"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入容器名"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                        <span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"help-text"</span><span class="token operator">></span>                          <span class="token function">最长63个字符，只能包含小写字母、数字及分隔符</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span>，且不能以分隔符开头或结尾                        <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"镜像："</span> prop<span class="token operator">=</span><span class="token string">"image"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-item-with-help"</span><span class="token operator">></span>                      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-containername"</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.image"</span> placeholder<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"镜像版本："</span> prop<span class="token operator">=</span><span class="token string">"image_tag"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-item-with-resource"</span><span class="token operator">></span>                      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-containername"</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.image_tag"</span> placeholder<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"CPU/内存限制："</span> prop<span class="token operator">=</span><span class="token string">"form-item-with-help"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-item-resource"</span><span class="token operator">></span>                      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-container-cpu"</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"cpu-label"</span><span class="token operator">></span><span class="token constant">CPU</span>：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-row"</span><span class="token operator">></span>                          <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.cpu_request"</span> <span class="token operator">></span>                            <span class="token operator">&lt;</span>template #prepend<span class="token operator">></span>request<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>                          <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                          <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.cpu_limit"</span> <span class="token operator">></span>                            <span class="token operator">&lt;</span>template #prepend<span class="token operator">></span>limit<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>                          <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                          <span class="token operator">&lt;</span>label <span class="token operator">></span>m<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-container-memory"</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"cpu-label"</span><span class="token operator">></span>内存：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-row"</span><span class="token operator">></span>                          <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.memory_request"</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>template #prepend<span class="token operator">></span>request<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>                          <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                          <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.memory_limit"</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>template #prepend<span class="token operator">></span>limit<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>                          <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                          <span class="token operator">&lt;</span>label <span class="token operator">></span>MiB<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"工作目录："</span> prop<span class="token operator">=</span><span class="token string">"workspace"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-item-with-help"</span><span class="token operator">></span>                      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-containername"</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.workspace"</span> placeholder<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                        <span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"help-text"</span><span class="token operator">></span>                          指定容器运行后的工作目录                        <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"运行命令："</span> prop<span class="token operator">=</span><span class="token string">"cmd"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-item-with-help"</span><span class="token operator">></span>                      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-containername"</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.cmd"</span> placeholder<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                        <span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"help-text"</span><span class="token operator">></span>                          控制容器运行的输入命令                        <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"运行参数："</span> prop<span class="token operator">=</span><span class="token string">"args"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-item-with-help"</span><span class="token operator">></span>                      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-containername"</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.args"</span> placeholder<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                        <span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"help-text"</span><span class="token operator">></span>                          传递给容器运行命令的输入参数                        <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>                      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token constant">HTML</span> <span class="token operator">--</span><span class="token operator">></span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"容器健康检查"</span> prop<span class="token operator">=</span><span class="token string">"health"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-item-with-help"</span><span class="token operator">></span>                      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-healthContainer"</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>el<span class="token operator">-</span>checkbox v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.isLivenessCheckActive"</span><span class="token operator">></span>存活检查<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>checkbox<span class="token operator">></span>                        <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"item.isLivenessCheckActive"</span><span class="token operator">></span>                          <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"livenessdiv"</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"method-label"</span><span class="token operator">></span>检查方法：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                              <span class="token operator">&lt;</span>el<span class="token operator">-</span>select v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.livenessselectedCheckMethod"</span> placeholder<span class="token operator">=</span><span class="token string">"请选择"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>option label<span class="token operator">=</span><span class="token string">"HTTP"</span> value<span class="token operator">=</span><span class="token string">"http"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>option label<span class="token operator">=</span><span class="token string">"TCP"</span> value<span class="token operator">=</span><span class="token string">"tcp"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>option label<span class="token operator">=</span><span class="token string">"Exec"</span> value<span class="token operator">=</span><span class="token string">"exec"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>select<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token constant">HTTP</span>选项时显示 <span class="token operator">--</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"item.livenessselectedCheckMethod === 'http'"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"method-label"</span><span class="token operator">></span>检查协议：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>select v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.lives_selectedProtocol"</span> placeholder<span class="token operator">=</span><span class="token string">"请选择"</span><span class="token operator">></span>                                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>option label<span class="token operator">=</span><span class="token string">"HTTP"</span> value<span class="token operator">=</span><span class="token string">"http"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>                                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>option label<span class="token operator">=</span><span class="token string">"HTTPS"</span> value<span class="token operator">=</span><span class="token string">"https"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>                                <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>select<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                              <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>检查端口：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.lives_healthCheckPort"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入端口"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                                <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>端口范围<span class="token operator">:</span> <span class="token number">1</span><span class="token operator">~</span><span class="token number">65535</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                              <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>请求路径：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.lives_healthCheckPath"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入路径"</span> style<span class="token operator">=</span><span class="token string">"width: 200px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token constant">TCP</span>选项时显示 <span class="token operator">--</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">else</span><span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"item.livenessselectedCheckMethod === 'tcp'"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>检查端口：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.lives_healthCheckPort"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入端口"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                                <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>端口范围<span class="token operator">:</span> <span class="token number">1</span><span class="token operator">~</span><span class="token number">65535</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> Exec选项时显示 <span class="token operator">--</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">else</span><span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"item.livenessselectedCheckMethod === 'exec'"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"execution-command-container"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>执行命令：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.livenessCommand"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入命令"</span> style<span class="token operator">=</span><span class="token string">"width: 200px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 启动延时始终显示 <span class="token operator">--</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>启动延时：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                              <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.livenessStartDelay"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                              <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>范围：<span class="token number">0</span><span class="token operator">~</span><span class="token number">60</span>秒<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 响应超时始终显示 <span class="token operator">--</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>响应延时：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                              <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.livenessResDelay"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                              <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>范围：<span class="token number">2</span><span class="token operator">~</span><span class="token number">60</span>秒<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 间隔时间始终显示 <span class="token operator">--</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>间隔时间：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                              <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.livenessIntervalTime"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                              <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>范围：<span class="token number">2</span><span class="token operator">~</span><span class="token number">300</span>秒<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 健康阈值始终显示 <span class="token operator">--</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>健康阈值：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                              <span class="token operator">&lt;</span>el<span class="token operator">-</span>input disabled v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.livenessHealththreshold"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                              <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>范围：<span class="token number">1</span>次<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 不健康阈值始终显示 <span class="token operator">--</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>不健康阈值：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                              <span class="token operator">&lt;</span>el<span class="token operator">-</span>input  v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.livenessUnHealththreshold"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                              <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>范围：<span class="token number">1</span><span class="token operator">~</span><span class="token number">10</span>次<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                          <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 就绪性检查 <span class="token operator">--</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>div<span class="token operator">></span>                          <span class="token operator">&lt;</span>el<span class="token operator">-</span>checkbox v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.isReadinessCheckActive"</span><span class="token operator">></span>就绪检查<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>checkbox<span class="token operator">></span>                          <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"item.isReadinessCheckActive"</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"livenessdiv"</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"method-label"</span><span class="token operator">></span>检查方法：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>select v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.ReadinessSelectedCheckMethod"</span> placeholder<span class="token operator">=</span><span class="token string">"请选择"</span><span class="token operator">></span>                                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>option label<span class="token operator">=</span><span class="token string">"HTTP"</span> value<span class="token operator">=</span><span class="token string">"http"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>                                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>option label<span class="token operator">=</span><span class="token string">"TCP"</span> value<span class="token operator">=</span><span class="token string">"tcp"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>                                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>option label<span class="token operator">=</span><span class="token string">"Exec"</span> value<span class="token operator">=</span><span class="token string">"exec"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>                                <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>select<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token constant">HTTP</span>选项时显示 <span class="token operator">--</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"item.ReadinessSelectedCheckMethod === 'http'"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                                  <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"method-label"</span><span class="token operator">></span>检查协议：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>select v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.readnessSelectedProtocol"</span> placeholder<span class="token operator">=</span><span class="token string">"请选择"</span><span class="token operator">></span>                                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>option label<span class="token operator">=</span><span class="token string">"HTTP"</span> value<span class="token operator">=</span><span class="token string">"http"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>                                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>option label<span class="token operator">=</span><span class="token string">"HTTPS"</span> value<span class="token operator">=</span><span class="token string">"https"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>                                  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>select<span class="token operator">></span>                                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                                  <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>检查端口：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.readnessHealthCheckPort"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入端口"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                                  <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>端口范围<span class="token operator">:</span> <span class="token number">1</span><span class="token operator">~</span><span class="token number">65535</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                                  <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>请求路径：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.readnessHealthCheckPath"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入路径"</span> style<span class="token operator">=</span><span class="token string">"width: 200px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token constant">TCP</span>选项时显示 <span class="token operator">--</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">else</span><span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"item.ReadinessSelectedCheckMethod === 'tcp'"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                                  <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>检查端口：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.readnessHealthCheckPort"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入端口"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                                  <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>端口范围<span class="token operator">:</span> <span class="token number">1</span><span class="token operator">~</span><span class="token number">65535</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> Exec选项时显示 <span class="token operator">--</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">else</span><span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"item.ReadinessSelectedCheckMethod === 'exec'"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"execution-command-container"</span><span class="token operator">></span>                                  <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>执行命令：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.readnessCommand"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入命令"</span> style<span class="token operator">=</span><span class="token string">"width: 200px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 启动延时始终显示 <span class="token operator">--</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>启动延时：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.readnessStartDelay"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                                <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>范围：<span class="token number">0</span><span class="token operator">~</span><span class="token number">60</span>秒<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 响应超时始终显示 <span class="token operator">--</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>响应延时：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.readnessResDelay"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                                <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>范围：<span class="token number">2</span><span class="token operator">~</span><span class="token number">60</span>秒<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 间隔时间始终显示 <span class="token operator">--</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>间隔时间：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.readnessIntervalTime"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                                <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>范围：<span class="token number">2</span><span class="token operator">~</span><span class="token number">300</span>秒<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 健康阈值始终显示 <span class="token operator">--</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>健康阈值：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>input  v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.readnessHealththreshold"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                                <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>范围：<span class="token number">1</span><span class="token operator">~</span><span class="token number">10</span>次<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 不健康阈值始终显示 <span class="token operator">--</span><span class="token operator">></span>                              <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"check-method-container"</span><span class="token operator">></span>                                <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"command-label"</span><span class="token operator">></span>不健康阈值：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>                                <span class="token operator">&lt;</span>el<span class="token operator">-</span>input  v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"item.readnessUnHealththreshold"</span> style<span class="token operator">=</span><span class="token string">"width: 130px;margin-left: 20px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">></span>                                <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"port-range"</span><span class="token operator">></span>范围：<span class="token number">1</span><span class="token operator">~</span><span class="token number">10</span>次<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                          <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"副本数："</span> prop<span class="token operator">=</span><span class="token string">"replica"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-item-with-help"</span><span class="token operator">></span>                      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-containername"</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>el<span class="token operator">-</span>input<span class="token operator">-</span>number v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"createForm.replicas"</span> <span class="token operator">:</span>min<span class="token operator">=</span><span class="token string">"1"</span>  @change<span class="token operator">=</span><span class="token string">"changeReplicas"</span> <span class="token operator">/</span><span class="token operator">></span>                      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>                  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"actions"</span> v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"!item.collapsed"</span><span class="token operator">></span>                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>button v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"item.editMode"</span> @click<span class="token operator">=</span><span class="token string">"saveInstanceItem(index)"</span><span class="token operator">></span>保存<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>                  <span class="token operator">&lt;</span>el<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">"removeInstanceItem(index)"</span> <span class="token operator">:</span>disabled<span class="token operator">=</span><span class="token string">"instanceItems.length === 1"</span><span class="token operator">></span>删除<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">"primary"</span> @click<span class="token operator">=</span><span class="token string">"addInstanceItem"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"add-button"</span><span class="token operator">></span>          添加新实例        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">></span>      <span class="token operator">&lt;</span>span slot<span class="token operator">=</span><span class="token string">"footer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"dialog-footer"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>el<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">"createDialogVisible = false"</span><span class="token operator">></span>取消<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span>el<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">"primary"</span> @click<span class="token operator">=</span><span class="token string">"createDeployment"</span><span class="token operator">></span>创建<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>dialog<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 对话框 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>el<span class="token operator">-</span>dialog        title<span class="token operator">=</span><span class="token string">"副本数调整"</span>        v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"scaleDialogVisible"</span>        width<span class="token operator">=</span><span class="token string">"30%"</span>    <span class="token operator">></span>      <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token string">"text-align: center; padding: 20px;"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>label<span class="token operator">></span>实例数：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>input<span class="token operator">-</span>number v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"replicaCount"</span> <span class="token operator">:</span>min<span class="token operator">=</span><span class="token string">"1"</span> label<span class="token operator">=</span><span class="token string">"副本数:"</span> <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span>span slot<span class="token operator">=</span><span class="token string">"footer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"dialog-footer"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">"scaleDialogVisible = false"</span><span class="token operator">></span>取消<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">"primary"</span> @click<span class="token operator">=</span><span class="token string">"updateReplicas"</span><span class="token operator">></span>更新<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>dialog<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script setup<span class="token operator">></span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>nextTick<span class="token punctuation">,</span> onBeforeMount<span class="token punctuation">,</span> onBeforeUnmount<span class="token punctuation">,</span> reactive<span class="token punctuation">,</span> ref<span class="token punctuation">,</span> watch<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Loading <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@element-plus/icons-vue'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'element-plus/dist/index.css'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Refresh<span class="token punctuation">,</span> EditPen<span class="token punctuation">,</span> Search <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@element-plus/icons-vue'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>  onMounted <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> useRouter <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue-router'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ArrowLeft <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@element-plus/icons-vue'</span><span class="token punctuation">;</span><span class="token comment">// 在模板中可以直接使用 Refresh, EditPen, 和 Search</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>  <span class="token constant">CREATE_DEPLOYMENT</span><span class="token punctuation">,</span>  <span class="token constant">CREATE_NAMESPACE</span><span class="token punctuation">,</span> <span class="token constant">CREATE_STATEFULSET</span><span class="token punctuation">,</span> <span class="token constant">DELETE_DEPLOYMENT</span><span class="token punctuation">,</span>  <span class="token constant">DELETE_NAMESPACE</span><span class="token punctuation">,</span> <span class="token constant">DEPLOYMENT_DETAIL</span><span class="token punctuation">,</span> <span class="token constant">DEPLOYMENT_LIST</span><span class="token punctuation">,</span>  <span class="token constant">NAMESPACE_DETAIL</span><span class="token punctuation">,</span>  <span class="token constant">NAMESPACE_LIST</span><span class="token punctuation">,</span> <span class="token constant">RESTART_DEPLOYMENT</span><span class="token punctuation">,</span> <span class="token constant">STATEFULSET_DETAIL</span><span class="token punctuation">,</span> <span class="token constant">STATEFULSET_LIST</span><span class="token punctuation">,</span> <span class="token constant">UPDATE_DEPLOYMENT</span><span class="token punctuation">,</span> <span class="token constant">UPDATE_DEPLOYMENTSCALE</span><span class="token punctuation">,</span>  <span class="token constant">UPDATE_NAMESPACE</span><span class="token punctuation">,</span> <span class="token constant">UPDATE_STATEFULSET</span><span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"../../../api/k8s.js"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Codemirror <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue-codemirror'</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> javascript<span class="token punctuation">&#125;</span> <span class="token keyword">from</span>  <span class="token string">'@codemirror/lang-javascript'</span><span class="token comment">// import &#123; javascript &#125; from 'codemirror/lang-javascript'</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> oneDark <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@codemirror/theme-one-dark'</span><span class="token keyword">import</span> _ <span class="token keyword">from</span> <span class="token string">'lodash'</span><span class="token punctuation">;</span><span class="token keyword">import</span> json2yaml <span class="token keyword">from</span> <span class="token string">'json2yaml'</span><span class="token keyword">import</span> yaml2obj <span class="token keyword">from</span> <span class="token string">'js-yaml'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>ElMessage<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"element-plus"</span><span class="token punctuation">;</span><span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">"@/router/index.js"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ElMessageBox <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'element-plus'</span><span class="token punctuation">;</span><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">"axios"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>value<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"lodash/seq.js"</span><span class="token punctuation">;</span><span class="token keyword">const</span> extensions <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">javascript</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>oneDark<span class="token punctuation">]</span><span class="token keyword">const</span> dialogSelectedNamespace <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 对话框的v-model</span><span class="token keyword">const</span> scaleDialogVisible<span class="token operator">=</span>  <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token keyword">const</span> replicaCount <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">const</span> currentRow <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token function-variable function">openScaleDiglog</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">row</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>  replicaCount<span class="token punctuation">.</span>value <span class="token operator">=</span> row<span class="token punctuation">.</span>Replicas  currentRow<span class="token punctuation">.</span>value <span class="token operator">=</span> row  scaleDialogVisible<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token comment">// 从localStorage加载保存的命名空间</span><span class="token keyword">const</span> <span class="token function-variable function">loadSelection</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  selectedNamespace<span class="token punctuation">.</span>value <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'selectedNamespace'</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">''</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// 保存当前选中的命名空间到localStorage</span><span class="token keyword">const</span> <span class="token function-variable function">saveSelection</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">'selectedNamespace'</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">updateReplicas</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> updateScale <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span>      <span class="token punctuation">&#123;</span>        <span class="token literal-property property">namespace</span><span class="token operator">:</span> selectedNamespace<span class="token punctuation">,</span>        <span class="token literal-property property">deploymentName</span><span class="token operator">:</span> currentRow<span class="token punctuation">.</span>value<span class="token punctuation">.</span>deploymentName<span class="token punctuation">,</span>        <span class="token literal-property property">scaleNum</span><span class="token operator">:</span> replicaCount<span class="token punctuation">.</span>value      <span class="token punctuation">&#125;</span>  <span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"更新副本数至:"</span><span class="token punctuation">,</span> replicaCount<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">UPDATE_DEPLOYMENTSCALE</span><span class="token punctuation">(</span>updateScale<span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>resp<span class="token punctuation">)</span>    <span class="token function">getDeployData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 出错时返回空数组</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 在这里编写更新逻辑</span>  scaleDialogVisible<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// 关闭对话框</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">handleRowClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">row</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Pod'</span><span class="token punctuation">,</span>    <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">type</span><span class="token operator">:</span><span class="token string">'statefulset'</span><span class="token punctuation">,</span><span class="token literal-property property">deploymentName</span><span class="token operator">:</span> row<span class="token punctuation">.</span>statefulsetName <span class="token punctuation">,</span><span class="token literal-property property">namespace</span><span class="token operator">:</span> selectedNamespace<span class="token punctuation">.</span>value<span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> createDialogVisible <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> createForm <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">StatefulSetName</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>  <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>  <span class="token literal-property property">labels</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'apps'</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">''</span> <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token literal-property property">namespace</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>  <span class="token literal-property property">replicas</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> rules <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span> <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'请输入deployment名'</span><span class="token punctuation">,</span> <span class="token literal-property property">trigger</span><span class="token operator">:</span> <span class="token string">'blur'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 此处添加其他验证规则</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span> <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'请输入描述'</span><span class="token punctuation">,</span> <span class="token literal-property property">trigger</span><span class="token operator">:</span> <span class="token string">'blur'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 此处添加其他验证规则</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token literal-property property">namespace</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span> <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'请选择命名空间'</span><span class="token punctuation">,</span> <span class="token literal-property property">trigger</span><span class="token operator">:</span> <span class="token string">'change'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> formItems <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span>  <span class="token punctuation">&#123;</span> <span class="token literal-property property">id</span><span class="token operator">:</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'apps'</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">''</span> <span class="token punctuation">&#125;</span> <span class="token comment">// 初始标签项，第一项是不可删除的</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">addFormItem</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> newItem <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">id</span><span class="token operator">:</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token literal-property property">editable</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  formItems<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>newItem<span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>formItems<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">changeReplicas</span> <span class="token operator">=</span>  <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">removeFormItem</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> reversedIndex <span class="token operator">=</span> formItems<span class="token punctuation">.</span>value<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> index<span class="token punctuation">;</span> <span class="token comment">// 反转后的索引</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"reverse = "</span><span class="token punctuation">,</span>reversedIndex<span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>formItems<span class="token punctuation">.</span>value<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"no "</span><span class="token punctuation">,</span>index<span class="token punctuation">)</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>reversedIndex <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 确保不删除第一行标签项</span>    formItems<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>formItems<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> instanceItems <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">addInstanceItem</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 折叠所有现有的实例内容器</span>  instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    item<span class="token punctuation">.</span>collapsed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> id <span class="token operator">=</span> <span class="token function">generateUniqueId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> newItem <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">id</span><span class="token operator">:</span> id<span class="token punctuation">,</span>    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">image</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">image_tag</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">livenessCommand</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">dialogSelectedNamespace</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">livenessStartDelay</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 存活检查响应延时时间</span>    <span class="token literal-property property">livenessResDelay</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 存活检查间隔时间</span>    <span class="token literal-property property">livenessIntervalTime</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 存活检查健康阈值</span>    <span class="token literal-property property">livenessHealththreshold</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 存活检查不健康阈值</span>    <span class="token literal-property property">livenessUnHealththreshold</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">livenessselectedCheckMethod</span><span class="token operator">:</span><span class="token string">'http'</span><span class="token punctuation">,</span>    <span class="token literal-property property">lives_selectedProtocol</span><span class="token operator">:</span><span class="token string">'HTTP'</span><span class="token punctuation">,</span>    <span class="token comment">// 就绪检查的检查方法</span>    <span class="token literal-property property">ReadinessSelectedCheckMethod</span><span class="token operator">:</span><span class="token string">'http'</span><span class="token punctuation">,</span>    <span class="token comment">// 是否开启就绪检查</span>    <span class="token literal-property property">isReadinessCheckActive</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 是否开启存活检查</span>    <span class="token literal-property property">isLivenessCheckActive</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 就绪检查 检查的协议</span>    <span class="token literal-property property">readnessSelectedProtocol</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 就绪检查 检查的端口号</span>    <span class="token literal-property property">readnessHealthCheckPort</span><span class="token operator">:</span><span class="token string">'80'</span><span class="token punctuation">,</span>    <span class="token comment">// 就绪检查的路径</span>    <span class="token literal-property property">readnessHealthCheckPath</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 就绪检查TCP方式的端口号</span>    <span class="token literal-property property">readnessTcpCheckPort</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 就绪检查执行的命令</span>    <span class="token literal-property property">readnessCommand</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 就绪检查启动延时时间</span>    <span class="token literal-property property">readnessStartDelay</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 就绪检查响应时间</span>    <span class="token literal-property property">readnessResDelay</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 就绪检查间隔时间</span>    <span class="token literal-property property">readnessIntervalTime</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 就绪检查健康阈值</span>    <span class="token literal-property property">readnessHealththreshold</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 就绪检查不健康阈值</span>    <span class="token literal-property property">readnessUnHealththreshold</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">replicas</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">lives_tcpCheckPort</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">lives_healthCheckPath</span><span class="token operator">:</span><span class="token string">'/'</span><span class="token punctuation">,</span>    <span class="token literal-property property">lives_healthCheckPort</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">workspace</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">args</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">cmd</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">cpu_request</span><span class="token operator">:</span><span class="token string">'250'</span><span class="token punctuation">,</span>    <span class="token literal-property property">cpu_limit</span><span class="token operator">:</span><span class="token string">'500'</span><span class="token punctuation">,</span>    <span class="token literal-property property">memory_request</span><span class="token operator">:</span><span class="token string">'256'</span><span class="token punctuation">,</span>    <span class="token literal-property property">memory_limit</span><span class="token operator">:</span><span class="token string">'1024'</span><span class="token punctuation">,</span>    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">collapsed</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token literal-property property">editMode</span><span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>newItem<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// 函数用来把健康检查类型转换为相应的数字</span><span class="token keyword">const</span> <span class="token function-variable function">mapHealthCheckType</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">type</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span><span class="token string">"aaaaaaaaaaaaaaaaaaaaaaaaaaaa"</span><span class="token punctuation">)</span>  <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">case</span> <span class="token string">'http'</span><span class="token operator">:</span>      <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> <span class="token string">'tcp'</span><span class="token operator">:</span>      <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> <span class="token string">'exec'</span><span class="token operator">:</span>      <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token keyword">default</span><span class="token operator">:</span>      <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 或者任何合适的默认值</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">createDeployment</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> labels <span class="token operator">=</span> formItems<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>key <span class="token operator">&amp;&amp;</span> item<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      acc<span class="token punctuation">[</span>item<span class="token punctuation">.</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> item<span class="token punctuation">.</span>value<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> acc<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Instance Items before sending to backend:"</span><span class="token punctuation">,</span> instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>  instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Readiness Port for item:"</span><span class="token punctuation">,</span> item<span class="token punctuation">.</span>readnessHealthCheckPort<span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Parsed Port:"</span><span class="token punctuation">,</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>readnessHealthCheckPort<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 确认 parseInt 不是返回 NaN</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>readnessHealthCheckPort<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"Invalid port number: "</span><span class="token punctuation">,</span> item<span class="token punctuation">.</span>readnessHealthCheckPort<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"label = ================="</span><span class="token punctuation">,</span>labels<span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>createForm<span class="token punctuation">.</span>value<span class="token punctuation">.</span>replicas<span class="token punctuation">)</span>  <span class="token keyword">const</span> createParameters <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token string-property property">"namespace"</span><span class="token operator">:</span> createForm<span class="token punctuation">.</span>value<span class="token punctuation">.</span>namespace<span class="token punctuation">,</span>    <span class="token string-property property">"statefulset_name"</span><span class="token operator">:</span> createForm<span class="token punctuation">.</span>value<span class="token punctuation">.</span>StatefulSetName<span class="token punctuation">,</span>    <span class="token string-property property">"podName"</span><span class="token operator">:</span> createForm<span class="token punctuation">.</span>value<span class="token punctuation">.</span>StatefulSetName<span class="token punctuation">,</span>    <span class="token string-property property">"label"</span><span class="token operator">:</span> labels<span class="token punctuation">,</span>    <span class="token string-property property">"replicas"</span><span class="token operator">:</span> createForm<span class="token punctuation">.</span>value<span class="token punctuation">.</span>replicas<span class="token punctuation">,</span>    <span class="token string-property property">"containers"</span><span class="token operator">:</span> instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// 如果是空字符串则设置为 false</span>      <span class="token string-property property">"name"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>name<span class="token punctuation">,</span>      <span class="token string-property property">"image"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>image<span class="token punctuation">,</span>      <span class="token string-property property">"version"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>image_tag<span class="token punctuation">,</span>      <span class="token comment">// "ports": item.ports, // 确保这个字段是一个 int32 数组</span>      <span class="token string-property property">"limits_cpu"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>cpu_limit<span class="token punctuation">,</span>      <span class="token string-property property">"limit_memory"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>memory_limit<span class="token punctuation">,</span>      <span class="token string-property property">"requests_cpu"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>cpu_request<span class="token punctuation">,</span>      <span class="token string-property property">"requests_memory"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>memory_request<span class="token punctuation">,</span>      <span class="token string-property property">"work_space"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>workspace<span class="token punctuation">,</span>      <span class="token string-property property">"command"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>cmd<span class="token punctuation">,</span>      <span class="token string-property property">"args"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>args<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 前提是 args 是以空格分隔的字符串</span>      <span class="token string-property property">"readiness_healthCheck"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>isReadinessCheckActive <span class="token operator">||</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      <span class="token string-property property">"liveness_healthCheck"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>isLivenessCheckActive <span class="token operator">||</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      <span class="token string-property property">"healthcheckTypeLive"</span><span class="token operator">:</span> <span class="token function">mapHealthCheckType</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>livenessselectedCheckMethod<span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token string-property property">"healthcheckTypeRead"</span><span class="token operator">:</span> <span class="token function">mapHealthCheckType</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>ReadinessSelectedCheckMethod<span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token string-property property">"resource"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token string-property property">"livenessProbe"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token string-property property">"path"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>lives_healthCheckPath<span class="token punctuation">,</span>        <span class="token string-property property">"port"</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>lives_healthCheckPort<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string-property property">"cmd"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>livenessCommand<span class="token punctuation">,</span>        <span class="token string-property property">"initialDelaySecond"</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>livenessStartDelay<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string-property property">"timeoutSeconds"</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>livenessResDelay<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string-property property">"periodSeconds"</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>livenessIntervalTime<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string-property property">"successThreshold"</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>livenessHealththreshold<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string-property property">"failureThreshold"</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>livenessUnHealththreshold<span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token string-property property">"readinessProbe"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token string-property property">"path"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>readnessHealthCheckPath<span class="token punctuation">,</span>        <span class="token string-property property">"port"</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>readnessHealthCheckPort<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string-property property">"cmd"</span><span class="token operator">:</span> item<span class="token punctuation">.</span>readnessCommand<span class="token punctuation">,</span>        <span class="token string-property property">"initialDelaySecond"</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>readnessStartDelay<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string-property property">"timeoutSeconds"</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>readnessResDelay<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string-property property">"periodSeconds"</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>readnessIntervalTime<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string-property property">"successThreshold"</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>readnessHealththreshold<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string-property property">"failureThreshold"</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>readnessUnHealththreshold<span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>createParameters<span class="token punctuation">.</span>value<span class="token punctuation">)</span>  <span class="token comment">// 发送 createParameters.value 到后端...</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> resps <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">CREATE_STATEFULSET</span><span class="token punctuation">(</span>createParameters<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>resps<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>resps<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      createDialogVisible<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span>      ElMessage<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">"创建成功"</span><span class="token punctuation">)</span>      <span class="token function">getDeployData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      ElMessage<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>resps<span class="token punctuation">.</span>data<span class="token punctuation">.</span>message<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 出错时返回空数组</span>  <span class="token punctuation">&#125;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>createForm<span class="token punctuation">.</span>value<span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"标签："</span><span class="token punctuation">,</span>formItems<span class="token punctuation">.</span>value<span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"~~~~~~~~~~~~~~~~"</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 调用 goToCreateDeployment 函数以响应对话框的打开</span><span class="token function">watch</span><span class="token punctuation">(</span>createDialogVisible<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">newVal</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>newVal<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">goToCreateDeployment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">generateUniqueId</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 生成唯一标识符的逻辑</span>  <span class="token keyword">const</span> timestamp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> randomSuffix <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>timestamp<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>randomSuffix<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">expandInstanceItem</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>editMode <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>collapsed <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">saveInstanceItem</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>editMode <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>collapsed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">removeInstanceItem</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    instanceItems<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">onSubmit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> formEl <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  formEl<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">valid</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>valid<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 提交表单</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'表单验证失败'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> newNamespace <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>  <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> currentPage <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">let</span> pageSize <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token keyword">const</span> small <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token keyword">const</span> background <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token keyword">const</span> disabled <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token keyword">const</span> dialogVisible <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> currentDeployName <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> yamlContent <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 新增命名空间列表和选中的命名空间</span><span class="token keyword">const</span> namespaces <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 用于存储命名空间列表</span><span class="token keyword">const</span> selectedNamespace <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'selectedNamespace'</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 用于存储用户选择的命名空间</span><span class="token comment">// 方法来获取命名空间列表</span><span class="token comment">// fetchNamespaces 函数使用 getNSData 的返回值来更新命名空间的下拉菜单</span><span class="token keyword">const</span> <span class="token function-variable function">fetchNamespaces</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  namespaces<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getNSData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// fetchNamespaces 函数使用 getNSData 的返回值来更新命名空间的下拉菜单</span><span class="token comment">// getNSData 函数获取命名空间并返回名称数组</span><span class="token keyword">const</span> <span class="token function-variable function">getNSData</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">NAMESPACE_LIST</span><span class="token punctuation">(</span>namespaceAllParameters<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>resp <span class="token operator">&amp;&amp;</span> resp<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span> <span class="token operator">&amp;&amp;</span> resp<span class="token punctuation">.</span>data <span class="token operator">&amp;&amp;</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>Items<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 只返回命名空间的名称数组</span>      <span class="token keyword">return</span> resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>Items<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">ns</span> <span class="token operator">=></span> ns<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'无法获取数据或数据格式不正确'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 出错时返回空数组</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> namespaceAllParameters <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">page_size</span><span class="token operator">:</span> <span class="token number">100000</span><span class="token punctuation">,</span>  <span class="token literal-property property">page_number</span><span class="token operator">:</span> currentPage<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token function-variable function">formatImages</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">images</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> images<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">image</span> <span class="token operator">=></span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>image<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/div></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">goToCreateDeployment</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  dialogSelectedNamespace<span class="token punctuation">.</span>value <span class="token operator">=</span> selectedNamespace<span class="token punctuation">.</span>value<span class="token punctuation">;</span>  createDialogVisible<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token comment">// 清空现有的实例内容器并添加一个新的实例内容器</span>  instanceItems<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token function">addInstanceItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">//编辑器配置</span><span class="token keyword">const</span> cmOptions <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 语言及语法模式</span>  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'text/yaml'</span><span class="token punctuation">,</span>  <span class="token comment">// 主题</span>  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token string">'monokai'</span><span class="token punctuation">,</span>  <span class="token literal-property property">lint</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token comment">// 显示行数</span>  <span class="token literal-property property">lineNumbers</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token literal-property property">smartIndent</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//智能缩进</span>  <span class="token literal-property property">indentUnit</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token comment">// 智能缩进单元长度为 4 个空格</span>  <span class="token literal-property property">styleActiveLine</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 显示选中行的样式</span>  <span class="token literal-property property">matchBrackets</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//每当光标位于匹配的方括号旁边时，都会使其高亮显示</span>  <span class="token literal-property property">readOnly</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>  <span class="token literal-property property">lineWrapping</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">//自动换行</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">scaleDeployment</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">row</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>row<span class="token punctuation">.</span>deploymentName<span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>selectedNamespace<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">restartDeployment</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">row</span><span class="token punctuation">)</span> <span class="token operator">=></span><span class="token punctuation">&#123;</span>  ElMessageBox<span class="token punctuation">.</span><span class="token function">confirm</span><span class="token punctuation">(</span>      <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">确定要重启Deployment "</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>row<span class="token punctuation">.</span>deploymentName<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">" 吗?</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>      <span class="token string">'警告'</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        <span class="token literal-property property">confirmButtonText</span><span class="token operator">:</span> <span class="token string">'确认'</span><span class="token punctuation">,</span>        <span class="token literal-property property">cancelButtonText</span><span class="token operator">:</span> <span class="token string">'取消'</span><span class="token punctuation">,</span>        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'warning'</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span>  <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> restarParameters <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">deploymentName</span><span class="token operator">:</span> row<span class="token punctuation">.</span>deploymentName<span class="token punctuation">,</span>      <span class="token literal-property property">namespace</span><span class="token operator">:</span> selectedNamespace    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">RESTART_DEPLOYMENT</span><span class="token punctuation">(</span>restarParameters<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"————————————————"</span><span class="token punctuation">,</span>resp<span class="token punctuation">)</span>      <span class="token function">ElMessage</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'success'</span><span class="token punctuation">,</span>        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Deployment "</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>row<span class="token punctuation">.</span>deploymentName<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">" 已重启</span><span class="token template-punctuation string">`</span></span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">getDeployData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>      ElMessage<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">重启失败: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>e<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">handleSizeChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>val<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> items per page</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>  namespaceAllParameters<span class="token punctuation">.</span>page_size <span class="token operator">=</span> val  localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">'nspageSize'</span><span class="token punctuation">,</span>val<span class="token punctuation">)</span>  <span class="token function">getNSData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> handleInput <span class="token operator">=</span> _<span class="token punctuation">.</span><span class="token function">debounce</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">await</span> <span class="token function">search</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 使用 lodash 的 debounce 函数来防抖，防止搜索操作太频繁</span><span class="token keyword">const</span> <span class="token function-variable function">updateDeploy</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span><span class="token punctuation">&#123;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> updatedJson <span class="token operator">=</span> yaml2obj<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>yamlContent<span class="token punctuation">.</span>value<span class="token punctuation">)</span>    <span class="token keyword">const</span> jsonString <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>updatedJson<span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"?????????"</span><span class="token punctuation">,</span>updatedJson<span class="token punctuation">)</span>    updateParameters<span class="token punctuation">.</span>deploymentName <span class="token operator">=</span> currentDeployName<span class="token punctuation">.</span>value    updateParameters<span class="token punctuation">.</span>content <span class="token operator">=</span> jsonString    <span class="token keyword">await</span> <span class="token function">updateDeployData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">await</span> <span class="token function">getDeployData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    ElMessage<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>e<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">onChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span><span class="token operator">=></span> <span class="token punctuation">&#123;</span>  yamlContent<span class="token punctuation">.</span>value <span class="token operator">=</span> val<span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">handleCurrentChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">current page: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>val<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>  currentPage<span class="token punctuation">.</span>value <span class="token operator">=</span> val  namespaceAllParameters<span class="token punctuation">.</span>page_number <span class="token operator">=</span> val  localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">'nscurrentPage'</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 将当前页保存在 localStorage</span>  <span class="token function">getNSData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">viewYAML</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">row</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'显示YAML信息'</span><span class="token punctuation">,</span> row<span class="token punctuation">.</span>statefulsetName<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 这里可以编写显示YAML信息的逻辑</span>  <span class="token comment">// 假设提供了 `getYAMLContent` 方法来获取 YAML 内容</span>  <span class="token comment">// 直接使用传入的 row 作为 YAML 内容</span>  <span class="token function">getDeployDetailData</span><span class="token punctuation">(</span>row<span class="token punctuation">.</span>statefulsetName<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">confirmDelete</span> <span class="token operator">=</span>  <span class="token punctuation">(</span><span class="token parameter">row</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>confirmDelete  ElMessageBox<span class="token punctuation">.</span><span class="token function">confirm</span><span class="token punctuation">(</span>      <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">确定要删除Deployment "</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>row<span class="token punctuation">.</span>deploymentName<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">" 吗?</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>      <span class="token string">'警告'</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        <span class="token literal-property property">confirmButtonText</span><span class="token operator">:</span> <span class="token string">'确认'</span><span class="token punctuation">,</span>        <span class="token literal-property property">cancelButtonText</span><span class="token operator">:</span> <span class="token string">'取消'</span><span class="token punctuation">,</span>        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'warning'</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span>  <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> deleteNSParameters <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">deploymentName</span><span class="token operator">:</span> row<span class="token punctuation">.</span>deploymentName<span class="token punctuation">,</span>      <span class="token literal-property property">namespace</span><span class="token operator">:</span> selectedNamespace<span class="token punctuation">.</span>value<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>deleteNSParameters<span class="token punctuation">.</span>value<span class="token punctuation">)</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">DELETE_DEPLOYMENT</span><span class="token punctuation">(</span>deleteNSParameters<span class="token punctuation">.</span>value<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"————————————————"</span><span class="token punctuation">,</span>resp<span class="token punctuation">)</span>      <span class="token function">ElMessage</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'success'</span><span class="token punctuation">,</span>        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Deployment "</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>row<span class="token punctuation">.</span>deploymentName<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">" 已被删除</span><span class="token template-punctuation string">`</span></span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">getDeployData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>      ElMessage<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">删除失败: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>e<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token function">ElMessage</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'info'</span><span class="token punctuation">,</span>      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'已取消删除'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">formatDateTime</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">dateTimeString</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> dateTimeString<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'T'</span><span class="token punctuation">,</span> <span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'Z'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// 示例数据和方法</span><span class="token keyword">const</span> searchText <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> tableData <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span>  <span class="token punctuation">&#123;</span>    <span class="token literal-property property">statefulsetName</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token literal-property property">Labels</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">Status</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">Images</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token literal-property property">createTime</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>    <span class="token literal-property property">Operation</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>    <span class="token literal-property property">Replicas</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// ...其他数据项</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">search</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'执行搜索:'</span><span class="token punctuation">,</span> searchText<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> searchParameters <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">page_size</span><span class="token operator">:</span> pageSize<span class="token punctuation">,</span>    <span class="token literal-property property">page_number</span><span class="token operator">:</span> currentPage<span class="token punctuation">,</span>    <span class="token literal-property property">filterName</span><span class="token operator">:</span> searchText<span class="token punctuation">.</span>value<span class="token punctuation">,</span>    <span class="token literal-property property">namespace</span><span class="token operator">:</span> selectedNamespace  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">STATEFULSET_LIST</span><span class="token punctuation">(</span>searchParameters<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>resp <span class="token operator">&amp;&amp;</span> resp<span class="token punctuation">.</span>data <span class="token operator">&amp;&amp;</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>items<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      tableData<span class="token punctuation">.</span>value <span class="token operator">=</span> resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 计算运行中的副本数</span>        <span class="token keyword">const</span> runningReplicas <span class="token operator">=</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>replicas <span class="token operator">-</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>unavailableReplicas <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> expectedReplicas <span class="token operator">=</span> item<span class="token punctuation">.</span>spec<span class="token punctuation">.</span>replicas<span class="token punctuation">;</span>        <span class="token keyword">const</span> showLoading <span class="token operator">=</span> runningReplicas <span class="token operator">!==</span> expectedReplicas<span class="token punctuation">;</span> <span class="token comment">// 加载图标仅在期望和运行副本数不匹配时显示</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          <span class="token literal-property property">statefulsetName</span><span class="token operator">:</span> item<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>name<span class="token punctuation">,</span>          <span class="token literal-property property">Labels</span><span class="token operator">:</span> <span class="token function">formatLabels</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>labels<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token literal-property property">showLoading</span><span class="token operator">:</span> showLoading<span class="token punctuation">,</span> <span class="token comment">// 添加 showLoading 标志</span>          <span class="token comment">// 更新状态显示为“运行副本数/期望副本数”格式</span>          <span class="token literal-property property">Status</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>runningReplicas<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>item<span class="token punctuation">.</span>spec<span class="token punctuation">.</span>replicas<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>          <span class="token literal-property property">Images</span><span class="token operator">:</span> item<span class="token punctuation">.</span>spec<span class="token punctuation">.</span>template<span class="token punctuation">.</span>spec<span class="token punctuation">.</span>containers<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">container</span> <span class="token operator">=></span> container<span class="token punctuation">.</span>image<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token literal-property property">createTime</span><span class="token operator">:</span> <span class="token function">formatDateTime</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>creationTimestamp<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token literal-property property">Replicas</span><span class="token operator">:</span> item<span class="token punctuation">.</span>spec<span class="token punctuation">.</span>replicas          <span class="token comment">// 其他属性...</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 更新部署计数</span>    deploymentCount<span class="token punctuation">.</span>value <span class="token operator">=</span> resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>count<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">refresh</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token function">getDeployData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'刷新表格数据'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> updateParameters <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">deploymentName</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>  <span class="token literal-property property">namespace</span><span class="token operator">:</span> selectedNamespace<span class="token punctuation">,</span>  <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token function-variable function">updateDeployData</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"你吗的"</span><span class="token punctuation">,</span>updateParameters<span class="token punctuation">.</span>content<span class="token punctuation">)</span>    <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">UPDATE_STATEFULSET</span><span class="token punctuation">(</span>updateParameters<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>resp<span class="token punctuation">.</span>code <span class="token operator">!==</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      ElMessage<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>message<span class="token punctuation">)</span>      <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    ElMessage<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">"更新成功"</span><span class="token punctuation">)</span>    dialogVisible<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span>  <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>    ElMessage<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>e<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> deploymentParameters <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">page_size</span><span class="token operator">:</span> pageSize<span class="token punctuation">,</span>  <span class="token literal-property property">page_number</span><span class="token operator">:</span> currentPage<span class="token punctuation">,</span>  <span class="token literal-property property">namespace</span><span class="token operator">:</span> selectedNamespace<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 设置watcher来监听selectedNamespace的改变</span><span class="token function">watch</span><span class="token punctuation">(</span>selectedNamespace<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">newNamespace</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 更新deploymentParameters中的namespace</span>  deploymentParameters<span class="token punctuation">.</span>namespace <span class="token operator">=</span> newNamespace<span class="token punctuation">;</span>  <span class="token comment">// 重新调用getDeployData以获取新命名空间的部署数据</span>  <span class="token function">getDeployData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> deploymentCount <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">// 在这里创建一个方法来将 Labels 对象转换为一个字符串数组</span><span class="token comment">// 格式化标签为字符串数组</span><span class="token keyword">const</span> <span class="token function-variable function">formatLabels</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">labelsMap</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> labelsMap <span class="token operator">?</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>labelsMap<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>key<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>value<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> systemNamespaces <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'default'</span><span class="token punctuation">,</span> <span class="token string">'kube-system'</span><span class="token punctuation">,</span> <span class="token string">'kube-public'</span><span class="token punctuation">,</span> <span class="token string">'kube-node-lease'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">getDeployData</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">STATEFULSET_LIST</span><span class="token punctuation">(</span>deploymentParameters<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>resp <span class="token operator">&amp;&amp;</span> resp<span class="token punctuation">.</span>data <span class="token operator">&amp;&amp;</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>items<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      tableData<span class="token punctuation">.</span>value <span class="token operator">=</span> resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 计算运行中的副本数</span>        <span class="token keyword">const</span> runningReplicas <span class="token operator">=</span> item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>replicas <span class="token operator">-</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>status<span class="token punctuation">.</span>unavailableReplicas <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> expectedReplicas <span class="token operator">=</span> item<span class="token punctuation">.</span>spec<span class="token punctuation">.</span>replicas<span class="token punctuation">;</span>        <span class="token keyword">const</span> showLoading <span class="token operator">=</span> runningReplicas <span class="token operator">!==</span> expectedReplicas<span class="token punctuation">;</span> <span class="token comment">// 加载图标仅在期望和运行副本数不匹配时显示</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          <span class="token literal-property property">statefulsetName</span><span class="token operator">:</span> item<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>name<span class="token punctuation">,</span>          <span class="token literal-property property">Labels</span><span class="token operator">:</span> <span class="token function">formatLabels</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>labels<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token literal-property property">showLoading</span><span class="token operator">:</span> showLoading<span class="token punctuation">,</span> <span class="token comment">// 添加 showLoading 标志</span>          <span class="token comment">// 更新状态显示为“运行副本数/期望副本数”格式</span>          <span class="token literal-property property">Status</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>runningReplicas<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>item<span class="token punctuation">.</span>spec<span class="token punctuation">.</span>replicas<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>          <span class="token literal-property property">Images</span><span class="token operator">:</span> item<span class="token punctuation">.</span>spec<span class="token punctuation">.</span>template<span class="token punctuation">.</span>spec<span class="token punctuation">.</span>containers<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">container</span> <span class="token operator">=></span> container<span class="token punctuation">.</span>image<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token literal-property property">createTime</span><span class="token operator">:</span> <span class="token function">formatDateTime</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>creationTimestamp<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token literal-property property">Replicas</span><span class="token operator">:</span> item<span class="token punctuation">.</span>spec<span class="token punctuation">.</span>replicas          <span class="token comment">// 其他属性...</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 更新部署计数</span>    deploymentCount<span class="token punctuation">.</span>value <span class="token operator">=</span> resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>count<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">getDeployDetailData</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">statefulName</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> StatefulsetDetailparams <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">statefulset_name</span><span class="token operator">:</span> statefulName<span class="token punctuation">,</span>      <span class="token literal-property property">namespace</span><span class="token operator">:</span> selectedNamespace<span class="token punctuation">.</span>value    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"ddddddddd"</span><span class="token punctuation">,</span>StatefulsetDetailparams<span class="token punctuation">)</span>    <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">STATEFULSET_DETAIL</span><span class="token punctuation">(</span>StatefulsetDetailparams<span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"cccccccc"</span><span class="token punctuation">,</span>resp<span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"yaml ======="</span><span class="token punctuation">,</span>json2yaml<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>    yamlContent<span class="token punctuation">.</span>value <span class="token operator">=</span> json2yaml<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 确保将数据赋值给 yamlContent</span>    currentDeployName<span class="token punctuation">.</span>value <span class="token operator">=</span> resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>name    updateParameters<span class="token punctuation">.</span>content <span class="token operator">=</span> yamlContent<span class="token punctuation">.</span>value    <span class="token keyword">await</span>  <span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    dialogVisible<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"你吗"</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 在setup函数中定义定时器</span><span class="token keyword">let</span> refreshInterval <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token function">loadSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  refreshInterval <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token function">getDeployData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">30000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 每30秒刷新一次</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 组件卸载前保存命名空间</span><span class="token function">onBeforeUnmount</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token function">saveSelection</span><span class="token punctuation">(</span>selectedNamespace<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">onBeforeMount</span><span class="token punctuation">(</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token function">clearInterval</span><span class="token punctuation">(</span>refreshInterval<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 尝试从 localStorage 中读取状态</span>  <span class="token keyword">const</span> savedPageSize <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'nspageSize'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> savedCurrentPage <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'nscurrentPage'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 如果存在则更新到响应式变量中</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>savedPageSize<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    pageSize<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>savedPageSize<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>savedCurrentPage<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    currentPage<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>savedCurrentPage<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">getDeployData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token keyword">await</span> <span class="token function">fetchNamespaces</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取并更新命名空间列表</span>  <span class="token comment">// getNSAllData()</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>style scoped<span class="token operator">></span><span class="token punctuation">.</span>loading<span class="token operator">-</span>icon <span class="token punctuation">&#123;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 20px<span class="token punctuation">;</span> <span class="token comment">/* 或者您希望的任何尺寸 */</span>  <span class="token literal-property property">height</span><span class="token operator">:</span> 20px<span class="token punctuation">;</span> <span class="token comment">/* 保持与宽度相同以保持图标的纵横比 */</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 5px<span class="token punctuation">;</span> <span class="token comment">/* 添加一点空间在状态文本和图标之间 */</span>  <span class="token literal-property property">animation</span><span class="token operator">:</span> loading<span class="token operator">-</span>spin 2s linear infinite<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 如果需要，可以移除这个类，因为它可能会导致对齐问题 */</span><span class="token comment">/* .loader &#123;  animation: loader-spin 1s linear infinite;&#125; */</span>@keyframes loading<span class="token operator">-</span>spin <span class="token punctuation">&#123;</span>  <span class="token number">0</span><span class="token operator">%</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">transform</span><span class="token operator">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>0deg<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token number">100</span><span class="token operator">%</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">transform</span><span class="token operator">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>360deg<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>container <span class="token punctuation">&#123;</span>  <span class="token literal-property property">margin</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  background<span class="token operator">-</span>color<span class="token operator">:</span> #<span class="token constant">F2F2F2</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>deployment<span class="token operator">-</span>header <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>  justify<span class="token operator">-</span>content<span class="token operator">:</span> space<span class="token operator">-</span>between<span class="token punctuation">;</span>  <span class="token literal-property property">padding</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  <span class="token literal-property property">margin</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> <span class="token operator">-</span>10px<span class="token punctuation">;</span>  <span class="token literal-property property">background</span><span class="token operator">:</span> #<span class="token constant">FFF</span><span class="token punctuation">;</span>  <span class="token literal-property property">border</span><span class="token operator">:</span> 2px solid #ebeef5<span class="token punctuation">;</span>  box<span class="token operator">-</span>shadow<span class="token operator">:</span> <span class="token number">0</span> 2px 10px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 新增左侧部分样式，放置“命名空间：”文本和下拉框 */</span><span class="token punctuation">.</span>left<span class="token operator">-</span>section <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 确保下拉框和文本在同一行 */</span><span class="token punctuation">.</span>el<span class="token operator">-</span>select <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 为下拉框添加左侧间隔 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>header <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>  justify<span class="token operator">-</span>content<span class="token operator">:</span> space<span class="token operator">-</span>between<span class="token punctuation">;</span> <span class="token comment">/* 添加此属性对子元素进行分散对齐 */</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> 0px<span class="token punctuation">;</span>  <span class="token literal-property property">gap</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  <span class="token literal-property property">padding</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  <span class="token literal-property property">background</span><span class="token operator">:</span> #<span class="token constant">FFF</span><span class="token punctuation">;</span>  <span class="token literal-property property">border</span><span class="token operator">:</span> 2px solid #ebeef5<span class="token punctuation">;</span>  box<span class="token operator">-</span>shadow<span class="token operator">:</span> <span class="token number">0</span> 2px 12px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>search<span class="token operator">-</span>input <span class="token punctuation">&#123;</span>  <span class="token comment">/*flex-grow: 1;*/</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 200px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>table<span class="token operator">-</span>wrapper <span class="token punctuation">&#123;</span>  <span class="token literal-property property">background</span><span class="token operator">:</span> #<span class="token constant">FFF</span><span class="token punctuation">;</span>  <span class="token literal-property property">border</span><span class="token operator">:</span> 2px solid #ebeef5<span class="token punctuation">;</span> <span class="token comment">/* 浅色边框线 */</span>  box<span class="token operator">-</span>shadow<span class="token operator">:</span> <span class="token number">0</span> 2px 12px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>paginations <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>top<span class="token operator">:</span> 10px<span class="token punctuation">;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 20px<span class="token punctuation">;</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 左侧组合样式，创建按钮和搜索框靠在一起 */</span><span class="token punctuation">.</span>left<span class="token operator">-</span>group <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>  <span class="token literal-property property">gap</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* You can adjust the gap as needed */</span><span class="token punctuation">&#125;</span><span class="token comment">/* 右侧刷新按钮 */</span><span class="token punctuation">.</span>right<span class="token operator">-</span>group <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>yaml<span class="token operator">-</span>content <span class="token punctuation">&#123;</span>  background<span class="token operator">-</span>color<span class="token operator">:</span> #f5f5f5<span class="token punctuation">;</span>  border<span class="token operator">-</span>left<span class="token operator">:</span> 3px solid #4795EE<span class="token punctuation">;</span>  <span class="token literal-property property">padding</span><span class="token operator">:</span> 15px<span class="token punctuation">;</span>  white<span class="token operator">-</span>space<span class="token operator">:</span> pre<span class="token operator">-</span>wrap<span class="token punctuation">;</span>  text<span class="token operator">-</span>align<span class="token operator">:</span> left<span class="token punctuation">;</span>  <span class="token literal-property property">margin</span><span class="token operator">:</span> 20px <span class="token number">0</span><span class="token punctuation">;</span>  overflow<span class="token operator">-</span>x<span class="token operator">:</span> auto<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>status<span class="token operator">-</span>active <span class="token punctuation">&#123;</span>  <span class="token literal-property property">color</span><span class="token operator">:</span> #67C23A<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>status<span class="token operator">-</span>inactive <span class="token punctuation">&#123;</span>  <span class="token literal-property property">color</span><span class="token operator">:</span> red<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>dialog<span class="token operator">-</span>footer <span class="token punctuation">&#123;</span>  <span class="token comment">/*text-align: right;*/</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  justify<span class="token operator">-</span>content<span class="token operator">:</span> flex<span class="token operator">-</span>end<span class="token punctuation">;</span>  <span class="token literal-property property">padding</span><span class="token operator">:</span> 8px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>deployment<span class="token operator">-</span>header <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>  <span class="token literal-property property">height</span><span class="token operator">:</span> 30px<span class="token punctuation">;</span>  <span class="token literal-property property">padding</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  <span class="token literal-property property">margin</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> <span class="token operator">-</span>10px<span class="token punctuation">;</span>  <span class="token literal-property property">background</span><span class="token operator">:</span> #<span class="token constant">FFF</span><span class="token punctuation">;</span>  <span class="token literal-property property">border</span><span class="token operator">:</span> 2px solid #ebeef5<span class="token punctuation">;</span>  box<span class="token operator">-</span>shadow<span class="token operator">:</span> <span class="token number">0</span> 2px 10px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>form<span class="token operator">-</span>item<span class="token operator">-</span><span class="token keyword">with</span><span class="token operator">-</span>help <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>top<span class="token operator">:</span> 10px<span class="token punctuation">;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>form<span class="token operator">-</span>item<span class="token operator">-</span><span class="token keyword">with</span><span class="token operator">-</span>resource <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>top<span class="token operator">:</span> 10px<span class="token punctuation">;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>form<span class="token operator">-</span>item <span class="token punctuation">&#123;</span>  flex<span class="token operator">-</span>wrap<span class="token operator">:</span> wrap<span class="token punctuation">;</span> <span class="token comment">/* 确保换行 */</span>  <span class="token comment">/*align-items: center; !* 如果需要垂直居中 *!*/</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 保持垂直间距 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>item <span class="token punctuation">&#123;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 200px<span class="token punctuation">;</span>  margin<span class="token operator">-</span>right<span class="token operator">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>help<span class="token operator">-</span>text <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> block<span class="token punctuation">;</span> <span class="token comment">/* 保证帮助文本在新的行显示 */</span>  font<span class="token operator">-</span>size<span class="token operator">:</span> 12px<span class="token punctuation">;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 1000px<span class="token punctuation">;</span>  <span class="token literal-property property">color</span><span class="token operator">:</span> #<span class="token number">999999</span><span class="token punctuation">;</span>  margin<span class="token operator">-</span>top<span class="token operator">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span><span class="token keyword">with</span><span class="token operator">-</span>help <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>top<span class="token operator">:</span> 20px<span class="token punctuation">;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  flex<span class="token operator">-</span>direction<span class="token operator">:</span> column<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>deployname <span class="token punctuation">&#123;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 300px<span class="token punctuation">;</span> <span class="token comment">/* 限制这个div的宽度 */</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  flex<span class="token operator">-</span>direction<span class="token operator">:</span> column<span class="token punctuation">;</span> <span class="token comment">/* 让子元素垂直排列 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>containername <span class="token punctuation">&#123;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 250px<span class="token punctuation">;</span> <span class="token comment">/* 限制这个div的宽度 */</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> <span class="token operator">-</span>50px<span class="token punctuation">;</span>  flex<span class="token operator">-</span>direction<span class="token operator">:</span> column<span class="token punctuation">;</span> <span class="token comment">/* 让子元素垂直排列 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>add<span class="token operator">-</span>button <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>top<span class="token operator">:</span> <span class="token operator">-</span>20px<span class="token punctuation">;</span> <span class="token comment">/* 添加按钮与输入行之间的空间 */</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 200px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>container<span class="token operator">-</span>cpu <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  flex<span class="token operator">-</span>direction<span class="token operator">:</span> column<span class="token punctuation">;</span>  <span class="token comment">/*padding-left: -20px; !* 往右移动整个容器 *!*/</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>cpu<span class="token operator">-</span>label <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> 5px<span class="token punctuation">;</span> <span class="token comment">/* 调整为所需的间距 */</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> <span class="token operator">-</span>50px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>container <span class="token punctuation">&#123;</span>  <span class="token literal-property property">margin</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>item<span class="token operator">-</span>container <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>content<span class="token operator">-</span>container <span class="token punctuation">&#123;</span>  background<span class="token operator">-</span>color<span class="token operator">:</span> #<span class="token constant">F2F2F2</span><span class="token punctuation">;</span>  <span class="token literal-property property">padding</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 700px<span class="token punctuation">;</span>  justify<span class="token operator">-</span>content<span class="token operator">:</span> space<span class="token operator">-</span>between<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>  <span class="token literal-property property">transition</span><span class="token operator">:</span> height <span class="token number">0</span><span class="token punctuation">.</span>3s<span class="token punctuation">;</span>  <span class="token literal-property property">overflow</span><span class="token operator">:</span> hidden<span class="token punctuation">;</span>  <span class="token literal-property property">position</span><span class="token operator">:</span> relative<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>content<span class="token operator">-</span>container<span class="token punctuation">.</span>collapsed <span class="token punctuation">&#123;</span>  <span class="token literal-property property">height</span><span class="token operator">:</span> 40px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>info <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>actions <span class="token punctuation">&#123;</span>  <span class="token literal-property property">position</span><span class="token operator">:</span> absolute<span class="token punctuation">;</span>  <span class="token literal-property property">right</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 调整为需要的值 */</span>  <span class="token literal-property property">top</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 调整为需要的值 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>row <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>  <span class="token literal-property property">gap</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  <span class="token comment">/*margin-left: -50px;*/</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>row <span class="token punctuation">.</span>el<span class="token operator">-</span>input <span class="token punctuation">&#123;</span>  <span class="token literal-property property">flex</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>row label <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 或者需要的任何值 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>row <span class="token punctuation">.</span>el<span class="token operator">-</span>input <span class="token punctuation">.</span>el<span class="token operator">-</span>input__inner <span class="token punctuation">&#123;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span> <span class="token comment">/* 让输入框充满其容器 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>containername p <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 为“CPU：”下方添加一些间隔 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>form<span class="token operator">-</span>item<span class="token operator">-</span>resource <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 20px<span class="token punctuation">;</span> <span class="token comment">/* 整个表单项向右移动 20px */</span>  margin<span class="token operator">-</span>top<span class="token operator">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>custom<span class="token operator">-</span>form<span class="token operator">-</span>item <span class="token punctuation">&#123;</span>  <span class="token literal-property property">height</span><span class="token operator">:</span> auto<span class="token punctuation">;</span>  <span class="token literal-property property">overflow</span><span class="token operator">:</span> auto<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>check<span class="token operator">-</span>method<span class="token operator">-</span>container<span class="token punctuation">,</span><span class="token punctuation">.</span>execution<span class="token operator">-</span>command<span class="token operator">-</span>container <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>  margin<span class="token operator">-</span>bottom<span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 添加一些垂直间距 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>method<span class="token operator">-</span>label <span class="token punctuation">&#123;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 100px<span class="token punctuation">;</span>  <span class="token literal-property property">margin</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span>  margin<span class="token operator">-</span>right<span class="token operator">:</span> 20px<span class="token punctuation">;</span> <span class="token comment">/* 文本与选择框/输入框之间的间隔 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>command<span class="token operator">-</span>label <span class="token punctuation">&#123;</span>  <span class="token comment">/*margin-right: 20px; !* 文本与输入框之间的间隔 *!*/</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 100px<span class="token punctuation">;</span>  <span class="token literal-property property">margin</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>livenessdiv <span class="token punctuation">&#123;</span>  background<span class="token operator">-</span>color<span class="token operator">:</span> white<span class="token punctuation">;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> 500px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>port<span class="token operator">-</span>range <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>input<span class="token operator">-</span>healthContainer <span class="token punctuation">&#123;</span>  margin<span class="token operator">-</span>left<span class="token operator">:</span> <span class="token operator">-</span>50px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>el<span class="token operator">-</span>select<span class="token punctuation">,</span><span class="token punctuation">.</span>el<span class="token operator">-</span>input <span class="token punctuation">&#123;</span>  <span class="token comment">/*flex-grow: 1; !* 输入框和选择框将占据剩余空间 *!*/</span>  max<span class="token operator">-</span>width<span class="token operator">:</span> <span class="token function">calc</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token operator">%</span> <span class="token operator">-</span> 100px<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* 限制最大宽度，这里的100px是示例，可以根据实际情况调整 */</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>button<span class="token operator">-</span>group <span class="token punctuation">&#123;</span>  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>  justify<span class="token operator">-</span>content<span class="token operator">:</span> center<span class="token punctuation">;</span>  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>  <span class="token literal-property property">gap</span><span class="token operator">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 调整按钮之间的间隔 */</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;k8s管理系统项目前端-workload&quot;&gt;&lt;a href=&quot;#k8s管理系统项目前端-workload&quot; class=&quot;headerlink&quot; title=&quot;k8s管理系统项目前端-workload&quot;&gt;&lt;/a&gt;k8s管理系统项目前端-workload&lt;/h1&gt;&lt;</summary>
      
    
    
    
    <category term="kubernetes" scheme="http://dycloud.fun/categories/kubernetes/"/>
    
    
    <category term="kubernetes" scheme="http://dycloud.fun/tags/kubernetes/"/>
    
    <category term="云原生" scheme="http://dycloud.fun/tags/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
  </entry>
  
</feed>
